openapi: 3.0.3
info:
    title: IVCAP
    description: "\n**IVCAP** is for **service providers** to **offer** analytics **services** \nand for **consumers** to **order** customised **products** produced by said services.\n\n### Typical Workflow\n\n1. Obtain an token from the ID Providers listed in the document returned \nby [/1/authinfo.yaml](/1/authinfo.yaml). The token needs to be added\nas a bearer token via the \n<code>Authorization</code> header to every request to this service.\n1. <a href=\"#get-/1/services\">List</a> all available service.\n1. Select appropriate service and retrieve details, like parameters via \n<a href=\"#get-/1/services/-id-\">Read Service</a>.\n1. Create the appropriate json request and POST it to \n<a href=\"#post-/1/orders\">Create Order</a>. (see the example in the\nservice description.)\n1. The reply from the above POST operation contains a link (<code>links/self</code>) to the\nnewly create order record accessible via <a href=\"#get-/1/orders/-id-\">Read Order</a>.\n1. Progress of the order fulfillment can be tracked via repeated calls to \n<a href=\"#get-/1/orders/-id-\">Read Order</a> and the returned <code>status</code>.\n1. Any information products created in the context of an order will be listed under <code>producs</code>\nwhich also include a link to the respective <a href=\"#get-/1/artifacts/-id-\">Read Artifact</a>.\n1. The <a href=\"#get-/1/artifacts/-id-\">Read Artifact</a> service will return more details for \neach artifact, including a <code>data</code> link through which the artifact content can be downloaded. (The\ndownload link is also included in the <code>products</code> list returned by \nthe <a href=\"#get-/1/orders/-id-\">Read Order</a> service ).\n\nPlease note that all schemas in this API are following the [{json:api}](https://jsonapi.org/) specs \nwherever appropriate.\n\n### High-level Architecture\n\nOn receiving an order through this **API**, the internal *Order Dispatcher* is \ncreating a *workflow*, dispatching that to the \n[Argo workflow engine](https://argoproj.github.io/argo-workflows/) \nand create appropriate records in [Magda](https://magda.io/). \nAs the execution of the workflow progresses, appropriate updates are posted to the order record in Magda, \nsuch as data accessed or produced. In addition, any information products created will be\nstored via [Minio](https://min.io/) in a deployment specific object store \nand made accessible through the *Artifact* service.\n\t"
    version: "0.27"
servers:
    - url: http://localhost:8088
      description: This endpoint hosts all the IVCAP services.
paths:
    /1/artifacts:
        get:
            tags:
                - artifact
            summary: list artifact
            description: list artifacts
            operationId: artifact#list
            parameters:
                - name: limit
                  in: query
                  description: |-
                    The $limit system query option requests the number of items in the queried
                    				collection to be included in the result.
                  allowEmptyValue: true
                  schema:
                    type: integer
                    description: |-
                        The $limit system query option requests the number of items in the queried
                        				collection to be included in the result.
                    default: 10
                    example: 10
                    minimum: 1
                    maximum: 50
                  example: 10
                - name: page
                  in: query
                  description: |-
                    The content of 'page' is returned in the 'links' part of a previous query and
                    				will when set, ALL other parameters, except for 'limit' are ignored.
                  allowEmptyValue: true
                  schema:
                    type: string
                    description: |-
                        The content of 'page' is returned in the 'links' part of a previous query and
                        				will when set, ALL other parameters, except for 'limit' are ignored.
                    example: gdsgQwhdgd
                  example: gdsgQwhdgd
                - name: filter
                  in: query
                  description: |-
                    The 'filter' system query option allows clients to filter a collection of
                    				resources that are addressed by a request URL. The expression specified with 'filter'
                    				is evaluated for each resource in the collection, and only items where the expression
                    				evaluates to true are included in the response.
                  allowEmptyValue: true
                  schema:
                    type: string
                    description: |-
                        The 'filter' system query option allows clients to filter a collection of
                        				resources that are addressed by a request URL. The expression specified with 'filter'
                        				is evaluated for each resource in the collection, and only items where the expression
                        				evaluates to true are included in the response.
                    example: name ~= 'Scott%'
                  example: name ~= 'Scott%'
                - name: order-by
                  in: query
                  description: |-
                    The 'orderby' query option allows clients to request resources in either
                    				ascending order using asc or descending order using desc. If asc or desc not specified,
                    				then the resources will be ordered in ascending order. The request below orders Trips on
                    				property EndsAt in descending order.
                  allowEmptyValue: true
                  schema:
                    type: string
                    description: |-
                        The 'orderby' query option allows clients to request resources in either
                        				ascending order using asc or descending order using desc. If asc or desc not specified,
                        				then the resources will be ordered in ascending order. The request below orders Trips on
                        				property EndsAt in descending order.
                    example: orderby=EndsAt
                  example: orderby=EndsAt
                - name: order-desc
                  in: query
                  description: When set order result in descending order. Ascending order is the default.
                  allowEmptyValue: true
                  schema:
                    type: boolean
                    description: When set order result in descending order. Ascending order is the default.
                    default: false
                    example: true
                  example: false
                - name: at-time
                  in: query
                  description: Return the state of the respective resources at that time [now]
                  allowEmptyValue: true
                  schema:
                    type: string
                    description: Return the state of the respective resources at that time [now]
                    example: "1996-12-19T16:39:57-08:00"
                    format: date-time
                  example: "1996-12-19T16:39:57-08:00"
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ArtifactListRT'
                            example:
                                artifacts:
                                    - id: cayp:artifact:0000-000
                                      links:
                                        describedBy:
                                            href: https://api.com/swagger/...
                                            type: application/openapi3+json
                                        self: Ipsam deleniti magnam nihil et.
                                      mime-type: image/jpeg
                                      name: Fire risk for Lot2
                                      size: 19000
                                      status: ready
                                    - id: cayp:artifact:0000-000
                                      links:
                                        describedBy:
                                            href: https://api.com/swagger/...
                                            type: application/openapi3+json
                                        self: Ipsam deleniti magnam nihil et.
                                      mime-type: image/jpeg
                                      name: Fire risk for Lot2
                                      size: 19000
                                      status: ready
                                at-time: "1996-12-19T16:39:57-08:00"
                                links:
                                    first: https://api.com/foo/...
                                    next: https://api.com/foo/...
                                    self: https://api.com/foo/...
                "400":
                    description: 'invalid-credential: Provided credential is not valid'
                "401":
                    description: 'not-authorized: unauthorized access request'
                "403":
                    description: 'invalid-scopes: Token scopes are invalid'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InvalidScopesT'
                "422":
                    description: 'invalid-parameter: Request contained semantically wrong paramter value'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InvalidParameterValue'
                "501":
                    description: 'not-implemented: Method is not yet implemented'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/NotImplementedT'
            security:
                - jwt_header_Authorization:
                    - consumer:read
                    - consumer:write
        post:
            tags:
                - artifact
            summary: upload artifact
            description: Upload content and create a artifacts.
            operationId: artifact#upload
            parameters:
                - name: Content-Type
                  in: header
                  description: Content-Type header, MUST define type of uploaded content.
                  allowEmptyValue: true
                  schema:
                    type: string
                    description: Content-Type header, MUST define type of uploaded content.
                    example: application/x-netcdf4
                  example: application/x-netcdf4
                - name: Content-Encoding
                  in: header
                  description: Content-Encoding header, MAY define encoding of content.
                  allowEmptyValue: true
                  schema:
                    type: string
                    description: Content-Encoding header, MAY define encoding of content.
                    example: gzip
                  example: gzip
                - name: Content-Length
                  in: header
                  description: Content-Length header, MAY define size of expected upload.
                  allowEmptyValue: true
                  schema:
                    type: integer
                    description: Content-Length header, MAY define size of expected upload.
                    example: 2376
                    format: int64
                  example: 2376
                - name: X-Name
                  in: header
                  description: X-Name header, MAY define a more human friendly name. Reusing a name will NOT override an existing artifact with the same name
                  allowEmptyValue: true
                  schema:
                    type: string
                    description: X-Name header, MAY define a more human friendly name. Reusing a name will NOT override an existing artifact with the same name
                    example: field-trip-jun-22
                  example: field-trip-jun-22
                - name: X-Collection
                  in: header
                  description: X-Collection header, MAY define an collection name as a simple way of grouping artifacts
                  allowEmptyValue: true
                  schema:
                    type: string
                    description: X-Collection header, MAY define an collection name as a simple way of grouping artifacts
                    example: field-trip-jun-22
                  example: field-trip-jun-22
                - name: X-Content-Type
                  in: header
                  description: X-Content-Type header, used for initial, empty content creation requests.
                  allowEmptyValue: true
                  schema:
                    type: string
                    description: X-Content-Type header, used for initial, empty content creation requests.
                    example: application/x-netcdf4
                  example: application/x-netcdf4
                - name: X-Content-Length
                  in: header
                  description: X-Content-Length header, used for initial, empty content creation requests.
                  allowEmptyValue: true
                  schema:
                    type: integer
                    description: X-Content-Length header, used for initial, empty content creation requests.
                    example: 2376
                    format: int64
                  example: 2376
                - name: Upload-Length
                  in: header
                  description: Upload-Length header, sets the expected content size part of the TUS protocol.
                  allowEmptyValue: true
                  schema:
                    type: integer
                    description: Upload-Length header, sets the expected content size part of the TUS protocol.
                    example: 2376
                    format: int64
                  example: 2376
                - name: Tus-Resumable
                  in: header
                  description: Tus-Resumable header, specifies TUS protocol version.
                  allowEmptyValue: true
                  schema:
                    type: string
                    description: Tus-Resumable header, specifies TUS protocol version.
                    example: 1.0.0
                  example: 1.0.0
            responses:
                "201":
                    description: Created response.
                    headers:
                        Location:
                            description: link back to record
                            schema:
                                type: string
                                description: link back to record
                                example: Dolorum libero.
                            example: Accusamus doloremque autem omnis et et qui.
                        Tus-Resumable:
                            description: indicate version of TUS supported
                            schema:
                                type: string
                                description: indicate version of TUS supported
                                example: Unde hic.
                            example: Cum omnis animi.
                        Upload-Offset:
                            description: TUS offset for partially uploaded content
                            schema:
                                type: integer
                                description: TUS offset for partially uploaded content
                                example: 8284588355277128107
                                format: int64
                            example: 5307571630176049186
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ArtifactStatusRT'
                            example:
                                account:
                                    id: http://bednar.name/rupert_hickle
                                    links:
                                        describedBy:
                                            href: https://api.com/swagger/...
                                            type: application/openapi3+json
                                        self: Ipsam deleniti magnam nihil et.
                                cache-of: Exercitationem dignissimos voluptate consequuntur exercitationem quae provident.
                                created-at: "2022-01-01"
                                data:
                                    describedBy:
                                        href: https://api.com/swagger/...
                                        type: application/openapi3+json
                                    self: Ipsam deleniti magnam nihil et.
                                etag: Aut ut nihil quia sapiente ullam quis.
                                id: type:scope:name
                                last-modified-at: "2022-01-01"
                                links:
                                    describedBy:
                                        href: https://api.com/swagger/...
                                        type: application/openapi3+json
                                    self: Ipsam deleniti magnam nihil et.
                                mime-type: Et quas rem repellendus magni.
                                name: Fire risk per LGA
                                policy:
                                    id: http://bednar.name/rupert_hickle
                                    links:
                                        describedBy:
                                            href: https://api.com/swagger/...
                                            type: application/openapi3+json
                                        self: Ipsam deleniti magnam nihil et.
                                size: 7896428934166973396
                                status: pending
                "400":
                    description: 'invalid-credential: Provided credential is not valid'
                "401":
                    description: 'not-authorized: unauthorized access request'
                "403":
                    description: 'invalid-scopes: Token scopes are invalid'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InvalidScopesT'
                "501":
                    description: 'not-implemented: Method is not yet implemented'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/NotImplementedT'
            security:
                - jwt_header_Authorization:
                    - consumer:read
                    - consumer:write
    /1/artifacts/{id}:
        get:
            tags:
                - artifact
            summary: read artifact
            description: Show artifacts by ID
            operationId: artifact#read
            parameters:
                - name: id
                  in: path
                  description: ID of artifacts to show
                  required: true
                  schema:
                    type: string
                    description: ID of artifacts to show
                    example: type:scope:name
                  example: type:scope:name
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ArtifactStatusRT'
                            example:
                                account:
                                    id: http://bednar.name/rupert_hickle
                                    links:
                                        describedBy:
                                            href: https://api.com/swagger/...
                                            type: application/openapi3+json
                                        self: Ipsam deleniti magnam nihil et.
                                cache-of: Dicta quis sed qui quidem architecto.
                                created-at: "2022-01-01"
                                data:
                                    describedBy:
                                        href: https://api.com/swagger/...
                                        type: application/openapi3+json
                                    self: Ipsam deleniti magnam nihil et.
                                etag: Inventore consequuntur vero.
                                id: type:scope:name
                                last-modified-at: "2022-01-01"
                                links:
                                    describedBy:
                                        href: https://api.com/swagger/...
                                        type: application/openapi3+json
                                    self: Ipsam deleniti magnam nihil et.
                                location: Aut numquam aut.
                                mime-type: Ut nemo aut atque quam.
                                name: Fire risk per LGA
                                policy:
                                    id: http://bednar.name/rupert_hickle
                                    links:
                                        describedBy:
                                            href: https://api.com/swagger/...
                                            type: application/openapi3+json
                                        self: Ipsam deleniti magnam nihil et.
                                size: 343211328847546352
                                status: partial
                                tus-offset: 4511612631376913099
                                tus-resumable: Magni asperiores illo et ut.
                "400":
                    description: 'invalid-credential: Provided credential is not valid'
                "401":
                    description: 'not-authorized: unauthorized access request'
                "403":
                    description: 'invalid-scopes: Token scopes are invalid'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InvalidScopesT'
                "404":
                    description: 'not-found: artifacts not found'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ResourceNotFoundT'
                "501":
                    description: 'not-implemented: Method is not yet implemented'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/NotImplementedT'
            security:
                - jwt_header_Authorization:
                    - consumer:read
                    - consumer:write
    /1/metadata:
        get:
            tags:
                - metadata
            summary: list metadata
            description: Return a list of metadata records.
            operationId: metadata#list
            parameters:
                - name: entity-id
                  in: query
                  description: Entity for which to request metadata
                  allowEmptyValue: true
                  schema:
                    type: string
                    description: Entity for which to request metadata
                    example: urn:blue:image.collA.12
                    format: uri
                  example: urn:blue:image.collA.12
                - name: schema
                  in: query
                  description: Schema prefix using '%' as wildcard indicator
                  allowEmptyValue: true
                  schema:
                    type: string
                    description: Schema prefix using '%' as wildcard indicator
                    example: urn:blue:image%
                  example: urn:blue:image%
                - name: aspect-path
                  in: query
                  description: |-
                    To learn more about the supported format, see
                    					https://www.postgresql.org/docs/current/datatype-json.html#DATATYPE-JSONPATH
                  allowEmptyValue: true
                  schema:
                    type: string
                    description: |-
                        To learn more about the supported format, see
                        					https://www.postgresql.org/docs/current/datatype-json.html#DATATYPE-JSONPATH
                    example: $.images[*] ? (@.size > 10000)
                  example: $.images[*] ? (@.size > 10000)
                - name: at-time
                  in: query
                  description: Return metadata which where valid at that time [now]
                  allowEmptyValue: true
                  schema:
                    type: string
                    description: Return metadata which where valid at that time [now]
                    example: "1996-12-19T16:39:57-08:00"
                    format: date-time
                  example: "1996-12-19T16:39:57-08:00"
                - name: limit
                  in: query
                  description: |-
                    The 'limit' system query option requests the number of items in the queried
                    				collection to be included in the result.
                  allowEmptyValue: true
                  schema:
                    type: integer
                    description: |-
                        The 'limit' system query option requests the number of items in the queried
                        				collection to be included in the result.
                    default: 10
                    example: 10
                    minimum: 1
                    maximum: 50
                  example: 10
                - name: filter
                  in: query
                  description: |-
                    The 'filter' system query option allows clients to filter a collection of
                    				resources that are addressed by a request URL. The expression specified with 'filter'
                    				is evaluated for each resource in the collection, and only items where the expression
                    				evaluates to true are included in the response.
                  allowEmptyValue: true
                  schema:
                    type: string
                    description: |-
                        The 'filter' system query option allows clients to filter a collection of
                        				resources that are addressed by a request URL. The expression specified with 'filter'
                        				is evaluated for each resource in the collection, and only items where the expression
                        				evaluates to true are included in the response.
                    default: ""
                    example: filter=FirstName eq 'Scott'
                  example: filter=FirstName eq 'Scott'
                - name: order-by
                  in: query
                  description: |-
                    The 'orderby' query option allows clients to request resources in either
                    				ascending order using asc or descending order using desc. If asc or desc not specified,
                    				then the resources will be ordered in ascending order. The request below orders Trips on
                    				property EndsAt in descending order.
                  allowEmptyValue: true
                  schema:
                    type: string
                    description: |-
                        The 'orderby' query option allows clients to request resources in either
                        				ascending order using asc or descending order using desc. If asc or desc not specified,
                        				then the resources will be ordered in ascending order. The request below orders Trips on
                        				property EndsAt in descending order.
                    default: ""
                    example: orderby=EndsAt
                  example: orderby=EndsAt
                - name: order-desc
                  in: query
                  description: When set order result in descending order. Ascending order is the default.
                  allowEmptyValue: true
                  schema:
                    type: boolean
                    description: When set order result in descending order. Ascending order is the default.
                    example: false
                  example: true
                - name: page
                  in: query
                  description: |-
                    The content of '$page' is returned in the 'links' part of a previous query and
                    				will when set, ALL other parameters, except for 'limit' are ignored.
                  allowEmptyValue: true
                  schema:
                    type: string
                    description: |-
                        The content of '$page' is returned in the 'links' part of a previous query and
                        				will when set, ALL other parameters, except for 'limit' are ignored.
                    example: gdsgQwhdgd
                  example: gdsgQwhdgd
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListMetaRT'
                            example:
                                aspect-path: Omnis praesentium.
                                at-time: "1996-12-19T16:39:57-08:00"
                                entity-id: urn:blue:image.collA.12
                                links:
                                    first: https://api.com/foo/...
                                    next: https://api.com/foo/...
                                    self: https://api.com/foo/...
                                records:
                                    - aspect: '{...}'
                                      aspectContext: '{...}'
                                      entity: urn:blue:transect.1
                                      record-id: urn:ivcap:record.123e4567-e89b-12d3-a456-426614174000
                                      schema: urn:blue:schema.image
                                    - aspect: '{...}'
                                      aspectContext: '{...}'
                                      entity: urn:blue:transect.1
                                      record-id: urn:ivcap:record.123e4567-e89b-12d3-a456-426614174000
                                      schema: urn:blue:schema.image
                                    - aspect: '{...}'
                                      aspectContext: '{...}'
                                      entity: urn:blue:transect.1
                                      record-id: urn:ivcap:record.123e4567-e89b-12d3-a456-426614174000
                                      schema: urn:blue:schema.image
                                schema: urn:blue:image,urn:blue:location
                "400":
                    description: 'invalid-credential: Provided credential is not valid'
                "401":
                    description: 'not-authorized: unauthorized access request'
                "403":
                    description: 'invalid-scopes: Token scopes are invalid'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InvalidScopesT'
                "422":
                    description: 'invalid-parameter: Request contained semantically wrong paramter value'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InvalidParameterValue'
                "501":
                    description: 'not-implemented: Method is not yet implemented'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/NotImplementedT'
            security:
                - jwt_header_Authorization:
                    - consumer:read
                    - consumer:write
        post:
            tags:
                - metadata
            summary: add metadata
            description: Attach new metadata to an entity.
            operationId: metadata#add
            parameters:
                - name: entity-id
                  in: query
                  description: Entity to which attach metadata
                  allowEmptyValue: true
                  required: true
                  schema:
                    type: string
                    description: Entity to which attach metadata
                    example: http://dickens.org/elody
                    format: uri
                  example: http://huels.biz/lindsey
                - name: schema
                  in: query
                  description: Schema of metadata
                  allowEmptyValue: true
                  required: true
                  schema:
                    type: string
                    description: Schema of metadata
                    example: http://wiza.com/carol
                    format: uri
                  example: http://dickens.biz/katrina.schneider
                - name: policy-id
                  in: query
                  description: Policy guiding visibility and actions performed
                  allowEmptyValue: true
                  schema:
                    type: string
                    description: Policy guiding visibility and actions performed
                    example: http://pagac.org/maximillia
                    format: uri
                  example: http://mueller.biz/leanne
                - name: Content-Type
                  in: header
                  description: Content-Type header, MUST be of application/json.
                  allowEmptyValue: true
                  required: true
                  schema:
                    type: string
                    description: Content-Type header, MUST be of application/json.
                    example: application/json
                  example: application/json
            requestBody:
                description: Aspect content
                required: true
                content:
                    application/json:
                        schema:
                            type: string
                            description: Aspect content
                            example: '{"$schema": ...}'
                            format: binary
                        example: '{"$schema": ...}'
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AddMetaRT'
                            example:
                                record-id: urn:ivcap:record.123e4567-e89b-12d3-a456-426614174000
                "400":
                    description: 'invalid-credential: Provided credential is not valid'
                "401":
                    description: 'not-authorized: unauthorized access request'
                "403":
                    description: 'invalid-scopes: Token scopes are invalid'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InvalidScopesT'
                "422":
                    description: 'invalid-parameter: Request contained semantically wrong paramter value'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InvalidParameterValue'
                "501":
                    description: 'not-implemented: Method is not yet implemented'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/NotImplementedT'
            security:
                - jwt_header_Authorization:
                    - consumer:read
                    - consumer:write
        put:
            tags:
                - metadata
            summary: update_one metadata
            description: |-
                Revoke a record for the same entity and same schema and create new one
                			with the provided properties. __NOTE__, this method will fail if there is more than one active record for the entity/schema pair.
            operationId: metadata#update_one
            parameters:
                - name: entity-id
                  in: query
                  description: Entity to which attach metadata
                  allowEmptyValue: true
                  required: true
                  schema:
                    type: string
                    description: Entity to which attach metadata
                    example: urn:url:....
                    format: uri
                  example: urn:url:....
                - name: schema
                  in: query
                  description: Schema of metadata
                  allowEmptyValue: true
                  required: true
                  schema:
                    type: string
                    description: Schema of metadata
                    example: urn:url:....
                    format: uri
                  example: urn:url:....
                - name: policy-id
                  in: query
                  description: Policy guiding visibility and actions performed
                  allowEmptyValue: true
                  schema:
                    type: string
                    description: Policy guiding visibility and actions performed
                    example: http://rowe.biz/odie_marquardt
                    format: uri
                  example: http://waters.biz/dean
                - name: Content-Type
                  in: header
                  description: Content-Type header, MUST be of application/json.
                  allowEmptyValue: true
                  schema:
                    type: string
                    description: Content-Type header, MUST be of application/json.
                    example: application/json
                  example: application/json
            requestBody:
                description: Aspect content
                required: true
                content:
                    application/json:
                        schema:
                            type: string
                            description: Aspect content
                            example: '{"$schema": ...}'
                            format: binary
                        example: '{"$schema": ...}'
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AddMetaRT'
                            example:
                                record-id: urn:ivcap:record.123e4567-e89b-12d3-a456-426614174000
                "400":
                    description: 'invalid-credential: Provided credential is not valid'
                "401":
                    description: 'not-authorized: unauthorized access request'
                "403":
                    description: 'invalid-scopes: Token scopes are invalid'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InvalidScopesT'
                "422":
                    description: 'invalid-parameter: Request contained semantically wrong paramter value'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InvalidParameterValue'
                "501":
                    description: 'not-implemented: Method is not yet implemented'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/NotImplementedT'
            security:
                - jwt_header_Authorization:
                    - consumer:read
                    - consumer:write
    /1/metadata/{id}:
        delete:
            tags:
                - metadata
            summary: revoke metadata
            description: Retract a previously created statement.
            operationId: metadata#revoke
            parameters:
                - name: id
                  in: path
                  description: Record ID to restract
                  required: true
                  schema:
                    type: string
                    description: Record ID to restract
                    example: urn:ivcap:record.53cbb715-4ffd-4158-9e55-5d0ae69605a4
                    format: uri
                  example: urn:ivcap:record.53cbb715-4ffd-4158-9e55-5d0ae69605a4
            responses:
                "204":
                    description: No Content response.
                "400":
                    description: 'invalid-credential: Provided credential is not valid'
                "401":
                    description: 'not-authorized: unauthorized access request'
                "403":
                    description: 'invalid-scopes: Token scopes are invalid'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InvalidScopesT'
                "422":
                    description: 'invalid-parameter: Request contained semantically wrong paramter value'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InvalidParameterValue'
                "501":
                    description: 'not-implemented: Method is not yet implemented'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/NotImplementedT'
            security:
                - jwt_header_Authorization:
                    - consumer:read
                    - consumer:write
        get:
            tags:
                - metadata
            summary: read metadata
            description: Show metadata by ID
            operationId: metadata#read
            parameters:
                - name: id
                  in: path
                  description: ID of metadata to show
                  required: true
                  schema:
                    type: string
                    description: ID of metadata to show
                    example: type:scope:name
                  example: type:scope:name
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/MetadataRecordRT'
                            example:
                                aspect: '{...}'
                                asserter: '...'
                                entity: urn:blue:transect.1
                                record-id: urn:ivcap:record.123e4567-e89b-12d3-a456-426614174000
                                revoker: '...'
                                schema: urn:blue:schema.image
                                valid-from: "1996-12-19T16:39:57-08:00"
                                valid-to: "1996-12-19T16:39:57-08:00"
                "400":
                    description: 'invalid-credential: Provided credential is not valid'
                "401":
                    description: 'not-authorized: unauthorized access request'
                "403":
                    description: 'invalid-scopes: Token scopes are invalid'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InvalidScopesT'
                "404":
                    description: 'not-found: metadata not found'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ResourceNotFoundT'
                "501":
                    description: 'not-implemented: Method is not yet implemented'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/NotImplementedT'
            security:
                - jwt_header_Authorization:
                    - consumer:read
                    - consumer:write
        put:
            tags:
                - metadata
            summary: update_record metadata
            description: |-
                Revoke this record and create a new one with the information provided.
                			For any field not provided, the value from the current record is used.
            operationId: metadata#update_record
            parameters:
                - name: entity-id
                  in: query
                  description: Entity to which attach metadata
                  allowEmptyValue: true
                  schema:
                    type: string
                    description: Entity to which attach metadata
                    example: urn:url:....
                    format: uri
                  example: urn:url:....
                - name: schema
                  in: query
                  description: Schema of metadata
                  allowEmptyValue: true
                  schema:
                    type: string
                    description: Schema of metadata
                    example: urn:url:....
                    format: uri
                  example: urn:url:....
                - name: policy-id
                  in: query
                  description: Policy guiding visibility and actions performed
                  allowEmptyValue: true
                  schema:
                    type: string
                    description: Policy guiding visibility and actions performed
                    example: http://skiles.info/rupert
                    format: uri
                  example: http://nader.com/davonte_krajcik
                - name: id
                  in: path
                  description: Record ID to update
                  required: true
                  schema:
                    type: string
                    description: Record ID to update
                    example: urn:ivcap:record.53cbb715-4ffd-4158-9e55-5d0ae69605a4
                    format: uri
                  example: urn:ivcap:record.53cbb715-4ffd-4158-9e55-5d0ae69605a4
                - name: Content-Type
                  in: header
                  description: Content-Type header, MUST be of application/json.
                  allowEmptyValue: true
                  schema:
                    type: string
                    description: Content-Type header, MUST be of application/json.
                    example: application/json
                  example: application/json
            requestBody:
                description: Aspect content
                required: true
                content:
                    application/json:
                        schema:
                            type: string
                            description: Aspect content
                            example: '{"$schema": ...}'
                            format: binary
                        example: '{"$schema": ...}'
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AddMetaRT'
                            example:
                                record-id: urn:ivcap:record.123e4567-e89b-12d3-a456-426614174000
                "400":
                    description: 'invalid-credential: Provided credential is not valid'
                "401":
                    description: 'not-authorized: unauthorized access request'
                "403":
                    description: 'invalid-scopes: Token scopes are invalid'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InvalidScopesT'
                "422":
                    description: 'invalid-parameter: Request contained semantically wrong paramter value'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InvalidParameterValue'
                "501":
                    description: 'not-implemented: Method is not yet implemented'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/NotImplementedT'
            security:
                - jwt_header_Authorization:
                    - consumer:read
                    - consumer:write
    /1/openapi/openapi3.json:
        get:
            tags:
                - openapi
            summary: Download /public/openapi3.json
            description: JSON document containing the API swagger definition
            operationId: openapi#/1/openapi/openapi3.json
            responses:
                "200":
                    description: File downloaded
    /1/orders:
        get:
            tags:
                - order
            summary: list order
            description: list orders
            operationId: order#list
            parameters:
                - name: limit
                  in: query
                  description: |-
                    The $limit system query option requests the number of items in the queried
                    				collection to be included in the result.
                  allowEmptyValue: true
                  schema:
                    type: integer
                    description: |-
                        The $limit system query option requests the number of items in the queried
                        				collection to be included in the result.
                    default: 10
                    example: 10
                    minimum: 1
                    maximum: 50
                  example: 10
                - name: page
                  in: query
                  description: |-
                    The content of 'page' is returned in the 'links' part of a previous query and
                    				will when set, ALL other parameters, except for 'limit' are ignored.
                  allowEmptyValue: true
                  schema:
                    type: string
                    description: |-
                        The content of 'page' is returned in the 'links' part of a previous query and
                        				will when set, ALL other parameters, except for 'limit' are ignored.
                    example: gdsgQwhdgd
                  example: gdsgQwhdgd
                - name: filter
                  in: query
                  description: |-
                    The 'filter' system query option allows clients to filter a collection of
                    				resources that are addressed by a request URL. The expression specified with 'filter'
                    				is evaluated for each resource in the collection, and only items where the expression
                    				evaluates to true are included in the response.
                  allowEmptyValue: true
                  schema:
                    type: string
                    description: |-
                        The 'filter' system query option allows clients to filter a collection of
                        				resources that are addressed by a request URL. The expression specified with 'filter'
                        				is evaluated for each resource in the collection, and only items where the expression
                        				evaluates to true are included in the response.
                    example: name ~= 'Scott%'
                  example: name ~= 'Scott%'
                - name: order-by
                  in: query
                  description: |-
                    The 'orderby' query option allows clients to request resources in either
                    				ascending order using asc or descending order using desc. If asc or desc not specified,
                    				then the resources will be ordered in ascending order. The request below orders Trips on
                    				property EndsAt in descending order.
                  allowEmptyValue: true
                  schema:
                    type: string
                    description: |-
                        The 'orderby' query option allows clients to request resources in either
                        				ascending order using asc or descending order using desc. If asc or desc not specified,
                        				then the resources will be ordered in ascending order. The request below orders Trips on
                        				property EndsAt in descending order.
                    example: orderby=EndsAt
                  example: orderby=EndsAt
                - name: order-desc
                  in: query
                  description: When set order result in descending order. Ascending order is the default.
                  allowEmptyValue: true
                  schema:
                    type: boolean
                    description: When set order result in descending order. Ascending order is the default.
                    default: false
                    example: false
                  example: false
                - name: at-time
                  in: query
                  description: Return the state of the respective resources at that time [now]
                  allowEmptyValue: true
                  schema:
                    type: string
                    description: Return the state of the respective resources at that time [now]
                    example: "1996-12-19T16:39:57-08:00"
                    format: date-time
                  example: "1996-12-19T16:39:57-08:00"
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/OrderListRT'
                            example:
                                at-time: "1996-12-19T16:39:57-08:00"
                                links:
                                    first: https://api.com/foo/...
                                    next: https://api.com/foo/...
                                    self: https://api.com/foo/...
                                orders:
                                    - account-id: "2022-01-01"
                                      finished-at: "2022-01-01"
                                      id: cayp:order:123e4567-e89b-12d3-a456-426614174000
                                      links:
                                        describedBy:
                                            href: https://api.com/swagger/...
                                            type: application/openapi3+json
                                        self: Ipsam deleniti magnam nihil et.
                                      name: Fire risk for Lot2
                                      ordered-at: "2022-01-01"
                                      service-id: "2022-01-01"
                                      started-at: "2022-01-01"
                                      status: unknown
                                    - account-id: "2022-01-01"
                                      finished-at: "2022-01-01"
                                      id: cayp:order:123e4567-e89b-12d3-a456-426614174000
                                      links:
                                        describedBy:
                                            href: https://api.com/swagger/...
                                            type: application/openapi3+json
                                        self: Ipsam deleniti magnam nihil et.
                                      name: Fire risk for Lot2
                                      ordered-at: "2022-01-01"
                                      service-id: "2022-01-01"
                                      started-at: "2022-01-01"
                                      status: unknown
                                    - account-id: "2022-01-01"
                                      finished-at: "2022-01-01"
                                      id: cayp:order:123e4567-e89b-12d3-a456-426614174000
                                      links:
                                        describedBy:
                                            href: https://api.com/swagger/...
                                            type: application/openapi3+json
                                        self: Ipsam deleniti magnam nihil et.
                                      name: Fire risk for Lot2
                                      ordered-at: "2022-01-01"
                                      service-id: "2022-01-01"
                                      started-at: "2022-01-01"
                                      status: unknown
                "400":
                    description: 'invalid-credential: Provided credential is not valid'
                "401":
                    description: 'not-authorized: unauthorized access request'
                "403":
                    description: 'invalid-scopes: Token scopes are invalid'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InvalidScopesT'
                "422":
                    description: 'invalid-parameter: Request contained semantically wrong paramter value'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InvalidParameterValue'
                "501":
                    description: 'not-implemented: Method is not yet implemented'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/NotImplementedT'
            security:
                - jwt_header_Authorization:
                    - consumer:read
                    - consumer:write
        post:
            tags:
                - order
            summary: create order
            description: Create a new orders and return its status.
            operationId: order#create
            requestBody:
                description: New orders description
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/OrderRequestT'
                        example:
                            account-id: urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000
                            name: Fire risk for Lot2
                            parameters:
                                - name: region
                                  value: Upper Valley
                                - name: threshold
                                  value: 10
                            policy-id: urn:ivcap:policy:123e4567-e89b-12d3-a456-426614174000
                            service-id: urn:ivcap:service:123e4567-e89b-12d3-a456-426614174000
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                description: 'Response body may alternatively be #/components/schemas/ReadResponseBodyTiny'
                                $ref: '#/components/schemas/OrderStatusRT'
                            example:
                                account:
                                    id: http://bednar.name/rupert_hickle
                                    links:
                                        describedBy:
                                            href: https://api.com/swagger/...
                                            type: application/openapi3+json
                                        self: Ipsam deleniti magnam nihil et.
                                finished-at: "2023-03-17T04:57:00Z"
                                id: 123e4567-e89b-12d3-a456-426614174000
                                links:
                                    describedBy:
                                        href: https://api.com/swagger/...
                                        type: application/openapi3+json
                                    self: Ipsam deleniti magnam nihil et.
                                name: Fire risk for Lot2
                                ordered-at: "2023-03-17T04:57:00Z"
                                parameters:
                                    - name: region
                                      value: Upper Valley
                                    - name: threshold
                                      value: 10
                                products:
                                    - href: https:/.../1/artifacts/0000-00001220
                                      mime-type: image/geo+tiff
                                      name: fire risk map
                                      size: 1234963
                                service:
                                    id: http://bednar.name/rupert_hickle
                                    links:
                                        describedBy:
                                            href: https://api.com/swagger/...
                                            type: application/openapi3+json
                                        self: Ipsam deleniti magnam nihil et.
                                started-at: "2023-03-17T04:57:00Z"
                                status: succeeded
                "400":
                    description: 'invalid-credential: Provided credential is not valid'
                "401":
                    description: 'not-authorized: unauthorized access request'
                "403":
                    description: 'invalid-scopes: Token scopes are invalid'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InvalidScopesT'
                "404":
                    description: 'not-found:  not found'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ResourceNotFoundT'
                "422":
                    description: 'invalid-parameter: Request contained semantically wrong paramter value'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InvalidParameterValue'
                "501":
                    description: 'not-implemented: Method is not yet implemented'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/NotImplementedT'
                "503":
                    description: 'not-available: service currently not available'
            security:
                - jwt_header_Authorization:
                    - consumer:read
                    - consumer:write
    /1/orders/{id}:
        get:
            tags:
                - order
            summary: read order
            description: Show orders by ID
            operationId: order#read
            parameters:
                - name: id
                  in: path
                  description: ID of orders to show
                  required: true
                  schema:
                    type: string
                    description: ID of orders to show
                    example: type:scope:name
                  example: type:scope:name
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                description: 'Response body may alternatively be #/components/schemas/ReadResponseBodyTiny'
                                $ref: '#/components/schemas/OrderStatusRT'
                            example:
                                account:
                                    id: http://bednar.name/rupert_hickle
                                    links:
                                        describedBy:
                                            href: https://api.com/swagger/...
                                            type: application/openapi3+json
                                        self: Ipsam deleniti magnam nihil et.
                                finished-at: "2023-03-17T04:57:00Z"
                                id: 123e4567-e89b-12d3-a456-426614174000
                                links:
                                    describedBy:
                                        href: https://api.com/swagger/...
                                        type: application/openapi3+json
                                    self: Ipsam deleniti magnam nihil et.
                                name: Fire risk for Lot2
                                ordered-at: "2023-03-17T04:57:00Z"
                                parameters:
                                    - name: region
                                      value: Upper Valley
                                    - name: threshold
                                      value: 10
                                products:
                                    - href: https:/.../1/artifacts/0000-00001220
                                      mime-type: image/geo+tiff
                                      name: fire risk map
                                      size: 1234963
                                service:
                                    id: http://bednar.name/rupert_hickle
                                    links:
                                        describedBy:
                                            href: https://api.com/swagger/...
                                            type: application/openapi3+json
                                        self: Ipsam deleniti magnam nihil et.
                                started-at: "2023-03-17T04:57:00Z"
                                status: executing
                "400":
                    description: 'invalid-credential: Provided credential is not valid'
                "401":
                    description: 'not-authorized: unauthorized access request'
                "403":
                    description: 'invalid-scopes: Token scopes are invalid'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InvalidScopesT'
                "404":
                    description: 'not-found: orders not found'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ResourceNotFoundT'
                "501":
                    description: 'not-implemented: Method is not yet implemented'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/NotImplementedT'
            security:
                - jwt_header_Authorization:
                    - consumer:read
                    - consumer:write
    /1/services:
        get:
            tags:
                - service
            summary: list service
            description: list services
            operationId: service#list
            parameters:
                - name: limit
                  in: query
                  description: |-
                    The $limit system query option requests the number of items in the queried
                    				collection to be included in the result.
                  allowEmptyValue: true
                  schema:
                    type: integer
                    description: |-
                        The $limit system query option requests the number of items in the queried
                        				collection to be included in the result.
                    default: 10
                    example: 10
                    minimum: 1
                    maximum: 50
                  example: 10
                - name: page
                  in: query
                  description: |-
                    The content of 'page' is returned in the 'links' part of a previous query and
                    				will when set, ALL other parameters, except for 'limit' are ignored.
                  allowEmptyValue: true
                  schema:
                    type: string
                    description: |-
                        The content of 'page' is returned in the 'links' part of a previous query and
                        				will when set, ALL other parameters, except for 'limit' are ignored.
                    example: gdsgQwhdgd
                  example: gdsgQwhdgd
                - name: filter
                  in: query
                  description: |-
                    The 'filter' system query option allows clients to filter a collection of
                    				resources that are addressed by a request URL. The expression specified with 'filter'
                    				is evaluated for each resource in the collection, and only items where the expression
                    				evaluates to true are included in the response.
                  allowEmptyValue: true
                  schema:
                    type: string
                    description: |-
                        The 'filter' system query option allows clients to filter a collection of
                        				resources that are addressed by a request URL. The expression specified with 'filter'
                        				is evaluated for each resource in the collection, and only items where the expression
                        				evaluates to true are included in the response.
                    example: name ~= 'Scott%'
                  example: name ~= 'Scott%'
                - name: order-by
                  in: query
                  description: |-
                    The 'orderby' query option allows clients to request resources in either
                    				ascending order using asc or descending order using desc. If asc or desc not specified,
                    				then the resources will be ordered in ascending order. The request below orders Trips on
                    				property EndsAt in descending order.
                  allowEmptyValue: true
                  schema:
                    type: string
                    description: |-
                        The 'orderby' query option allows clients to request resources in either
                        				ascending order using asc or descending order using desc. If asc or desc not specified,
                        				then the resources will be ordered in ascending order. The request below orders Trips on
                        				property EndsAt in descending order.
                    example: orderby=EndsAt
                  example: orderby=EndsAt
                - name: order-desc
                  in: query
                  description: When set order result in descending order. Ascending order is the default.
                  allowEmptyValue: true
                  schema:
                    type: boolean
                    description: When set order result in descending order. Ascending order is the default.
                    default: false
                    example: true
                  example: true
                - name: at-time
                  in: query
                  description: Return the state of the respective resources at that time [now]
                  allowEmptyValue: true
                  schema:
                    type: string
                    description: Return the state of the respective resources at that time [now]
                    example: "1996-12-19T16:39:57-08:00"
                    format: date-time
                  example: "1996-12-19T16:39:57-08:00"
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ServiceListRT'
                            example:
                                at-time: "1996-12-19T16:39:57-08:00"
                                links:
                                    first: https://api.com/foo/...
                                    next: https://api.com/foo/...
                                    self: https://api.com/foo/...
                                services:
                                    - description: Some lengthy description of fire risk
                                      id: service:acme:oracle
                                      links:
                                        describedBy:
                                            href: https://api.com/swagger/...
                                            type: application/openapi3+json
                                        self: Ipsam deleniti magnam nihil et.
                                      name: Fire risk for region
                                      provider:
                                        id: http://bednar.name/rupert_hickle
                                        links:
                                            describedBy:
                                                href: https://api.com/swagger/...
                                                type: application/openapi3+json
                                            self: Ipsam deleniti magnam nihil et.
                                    - description: Some lengthy description of fire risk
                                      id: service:acme:oracle
                                      links:
                                        describedBy:
                                            href: https://api.com/swagger/...
                                            type: application/openapi3+json
                                        self: Ipsam deleniti magnam nihil et.
                                      name: Fire risk for region
                                      provider:
                                        id: http://bednar.name/rupert_hickle
                                        links:
                                            describedBy:
                                                href: https://api.com/swagger/...
                                                type: application/openapi3+json
                                            self: Ipsam deleniti magnam nihil et.
                                    - description: Some lengthy description of fire risk
                                      id: service:acme:oracle
                                      links:
                                        describedBy:
                                            href: https://api.com/swagger/...
                                            type: application/openapi3+json
                                        self: Ipsam deleniti magnam nihil et.
                                      name: Fire risk for region
                                      provider:
                                        id: http://bednar.name/rupert_hickle
                                        links:
                                            describedBy:
                                                href: https://api.com/swagger/...
                                                type: application/openapi3+json
                                            self: Ipsam deleniti magnam nihil et.
                "400":
                    description: 'invalid-credential: Provided credential is not valid'
                "401":
                    description: 'not-authorized: unauthorized access request'
                "403":
                    description: 'invalid-scopes: Token scopes are invalid'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InvalidScopesT'
                "422":
                    description: 'invalid-parameter: Request contained semantically wrong paramter value'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InvalidParameterValue'
                "501":
                    description: 'not-implemented: Method is not yet implemented'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/NotImplementedT'
            security:
                - jwt_header_Authorization:
                    - consumer:read
                    - consumer:write
        post:
            tags:
                - service
            summary: create_service service
            description: Create a new services and return its status.
            operationId: service#create_service
            requestBody:
                description: New services description
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ServiceDescriptionT'
                        example:
                            account-id: urn:ivcap:account:0f0e3f57-80f7-4899-9b69-459af2efd789
                            banner: http://thompson.com/brennon.thompson
                            description: This service ...
                            metadata:
                                - name: Voluptatum qui error ipsam.
                                  value: Hic voluptates error fugit.
                                - name: Voluptatum qui error ipsam.
                                  value: Hic voluptates error fugit.
                                - name: Voluptatum qui error ipsam.
                                  value: Hic voluptates error fugit.
                                - name: Voluptatum qui error ipsam.
                                  value: Hic voluptates error fugit.
                            name: Fire risk for Lot2
                            parameters:
                                - description: The name of the region as according to ...
                                  label: Region Name
                                  name: region
                                  type: string
                                - label: Rainfall/month threshold
                                  name: threshold
                                  type: float
                                  unit: m
                            policy-id: Praesentium autem quis sit inventore et.
                            provider-id: urn:ivcap:provider:0f0e3f57-80f7-4899-9b69-459af2efd789
                            provider-ref: service_foo_patch_1
                            references:
                                - title: Et sed.
                                  uri: http://howe.com/jeremie_gutkowski
                                - title: Et sed.
                                  uri: http://howe.com/jeremie_gutkowski
                            tags:
                                - tag1
                                - tag2
                            workflow:
                                argo: Fugiat repudiandae mollitia aliquam labore.
                                basic:
                                    command:
                                        - Et voluptas vitae qui commodi nemo occaecati.
                                        - Et consectetur ex.
                                    cpu:
                                        limit: At eligendi.
                                        request: Doloribus optio laborum incidunt nihil molestias.
                                    image: Qui omnis minus illum nisi dolorum.
                                    memory:
                                        limit: At eligendi.
                                        request: Doloribus optio laborum incidunt nihil molestias.
                                opts: Molestiae minima sint.
                                type: Veritatis dolorum.
            responses:
                "201":
                    description: Created response.
                    content:
                        application/json:
                            schema:
                                description: 'Response body may alternatively be #/components/schemas/CreateServiceResponseBodyTiny'
                                $ref: '#/components/schemas/ServiceStatusRT'
                            example:
                                account:
                                    id: http://bednar.name/rupert_hickle
                                    links:
                                        describedBy:
                                            href: https://api.com/swagger/...
                                            type: application/openapi3+json
                                        self: Ipsam deleniti magnam nihil et.
                                description: This service ...
                                id: service:acme:oracle
                                links:
                                    describedBy:
                                        href: https://api.com/swagger/...
                                        type: application/openapi3+json
                                    self: Ipsam deleniti magnam nihil et.
                                metadata:
                                    - name: Beatae qui repellendus molestias culpa aut.
                                      value: Quia quis aut quia veniam est dignissimos.
                                    - name: Beatae qui repellendus molestias culpa aut.
                                      value: Quia quis aut quia veniam est dignissimos.
                                    - name: Beatae qui repellendus molestias culpa aut.
                                      value: Quia quis aut quia veniam est dignissimos.
                                    - name: Beatae qui repellendus molestias culpa aut.
                                      value: Quia quis aut quia veniam est dignissimos.
                                name: Fire risk for Lot2
                                parameters:
                                    - description: The name of the region as according to ...
                                      label: Region Name
                                      name: region
                                      type: string
                                    - label: Rainfall/month threshold
                                      name: threshold
                                      type: float
                                      unit: m
                                provider:
                                    id: http://bednar.name/rupert_hickle
                                    links:
                                        describedBy:
                                            href: https://api.com/swagger/...
                                            type: application/openapi3+json
                                        self: Ipsam deleniti magnam nihil et.
                                provider-ref: service_foo
                                status: error
                                tags:
                                    - tag1
                                    - tag2
                "400":
                    description: 'invalid-credential: Provided credential is not valid'
                "401":
                    description: 'not-authorized: unauthorized access request'
                "403":
                    description: 'invalid-scopes: Token scopes are invalid'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InvalidScopesT'
                "404":
                    description: 'not-found:  not found'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ResourceNotFoundT'
                "409":
                    description: 'already-created: Resource already exists'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ResourceNotFoundT'
                "422":
                    description: 'invalid-parameter: Request contained semantically wrong paramter value'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InvalidParameterValue'
                "501":
                    description: 'not-implemented: Method is not yet implemented'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/NotImplementedT'
            security:
                - jwt_header_Authorization:
                    - consumer:read
                    - consumer:write
    /1/services/{id}:
        delete:
            tags:
                - service
            summary: delete service
            description: Delete an existing services.
            operationId: service#delete
            parameters:
                - name: id
                  in: path
                  description: ID of services to update
                  required: true
                  schema:
                    type: string
                    description: ID of services to update
                    example: Autem quod voluptas reprehenderit et cumque dolore.
                  example: Perspiciatis aspernatur rem voluptatum ab consequatur dolorem.
            responses:
                "204":
                    description: No Content response.
                "400":
                    description: 'invalid-credential: Provided credential is not valid'
                "401":
                    description: 'not-authorized: unauthorized access request'
                "403":
                    description: 'invalid-scopes: Token scopes are invalid'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InvalidScopesT'
                "501":
                    description: 'not-implemented: Method is not yet implemented'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/NotImplementedT'
            security:
                - jwt_header_Authorization:
                    - consumer:read
                    - consumer:write
        get:
            tags:
                - service
            summary: read service
            description: Show services by ID
            operationId: service#read
            parameters:
                - name: id
                  in: path
                  description: ID of services to show
                  required: true
                  schema:
                    type: string
                    description: ID of services to show
                    example: type:scope:name
                  example: type:scope:name
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                description: 'Response body may alternatively be #/components/schemas/CreateServiceResponseBodyTiny'
                                $ref: '#/components/schemas/ServiceStatusRT'
                            example:
                                account:
                                    id: http://bednar.name/rupert_hickle
                                    links:
                                        describedBy:
                                            href: https://api.com/swagger/...
                                            type: application/openapi3+json
                                        self: Ipsam deleniti magnam nihil et.
                                description: This service ...
                                id: service:acme:oracle
                                links:
                                    describedBy:
                                        href: https://api.com/swagger/...
                                        type: application/openapi3+json
                                    self: Ipsam deleniti magnam nihil et.
                                metadata:
                                    - name: Beatae qui repellendus molestias culpa aut.
                                      value: Quia quis aut quia veniam est dignissimos.
                                    - name: Beatae qui repellendus molestias culpa aut.
                                      value: Quia quis aut quia veniam est dignissimos.
                                    - name: Beatae qui repellendus molestias culpa aut.
                                      value: Quia quis aut quia veniam est dignissimos.
                                name: Fire risk for Lot2
                                parameters:
                                    - description: The name of the region as according to ...
                                      label: Region Name
                                      name: region
                                      type: string
                                    - label: Rainfall/month threshold
                                      name: threshold
                                      type: float
                                      unit: m
                                provider:
                                    id: http://bednar.name/rupert_hickle
                                    links:
                                        describedBy:
                                            href: https://api.com/swagger/...
                                            type: application/openapi3+json
                                        self: Ipsam deleniti magnam nihil et.
                                provider-ref: service_foo
                                status: error
                                tags:
                                    - tag1
                                    - tag2
                "400":
                    description: 'invalid-credential: Provided credential is not valid'
                "401":
                    description: 'not-authorized: unauthorized access request'
                "403":
                    description: 'invalid-scopes: Token scopes are invalid'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InvalidScopesT'
                "404":
                    description: 'not-found: services not found'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ResourceNotFoundT'
                "501":
                    description: 'not-implemented: Method is not yet implemented'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/NotImplementedT'
            security:
                - jwt_header_Authorization:
                    - consumer:read
                    - consumer:write
        put:
            tags:
                - service
            summary: update service
            description: Update an existing services and return its status.
            operationId: service#update
            parameters:
                - name: force-create
                  in: query
                  description: Create if not already exist
                  allowEmptyValue: true
                  schema:
                    type: boolean
                    description: Create if not already exist
                    example: true
                  example: false
                - name: id
                  in: path
                  description: ID of services to update
                  required: true
                  schema:
                    type: string
                    description: ID of services to update
                    example: Qui quidem illo quo labore.
                  example: Vel corporis cumque iure tenetur.
            requestBody:
                description: Updated services description
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ServiceDescriptionT'
                        example:
                            account-id: urn:ivcap:account:0f0e3f57-80f7-4899-9b69-459af2efd789
                            banner: http://ricedickens.net/yvonne_vonrueden
                            description: This service ...
                            metadata:
                                - name: Voluptatum qui error ipsam.
                                  value: Hic voluptates error fugit.
                                - name: Voluptatum qui error ipsam.
                                  value: Hic voluptates error fugit.
                                - name: Voluptatum qui error ipsam.
                                  value: Hic voluptates error fugit.
                            name: Fire risk for Lot2
                            parameters:
                                - description: The name of the region as according to ...
                                  label: Region Name
                                  name: region
                                  type: string
                                - label: Rainfall/month threshold
                                  name: threshold
                                  type: float
                                  unit: m
                            policy-id: Nihil mollitia maiores ratione voluptates qui.
                            provider-id: urn:ivcap:provider:0f0e3f57-80f7-4899-9b69-459af2efd789
                            provider-ref: service_foo_patch_1
                            references:
                                - title: Et sed.
                                  uri: http://howe.com/jeremie_gutkowski
                                - title: Et sed.
                                  uri: http://howe.com/jeremie_gutkowski
                                - title: Et sed.
                                  uri: http://howe.com/jeremie_gutkowski
                                - title: Et sed.
                                  uri: http://howe.com/jeremie_gutkowski
                            tags:
                                - tag1
                                - tag2
                            workflow:
                                argo: Fugiat repudiandae mollitia aliquam labore.
                                basic:
                                    command:
                                        - Et voluptas vitae qui commodi nemo occaecati.
                                        - Et consectetur ex.
                                    cpu:
                                        limit: At eligendi.
                                        request: Doloribus optio laborum incidunt nihil molestias.
                                    image: Qui omnis minus illum nisi dolorum.
                                    memory:
                                        limit: At eligendi.
                                        request: Doloribus optio laborum incidunt nihil molestias.
                                opts: Molestiae minima sint.
                                type: Veritatis dolorum.
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                description: 'Response body may alternatively be #/components/schemas/CreateServiceResponseBodyTiny'
                                $ref: '#/components/schemas/ServiceStatusRT'
                            example:
                                account:
                                    id: http://bednar.name/rupert_hickle
                                    links:
                                        describedBy:
                                            href: https://api.com/swagger/...
                                            type: application/openapi3+json
                                        self: Ipsam deleniti magnam nihil et.
                                description: This service ...
                                id: service:acme:oracle
                                links:
                                    describedBy:
                                        href: https://api.com/swagger/...
                                        type: application/openapi3+json
                                    self: Ipsam deleniti magnam nihil et.
                                metadata:
                                    - name: Beatae qui repellendus molestias culpa aut.
                                      value: Quia quis aut quia veniam est dignissimos.
                                    - name: Beatae qui repellendus molestias culpa aut.
                                      value: Quia quis aut quia veniam est dignissimos.
                                    - name: Beatae qui repellendus molestias culpa aut.
                                      value: Quia quis aut quia veniam est dignissimos.
                                name: Fire risk for Lot2
                                parameters:
                                    - description: The name of the region as according to ...
                                      label: Region Name
                                      name: region
                                      type: string
                                    - label: Rainfall/month threshold
                                      name: threshold
                                      type: float
                                      unit: m
                                provider:
                                    id: http://bednar.name/rupert_hickle
                                    links:
                                        describedBy:
                                            href: https://api.com/swagger/...
                                            type: application/openapi3+json
                                        self: Ipsam deleniti magnam nihil et.
                                provider-ref: service_foo
                                status: error
                                tags:
                                    - tag1
                                    - tag2
                "400":
                    description: 'invalid-credential: Provided credential is not valid'
                "401":
                    description: 'not-authorized: unauthorized access request'
                "403":
                    description: 'invalid-scopes: Token scopes are invalid'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InvalidScopesT'
                "404":
                    description: 'not-found:  not found'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ResourceNotFoundT'
                "422":
                    description: 'invalid-parameter: Request contained semantically wrong paramter value'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InvalidParameterValue'
                "501":
                    description: 'not-implemented: Method is not yet implemented'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/NotImplementedT'
            security:
                - jwt_header_Authorization:
                    - consumer:read
                    - consumer:write
components:
    schemas:
        AddMetaRT:
            type: object
            properties:
                record-id:
                    type: string
                    description: Reference to record created
                    example: urn:ivcap:record.123e4567-e89b-12d3-a456-426614174000
                    format: uri
            example:
                record-id: urn:ivcap:record.123e4567-e89b-12d3-a456-426614174000
            required:
                - record-id
        ArtifactListItem:
            type: object
            properties:
                id:
                    type: string
                    description: Artifact ID
                    example: cayp:artifact:0000-000
                links:
                    $ref: '#/components/schemas/SelfT'
                mime-type:
                    type: string
                    description: Mime (content) type of artifact
                    example: image/jpeg
                name:
                    type: string
                    description: Optional name
                    example: Fire risk for Lot2
                size:
                    type: integer
                    description: Size of aritfact in bytes
                    example: 19000
                    format: int64
                status:
                    type: string
                    description: Artifact status
                    example: ready
                    enum:
                        - pending
                        - partial
                        - ready
                        - error
                        - unknown
            example:
                id: cayp:artifact:0000-000
                links:
                    describedBy:
                        href: https://api.com/swagger/...
                        type: application/openapi3+json
                    self: Ipsam deleniti magnam nihil et.
                mime-type: image/jpeg
                name: Fire risk for Lot2
                size: 19000
                status: ready
            required:
                - links
        ArtifactListRT:
            type: object
            properties:
                artifacts:
                    type: array
                    items:
                        $ref: '#/components/schemas/ArtifactListItem'
                    description: Artifacts
                    example:
                        - id: cayp:artifact:0000-000
                          links:
                            describedBy:
                                href: https://api.com/swagger/...
                                type: application/openapi3+json
                            self: Ipsam deleniti magnam nihil et.
                          mime-type: image/jpeg
                          name: Fire risk for Lot2
                          size: 19000
                          status: ready
                        - id: cayp:artifact:0000-000
                          links:
                            describedBy:
                                href: https://api.com/swagger/...
                                type: application/openapi3+json
                            self: Ipsam deleniti magnam nihil et.
                          mime-type: image/jpeg
                          name: Fire risk for Lot2
                          size: 19000
                          status: ready
                at-time:
                    type: string
                    description: Time at which this list was valid
                    example: "1996-12-19T16:39:57-08:00"
                    format: date-time
                links:
                    $ref: '#/components/schemas/NavT'
            example:
                artifacts:
                    - id: cayp:artifact:0000-000
                      links:
                        describedBy:
                            href: https://api.com/swagger/...
                            type: application/openapi3+json
                        self: Ipsam deleniti magnam nihil et.
                      mime-type: image/jpeg
                      name: Fire risk for Lot2
                      size: 19000
                      status: ready
                    - id: cayp:artifact:0000-000
                      links:
                        describedBy:
                            href: https://api.com/swagger/...
                            type: application/openapi3+json
                        self: Ipsam deleniti magnam nihil et.
                      mime-type: image/jpeg
                      name: Fire risk for Lot2
                      size: 19000
                      status: ready
                    - id: cayp:artifact:0000-000
                      links:
                        describedBy:
                            href: https://api.com/swagger/...
                            type: application/openapi3+json
                        self: Ipsam deleniti magnam nihil et.
                      mime-type: image/jpeg
                      name: Fire risk for Lot2
                      size: 19000
                      status: ready
                at-time: "1996-12-19T16:39:57-08:00"
                links:
                    first: https://api.com/foo/...
                    next: https://api.com/foo/...
                    self: https://api.com/foo/...
            required:
                - artifacts
                - links
        ArtifactStatusRT:
            type: object
            properties:
                account:
                    $ref: '#/components/schemas/RefT'
                cache-of:
                    type: string
                    description: URL of object this artifact is caching
                    example: Nesciunt est.
                created-at:
                    type: string
                    description: DateTime artifact was created
                    example: "2022-01-01"
                data:
                    $ref: '#/components/schemas/SelfT'
                etag:
                    type: string
                    description: ETAG of artifact
                    example: Rerum qui amet.
                id:
                    type: string
                    description: Artifact ID
                    example: type:scope:name
                last-modified-at:
                    type: string
                    description: DateTime artifact was last modified
                    example: "2022-01-01"
                links:
                    $ref: '#/components/schemas/SelfT'
                location:
                    type: string
                    description: link back to record
                    example: Sed iusto nihil dolor recusandae sunt aliquam.
                mime-type:
                    type: string
                    description: Mime-type of data
                    example: Voluptatem quis quam repudiandae dolor odit.
                name:
                    type: string
                    description: Optional name
                    example: Fire risk per LGA
                policy:
                    $ref: '#/components/schemas/RefT'
                size:
                    type: integer
                    description: Size of data
                    example: 200039650156946672
                    format: int64
                status:
                    type: string
                    description: Artifact status
                    example: pending
                    enum:
                        - pending
                        - partial
                        - ready
                        - error
                        - unknown
                tus-offset:
                    type: integer
                    description: TUS offset for partially uploaded content
                    example: 2136629185509603331
                    format: int64
                tus-resumable:
                    type: string
                    description: indicate version of TUS supported
                    example: Vero rerum incidunt commodi voluptas.
            example:
                account:
                    id: http://bednar.name/rupert_hickle
                    links:
                        describedBy:
                            href: https://api.com/swagger/...
                            type: application/openapi3+json
                        self: Ipsam deleniti magnam nihil et.
                cache-of: Reiciendis incidunt.
                created-at: "2022-01-01"
                data:
                    describedBy:
                        href: https://api.com/swagger/...
                        type: application/openapi3+json
                    self: Ipsam deleniti magnam nihil et.
                etag: Perspiciatis sit pariatur sunt.
                id: type:scope:name
                last-modified-at: "2022-01-01"
                links:
                    describedBy:
                        href: https://api.com/swagger/...
                        type: application/openapi3+json
                    self: Ipsam deleniti magnam nihil et.
                location: Reiciendis similique repellendus et.
                mime-type: Consequatur quo ex mollitia eum.
                name: Fire risk per LGA
                policy:
                    id: http://bednar.name/rupert_hickle
                    links:
                        describedBy:
                            href: https://api.com/swagger/...
                            type: application/openapi3+json
                        self: Ipsam deleniti magnam nihil et.
                size: 7620536082927971343
                status: ready
                tus-offset: 4781407271279886572
                tus-resumable: Fugit alias velit.
            required:
                - id
                - status
                - links
        BasicWorkflowOptsT:
            type: object
            properties:
                command:
                    type: array
                    items:
                        type: string
                        example: Excepturi impedit cupiditate et nihil.
                    description: Command to start the container - needed for some container runtimes
                    example:
                        - Ipsum qui necessitatibus quidem sint doloremque.
                        - Blanditiis nihil eligendi.
                        - Cumque qui pariatur sint corrupti.
                        - Accusamus doloremque et dolor ullam dolorem hic.
                cpu:
                    $ref: '#/components/schemas/ResourceMemoryT'
                image:
                    type: string
                    description: container image name
                    example: Nihil rerum voluptas sit perferendis tempora deserunt.
                memory:
                    $ref: '#/components/schemas/ResourceMemoryT'
            example:
                command:
                    - Nemo maxime.
                    - Expedita quasi natus.
                    - Optio minima et quisquam ipsum rem dolore.
                    - Qui est nostrum.
                cpu:
                    limit: At eligendi.
                    request: Doloribus optio laborum incidunt nihil molestias.
                image: Quis voluptate quis ipsa repudiandae quidem eos.
                memory:
                    limit: At eligendi.
                    request: Doloribus optio laborum incidunt nihil molestias.
        CreateServiceResponseBodyTiny:
            type: object
            properties:
                links:
                    $ref: '#/components/schemas/SelfT'
                name:
                    type: string
                    description: Optional provider provided name
                    example: Fire risk for Lot2
            description: create_service_response_body result type (tiny view)
            example:
                links:
                    describedBy:
                        href: https://api.com/swagger/...
                        type: application/openapi3+json
                    self: Ipsam deleniti magnam nihil et.
                name: Fire risk for Lot2
            required:
                - links
        DescribedByT:
            type: object
            properties:
                href:
                    type: string
                    example: https://api.com/swagger/...
                    format: uri
                type:
                    type: string
                    example: application/openapi3+json
            example:
                href: https://api.com/swagger/...
                type: application/openapi3+json
        InvalidParameterValue:
            type: object
            properties:
                message:
                    type: string
                    description: message describing expected type or pattern.
                    example: Voluptas odit.
                name:
                    type: string
                    description: name of parameter.
                    example: Molestiae et ex hic aut dicta dolorem.
                value:
                    type: string
                    description: provided parameter value.
                    example: Est esse voluptas consectetur quia.
            description: Invalide parameter value
            example:
                message: Aut odit dolorum nulla quo.
                name: Asperiores temporibus.
                value: Ut voluptatem.
            required:
                - name
                - message
        InvalidScopesT:
            type: object
            properties:
                id:
                    type: string
                    description: ID of involved resource
                    example: 123e4567-e89b-12d3-a456-426614174000
                    format: uuid
                message:
                    type: string
                    description: Message of error
                    default: Not authorized to perform this action
                    example: Nostrum quibusdam quia aut.
            description: Token scopes are invalid
            example:
                id: 123e4567-e89b-12d3-a456-426614174000
                message: Sapiente commodi dolorem.
            required:
                - message
        ListMetaRT:
            type: object
            properties:
                aspect-path:
                    type: string
                    description: Optional json path to further filter on returned list
                    example: Qui consequatur minima ut ipsam magni iste.
                at-time:
                    type: string
                    description: Time at which this list was valid
                    example: "1996-12-19T16:39:57-08:00"
                    format: date-time
                entity-id:
                    type: string
                    description: Entity for which to request metadata
                    example: urn:blue:image.collA.12
                    format: uri
                links:
                    $ref: '#/components/schemas/NavT'
                records:
                    type: array
                    items:
                        $ref: '#/components/schemas/MetadataListItemRT'
                    description: List of metadata records
                    example:
                        - aspect: '{...}'
                          aspectContext: '{...}'
                          entity: urn:blue:transect.1
                          record-id: urn:ivcap:record.123e4567-e89b-12d3-a456-426614174000
                          schema: urn:blue:schema.image
                        - aspect: '{...}'
                          aspectContext: '{...}'
                          entity: urn:blue:transect.1
                          record-id: urn:ivcap:record.123e4567-e89b-12d3-a456-426614174000
                          schema: urn:blue:schema.image
                        - aspect: '{...}'
                          aspectContext: '{...}'
                          entity: urn:blue:transect.1
                          record-id: urn:ivcap:record.123e4567-e89b-12d3-a456-426614174000
                          schema: urn:blue:schema.image
                        - aspect: '{...}'
                          aspectContext: '{...}'
                          entity: urn:blue:transect.1
                          record-id: urn:ivcap:record.123e4567-e89b-12d3-a456-426614174000
                          schema: urn:blue:schema.image
                schema:
                    type: string
                    description: Optional schema to filter on
                    example: urn:blue:image,urn:blue:location
                    format: uri
            example:
                aspect-path: Harum hic qui voluptas vel repellendus.
                at-time: "1996-12-19T16:39:57-08:00"
                entity-id: urn:blue:image.collA.12
                links:
                    first: https://api.com/foo/...
                    next: https://api.com/foo/...
                    self: https://api.com/foo/...
                records:
                    - aspect: '{...}'
                      aspectContext: '{...}'
                      entity: urn:blue:transect.1
                      record-id: urn:ivcap:record.123e4567-e89b-12d3-a456-426614174000
                      schema: urn:blue:schema.image
                    - aspect: '{...}'
                      aspectContext: '{...}'
                      entity: urn:blue:transect.1
                      record-id: urn:ivcap:record.123e4567-e89b-12d3-a456-426614174000
                      schema: urn:blue:schema.image
                    - aspect: '{...}'
                      aspectContext: '{...}'
                      entity: urn:blue:transect.1
                      record-id: urn:ivcap:record.123e4567-e89b-12d3-a456-426614174000
                      schema: urn:blue:schema.image
                    - aspect: '{...}'
                      aspectContext: '{...}'
                      entity: urn:blue:transect.1
                      record-id: urn:ivcap:record.123e4567-e89b-12d3-a456-426614174000
                      schema: urn:blue:schema.image
                schema: urn:blue:image,urn:blue:location
            required:
                - records
                - links
        MetadataListItemRT:
            type: object
            properties:
                aspect:
                    type: string
                    description: Attached metadata aspect
                    example: '{...}'
                    format: binary
                aspectContext:
                    type: string
                    description: If aspectPath was defined, this is what matched the query
                    example: '{...}'
                entity:
                    type: string
                    description: Entity ID
                    example: urn:blue:transect.1
                    format: uri
                record-id:
                    type: string
                    description: Record ID
                    example: urn:ivcap:record.123e4567-e89b-12d3-a456-426614174000
                    format: uri
                schema:
                    type: string
                    description: Schema ID
                    example: urn:blue:schema.image
                    format: uri
            example:
                aspect: '{...}'
                aspectContext: '{...}'
                entity: urn:blue:transect.1
                record-id: urn:ivcap:record.123e4567-e89b-12d3-a456-426614174000
                schema: urn:blue:schema.image
        MetadataRecordRT:
            type: object
            properties:
                aspect:
                    type: string
                    description: Attached metadata aspect
                    example: '{...}'
                    format: binary
                asserter:
                    type: string
                    description: Entity asserting this metadata record at 'valid-from'
                    example: '...'
                entity:
                    type: string
                    description: Entity ID
                    example: urn:blue:transect.1
                    format: uri
                record-id:
                    type: string
                    description: Record ID
                    example: urn:ivcap:record.123e4567-e89b-12d3-a456-426614174000
                    format: uri
                revoker:
                    type: string
                    description: Entity revoking this record at 'valid-to'
                    example: '...'
                    format: date-time
                schema:
                    type: string
                    description: Schema ID
                    example: urn:blue:schema.image
                    format: uri
                valid-from:
                    type: string
                    description: Time this record was asserted
                    example: "1996-12-19T16:39:57-08:00"
                    format: date-time
                valid-to:
                    type: string
                    description: Time this record was revoked
                    example: "1996-12-19T16:39:57-08:00"
                    format: date-time
            example:
                aspect: '{...}'
                asserter: '...'
                entity: urn:blue:transect.1
                record-id: urn:ivcap:record.123e4567-e89b-12d3-a456-426614174000
                revoker: '...'
                schema: urn:blue:schema.image
                valid-from: "1996-12-19T16:39:57-08:00"
                valid-to: "1996-12-19T16:39:57-08:00"
        NavT:
            type: object
            properties:
                first:
                    type: string
                    example: https://api.com/foo/...
                    format: uri
                next:
                    type: string
                    example: https://api.com/foo/...
                    format: uri
                self:
                    type: string
                    example: https://api.com/foo/...
                    format: uri
            example:
                first: https://api.com/foo/...
                next: https://api.com/foo/...
                self: https://api.com/foo/...
        NotImplementedT:
            type: object
            properties:
                message:
                    type: string
                    description: Information message
                    default: Method not implemented
                    example: Voluptatum nihil optio sit.
            description: Method is not yet implemented
            example:
                message: Iure facere excepturi voluptatem provident.
            required:
                - message
        OrderListItem:
            type: object
            properties:
                account-id:
                    type: string
                    description: ID of ordered service
                    example: "2022-01-01"
                finished-at:
                    type: string
                    description: DateTime order was finished
                    example: "2022-01-01"
                id:
                    type: string
                    description: Order ID
                    example: cayp:order:123e4567-e89b-12d3-a456-426614174000
                links:
                    $ref: '#/components/schemas/SelfT'
                name:
                    type: string
                    description: Optional customer provided name
                    example: Fire risk for Lot2
                ordered-at:
                    type: string
                    description: DateTime order was placed
                    example: "2022-01-01"
                service-id:
                    type: string
                    description: ID of ordered service
                    example: "2022-01-01"
                started-at:
                    type: string
                    description: DateTime processing of order started
                    example: "2022-01-01"
                status:
                    type: string
                    description: Order status
                    example: pending
                    enum:
                        - unknown
                        - pending
                        - scheduled
                        - executing
                        - succeeded
                        - failed
                        - error
            example:
                account-id: "2022-01-01"
                finished-at: "2022-01-01"
                id: cayp:order:123e4567-e89b-12d3-a456-426614174000
                links:
                    describedBy:
                        href: https://api.com/swagger/...
                        type: application/openapi3+json
                    self: Ipsam deleniti magnam nihil et.
                name: Fire risk for Lot2
                ordered-at: "2022-01-01"
                service-id: "2022-01-01"
                started-at: "2022-01-01"
                status: unknown
            required:
                - links
        OrderListRT:
            type: object
            properties:
                at-time:
                    type: string
                    description: Time at which this list was valid
                    example: "1996-12-19T16:39:57-08:00"
                    format: date-time
                links:
                    $ref: '#/components/schemas/NavT'
                orders:
                    type: array
                    items:
                        $ref: '#/components/schemas/OrderListItem'
                    description: Orders
                    example:
                        - account-id: "2022-01-01"
                          finished-at: "2022-01-01"
                          id: cayp:order:123e4567-e89b-12d3-a456-426614174000
                          links:
                            describedBy:
                                href: https://api.com/swagger/...
                                type: application/openapi3+json
                            self: Ipsam deleniti magnam nihil et.
                          name: Fire risk for Lot2
                          ordered-at: "2022-01-01"
                          service-id: "2022-01-01"
                          started-at: "2022-01-01"
                          status: unknown
                        - account-id: "2022-01-01"
                          finished-at: "2022-01-01"
                          id: cayp:order:123e4567-e89b-12d3-a456-426614174000
                          links:
                            describedBy:
                                href: https://api.com/swagger/...
                                type: application/openapi3+json
                            self: Ipsam deleniti magnam nihil et.
                          name: Fire risk for Lot2
                          ordered-at: "2022-01-01"
                          service-id: "2022-01-01"
                          started-at: "2022-01-01"
                          status: unknown
                        - account-id: "2022-01-01"
                          finished-at: "2022-01-01"
                          id: cayp:order:123e4567-e89b-12d3-a456-426614174000
                          links:
                            describedBy:
                                href: https://api.com/swagger/...
                                type: application/openapi3+json
                            self: Ipsam deleniti magnam nihil et.
                          name: Fire risk for Lot2
                          ordered-at: "2022-01-01"
                          service-id: "2022-01-01"
                          started-at: "2022-01-01"
                          status: unknown
                        - account-id: "2022-01-01"
                          finished-at: "2022-01-01"
                          id: cayp:order:123e4567-e89b-12d3-a456-426614174000
                          links:
                            describedBy:
                                href: https://api.com/swagger/...
                                type: application/openapi3+json
                            self: Ipsam deleniti magnam nihil et.
                          name: Fire risk for Lot2
                          ordered-at: "2022-01-01"
                          service-id: "2022-01-01"
                          started-at: "2022-01-01"
                          status: unknown
            example:
                at-time: "1996-12-19T16:39:57-08:00"
                links:
                    first: https://api.com/foo/...
                    next: https://api.com/foo/...
                    self: https://api.com/foo/...
                orders:
                    - account-id: "2022-01-01"
                      finished-at: "2022-01-01"
                      id: cayp:order:123e4567-e89b-12d3-a456-426614174000
                      links:
                        describedBy:
                            href: https://api.com/swagger/...
                            type: application/openapi3+json
                        self: Ipsam deleniti magnam nihil et.
                      name: Fire risk for Lot2
                      ordered-at: "2022-01-01"
                      service-id: "2022-01-01"
                      started-at: "2022-01-01"
                      status: unknown
                    - account-id: "2022-01-01"
                      finished-at: "2022-01-01"
                      id: cayp:order:123e4567-e89b-12d3-a456-426614174000
                      links:
                        describedBy:
                            href: https://api.com/swagger/...
                            type: application/openapi3+json
                        self: Ipsam deleniti magnam nihil et.
                      name: Fire risk for Lot2
                      ordered-at: "2022-01-01"
                      service-id: "2022-01-01"
                      started-at: "2022-01-01"
                      status: unknown
                    - account-id: "2022-01-01"
                      finished-at: "2022-01-01"
                      id: cayp:order:123e4567-e89b-12d3-a456-426614174000
                      links:
                        describedBy:
                            href: https://api.com/swagger/...
                            type: application/openapi3+json
                        self: Ipsam deleniti magnam nihil et.
                      name: Fire risk for Lot2
                      ordered-at: "2022-01-01"
                      service-id: "2022-01-01"
                      started-at: "2022-01-01"
                      status: unknown
                    - account-id: "2022-01-01"
                      finished-at: "2022-01-01"
                      id: cayp:order:123e4567-e89b-12d3-a456-426614174000
                      links:
                        describedBy:
                            href: https://api.com/swagger/...
                            type: application/openapi3+json
                        self: Ipsam deleniti magnam nihil et.
                      name: Fire risk for Lot2
                      ordered-at: "2022-01-01"
                      service-id: "2022-01-01"
                      started-at: "2022-01-01"
                      status: unknown
            required:
                - orders
                - at-time
                - links
        OrderRequestT:
            type: object
            properties:
                account-id:
                    type: string
                    description: Reference to billable account
                    example: urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000
                    format: uri
                name:
                    type: string
                    description: Optional customer provided name
                    example: Fire risk for Lot2
                parameters:
                    type: array
                    items:
                        $ref: '#/components/schemas/ParameterT'
                    description: Service parameters
                    example:
                        - name: region
                          value: Upper Valley
                        - name: threshold
                          value: 10
                policy-id:
                    type: string
                    description: Policy to control access to record an all generated artifacts
                    example: urn:ivcap:policy:123e4567-e89b-12d3-a456-426614174000
                    format: uri
                service-id:
                    type: string
                    description: Reference to service requested
                    example: urn:ivcap:service:123e4567-e89b-12d3-a456-426614174000
                    format: uri
            example:
                account-id: urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000
                name: Fire risk for Lot2
                parameters:
                    - name: region
                      value: Upper Valley
                    - name: threshold
                      value: 10
                policy-id: urn:ivcap:policy:123e4567-e89b-12d3-a456-426614174000
                service-id: urn:ivcap:service:123e4567-e89b-12d3-a456-426614174000
            required:
                - service-id
                - parameters
        OrderStatusRT:
            type: object
            properties:
                account:
                    $ref: '#/components/schemas/RefT'
                finished-at:
                    type: string
                    description: DateTime order processing finished
                    example: "2023-03-17T04:57:00Z"
                id:
                    type: string
                    description: Order ID
                    example: 123e4567-e89b-12d3-a456-426614174000
                    format: uuid
                links:
                    $ref: '#/components/schemas/SelfT'
                name:
                    type: string
                    description: Optional customer provided name
                    example: Fire risk for Lot2
                ordered-at:
                    type: string
                    description: DateTime order was placed
                    example: "2023-03-17T04:57:00Z"
                parameters:
                    type: array
                    items:
                        $ref: '#/components/schemas/ParameterT'
                    description: Service parameters
                    example:
                        - name: region
                          value: Upper Valley
                        - name: threshold
                          value: 10
                products:
                    type: array
                    items:
                        $ref: '#/components/schemas/ProductT'
                    description: Products delivered for this order
                    example:
                        - href: https:/.../1/artifacts/0000-00001220
                          mime-type: image/geo+tiff
                          name: fire risk map
                          size: 1234963
                service:
                    $ref: '#/components/schemas/RefT'
                started-at:
                    type: string
                    description: DateTime order processing started
                    example: "2023-03-17T04:57:00Z"
                status:
                    type: string
                    description: Order status
                    example: failed
                    enum:
                        - unknown
                        - pending
                        - scheduled
                        - executing
                        - succeeded
                        - failed
                        - error
            example:
                account:
                    id: http://bednar.name/rupert_hickle
                    links:
                        describedBy:
                            href: https://api.com/swagger/...
                            type: application/openapi3+json
                        self: Ipsam deleniti magnam nihil et.
                finished-at: "2023-03-17T04:57:00Z"
                id: 123e4567-e89b-12d3-a456-426614174000
                links:
                    describedBy:
                        href: https://api.com/swagger/...
                        type: application/openapi3+json
                    self: Ipsam deleniti magnam nihil et.
                name: Fire risk for Lot2
                ordered-at: "2023-03-17T04:57:00Z"
                parameters:
                    - name: region
                      value: Upper Valley
                    - name: threshold
                      value: 10
                products:
                    - href: https:/.../1/artifacts/0000-00001220
                      mime-type: image/geo+tiff
                      name: fire risk map
                      size: 1234963
                service:
                    id: http://bednar.name/rupert_hickle
                    links:
                        describedBy:
                            href: https://api.com/swagger/...
                            type: application/openapi3+json
                        self: Ipsam deleniti magnam nihil et.
                started-at: "2023-03-17T04:57:00Z"
                status: unknown
            required:
                - id
                - parameters
        ParameterDefT:
            type: object
            properties:
                constant:
                    type: boolean
                    example: false
                default:
                    type: string
                    example: Consequatur dolor natus nihil.
                description:
                    type: string
                    example: Accusantium suscipit nisi labore.
                label:
                    type: string
                    example: Eum velit molestiae quo.
                name:
                    type: string
                    example: Id magni consequatur.
                optional:
                    type: boolean
                    example: true
                options:
                    type: array
                    items:
                        $ref: '#/components/schemas/ParameterOptT'
                    example:
                        - description: Cupiditate est omnis quo aut neque numquam.
                          value: Autem dolore eos rerum tempora optio.
                        - description: Cupiditate est omnis quo aut neque numquam.
                          value: Autem dolore eos rerum tempora optio.
                type:
                    type: string
                    example: Omnis dicta incidunt impedit necessitatibus.
                unit:
                    type: string
                    example: Modi exercitationem natus quaerat veritatis.
            example:
                constant: false
                default: Rerum ut omnis alias.
                description: Commodi facilis sit quas est dignissimos.
                label: Officiis asperiores quaerat.
                name: Vel officia eum.
                optional: true
                options:
                    - description: Cupiditate est omnis quo aut neque numquam.
                      value: Autem dolore eos rerum tempora optio.
                    - description: Cupiditate est omnis quo aut neque numquam.
                      value: Autem dolore eos rerum tempora optio.
                    - description: Cupiditate est omnis quo aut neque numquam.
                      value: Autem dolore eos rerum tempora optio.
                type: Et nam.
                unit: Quia omnis.
        ParameterOptT:
            type: object
            properties:
                description:
                    type: string
                    example: Est dicta.
                value:
                    type: string
                    example: Voluptatum recusandae et laboriosam id est.
            example:
                description: Sit est magni corrupti ut et assumenda.
                value: Inventore eveniet qui quia.
        ParameterT:
            type: object
            properties:
                name:
                    type: string
                    example: Dolores vel.
                value:
                    type: string
                    example: Omnis maxime rerum aut voluptates.
            example:
                name: Nam consectetur sapiente at.
                value: Aut illo doloremque aut maxime.
        ProductT:
            type: object
            properties:
                id:
                    type: string
                    example: Quasi assumenda aut quia.
                links:
                    $ref: '#/components/schemas/SelfWithDataT'
                mime-type:
                    type: string
                    example: Suscipit officiis.
                name:
                    type: string
                    example: Non occaecati.
                size:
                    type: integer
                    example: 9160335822313678370
                    format: int64
                status:
                    type: string
                    example: Ut nostrum.
            example:
                id: Doloremque quod earum.
                links:
                    data: Laboriosam sint sit cumque.
                    describedBy:
                        href: https://api.com/swagger/...
                        type: application/openapi3+json
                    self: Necessitatibus perferendis quo omnis voluptas.
                mime-type: Laboriosam et ea voluptatum quas.
                name: Et est quisquam doloribus labore est recusandae.
                size: 4541757197358361803
                status: Exercitationem excepturi quia qui.
        ReadResponseBodyTiny:
            type: object
            properties:
                links:
                    $ref: '#/components/schemas/SelfT'
                name:
                    type: string
                    description: Optional customer provided name
                    example: Fire risk for Lot2
                status:
                    type: string
                    description: Order status
                    example: scheduled
                    enum:
                        - unknown
                        - pending
                        - scheduled
                        - executing
                        - succeeded
                        - failed
                        - error
            description: ReadResponseBody result type (tiny view)
            example:
                links:
                    describedBy:
                        href: https://api.com/swagger/...
                        type: application/openapi3+json
                    self: Ipsam deleniti magnam nihil et.
                name: Fire risk for Lot2
                status: failed
        RefT:
            type: object
            properties:
                id:
                    type: string
                    example: http://kiehnlockman.com/eleonore_witting
                    format: uri
                links:
                    $ref: '#/components/schemas/SelfT'
            example:
                id: http://mills.biz/emanuel
                links:
                    describedBy:
                        href: https://api.com/swagger/...
                        type: application/openapi3+json
                    self: Ipsam deleniti magnam nihil et.
        ReferenceT:
            type: object
            properties:
                title:
                    type: string
                    description: Title of reference document
                    example: Labore molestias dolorum provident inventore nam dicta.
                uri:
                    type: string
                    description: Link to document
                    example: http://fisher.info/buddy_jenkins
                    format: uri
            example:
                title: Voluptas dolores quis quaerat consequatur quas.
                uri: http://boganstanton.info/nina.osinski
        ResourceMemoryT:
            type: object
            properties:
                limit:
                    type: string
                    description: minimal requirements [system limit]
                    example: Totam voluptas.
                request:
                    type: string
                    description: minimal requirements [0]
                    example: Et dolore qui dolores est dolorum rerum.
            description: |-
                See
                and https://kubernetes.io/docs/reference/kubernetes-api/common-definitions/quantity/ for units
            example:
                limit: Et vel beatae.
                request: Ipsa consequatur distinctio necessitatibus.
        ResourceNotFoundT:
            type: object
            properties:
                id:
                    type: string
                    description: ID of missing resource
                    example: cayp:type:123e4567-e89b-12d3-a456-426614174000
                    format: uri
                message:
                    type: string
                    description: Message of error
                    example: Resource 123...00 not found
            description: artifacts not found
            example:
                id: cayp:type:123e4567-e89b-12d3-a456-426614174000
                message: Resource 123...00 not found
            required:
                - message
                - id
        SelfT:
            type: object
            properties:
                describedBy:
                    $ref: '#/components/schemas/DescribedByT'
                self:
                    type: string
                    example: Consequatur voluptas eius sed error id et.
            example:
                describedBy:
                    href: https://api.com/swagger/...
                    type: application/openapi3+json
                self: Tenetur ratione qui amet reiciendis debitis.
        SelfWithDataT:
            type: object
            properties:
                data:
                    type: string
                    example: Voluptatem quibusdam dolore.
                describedBy:
                    $ref: '#/components/schemas/DescribedByT'
                self:
                    type: string
                    example: Occaecati sit laboriosam.
            example:
                data: Incidunt maiores et dolores quo soluta.
                describedBy:
                    href: https://api.com/swagger/...
                    type: application/openapi3+json
                self: Beatae incidunt voluptas sequi debitis est quis.
        ServiceDescriptionT:
            type: object
            properties:
                account-id:
                    type: string
                    description: Reference to account revenues for this service should be credited to
                    example: urn:ivcap:account:0f0e3f57-80f7-4899-9b69-459af2efd789
                    format: uri
                banner:
                    type: string
                    description: Link to banner image oprionally used for this service
                    example: http://flatleytremblay.name/elody
                    format: uri
                description:
                    type: string
                    description: More detailed description of the service
                    example: This service ...
                metadata:
                    type: array
                    items:
                        $ref: '#/components/schemas/ParameterT'
                    description: Optional provider provided meta tags
                    example:
                        - name: Voluptatum qui error ipsam.
                          value: Hic voluptates error fugit.
                        - name: Voluptatum qui error ipsam.
                          value: Hic voluptates error fugit.
                        - name: Voluptatum qui error ipsam.
                          value: Hic voluptates error fugit.
                name:
                    type: string
                    description: Optional provider provided name
                    example: Fire risk for Lot2
                parameters:
                    type: array
                    items:
                        $ref: '#/components/schemas/ParameterDefT'
                    description: Service parameter definitions
                    example:
                        - description: The name of the region as according to ...
                          label: Region Name
                          name: region
                          type: string
                        - label: Rainfall/month threshold
                          name: threshold
                          type: float
                          unit: m
                policy-id:
                    type: string
                    description: Reference to policy controlling access
                    example: Asperiores ipsa labore.
                provider-id:
                    type: string
                    description: Reference to service provider
                    example: urn:ivcap:provider:0f0e3f57-80f7-4899-9b69-459af2efd789
                    format: uri
                provider-ref:
                    type: string
                    description: Provider provided reference. Should to be a single string with punctuations allowed. Might be changed, so please check result
                    example: service_foo_patch_1
                references:
                    type: array
                    items:
                        $ref: '#/components/schemas/ReferenceT'
                    description: Reference to account revenues for this service should be credited to
                    example:
                        - title: Et sed.
                          uri: http://howe.com/jeremie_gutkowski
                        - title: Et sed.
                          uri: http://howe.com/jeremie_gutkowski
                        - title: Et sed.
                          uri: http://howe.com/jeremie_gutkowski
                        - title: Et sed.
                          uri: http://howe.com/jeremie_gutkowski
                tags:
                    type: array
                    items:
                        type: string
                        example: Nihil itaque quia.
                    description: Optional provider provided tags
                    example:
                        - tag1
                        - tag2
                workflow:
                    $ref: '#/components/schemas/WorkflowT'
            example:
                account-id: urn:ivcap:account:0f0e3f57-80f7-4899-9b69-459af2efd789
                banner: http://rempel.biz/greyson_durgan
                description: This service ...
                metadata:
                    - name: Voluptatum qui error ipsam.
                      value: Hic voluptates error fugit.
                    - name: Voluptatum qui error ipsam.
                      value: Hic voluptates error fugit.
                    - name: Voluptatum qui error ipsam.
                      value: Hic voluptates error fugit.
                    - name: Voluptatum qui error ipsam.
                      value: Hic voluptates error fugit.
                name: Fire risk for Lot2
                parameters:
                    - description: The name of the region as according to ...
                      label: Region Name
                      name: region
                      type: string
                    - label: Rainfall/month threshold
                      name: threshold
                      type: float
                      unit: m
                policy-id: Iure magni nihil ut rerum omnis quam.
                provider-id: urn:ivcap:provider:0f0e3f57-80f7-4899-9b69-459af2efd789
                provider-ref: service_foo_patch_1
                references:
                    - title: Et sed.
                      uri: http://howe.com/jeremie_gutkowski
                    - title: Et sed.
                      uri: http://howe.com/jeremie_gutkowski
                    - title: Et sed.
                      uri: http://howe.com/jeremie_gutkowski
                tags:
                    - tag1
                    - tag2
                workflow:
                    argo: Fugiat repudiandae mollitia aliquam labore.
                    basic:
                        command:
                            - Et voluptas vitae qui commodi nemo occaecati.
                            - Et consectetur ex.
                        cpu:
                            limit: At eligendi.
                            request: Doloribus optio laborum incidunt nihil molestias.
                        image: Qui omnis minus illum nisi dolorum.
                        memory:
                            limit: At eligendi.
                            request: Doloribus optio laborum incidunt nihil molestias.
                    opts: Molestiae minima sint.
                    type: Veritatis dolorum.
            required:
                - description
                - provider-id
                - account-id
                - workflow
                - parameters
        ServiceListItem:
            type: object
            properties:
                description:
                    type: string
                    description: Optional description of the service
                    example: Some lengthy description of fire risk
                id:
                    type: string
                    description: Service ID
                    example: service:acme:oracle
                links:
                    $ref: '#/components/schemas/SelfT'
                name:
                    type: string
                    description: Optional customer provided name
                    example: Fire risk for region
                provider:
                    $ref: '#/components/schemas/RefT'
            example:
                description: Some lengthy description of fire risk
                id: service:acme:oracle
                links:
                    describedBy:
                        href: https://api.com/swagger/...
                        type: application/openapi3+json
                    self: Ipsam deleniti magnam nihil et.
                name: Fire risk for region
                provider:
                    id: http://bednar.name/rupert_hickle
                    links:
                        describedBy:
                            href: https://api.com/swagger/...
                            type: application/openapi3+json
                        self: Ipsam deleniti magnam nihil et.
            required:
                - links
        ServiceListRT:
            type: object
            properties:
                at-time:
                    type: string
                    description: Time at which this list was valid
                    example: "1996-12-19T16:39:57-08:00"
                    format: date-time
                links:
                    $ref: '#/components/schemas/NavT'
                services:
                    type: array
                    items:
                        $ref: '#/components/schemas/ServiceListItem'
                    description: Services
                    example:
                        - description: Some lengthy description of fire risk
                          id: service:acme:oracle
                          links:
                            describedBy:
                                href: https://api.com/swagger/...
                                type: application/openapi3+json
                            self: Ipsam deleniti magnam nihil et.
                          name: Fire risk for region
                          provider:
                            id: http://bednar.name/rupert_hickle
                            links:
                                describedBy:
                                    href: https://api.com/swagger/...
                                    type: application/openapi3+json
                                self: Ipsam deleniti magnam nihil et.
                        - description: Some lengthy description of fire risk
                          id: service:acme:oracle
                          links:
                            describedBy:
                                href: https://api.com/swagger/...
                                type: application/openapi3+json
                            self: Ipsam deleniti magnam nihil et.
                          name: Fire risk for region
                          provider:
                            id: http://bednar.name/rupert_hickle
                            links:
                                describedBy:
                                    href: https://api.com/swagger/...
                                    type: application/openapi3+json
                                self: Ipsam deleniti magnam nihil et.
            example:
                at-time: "1996-12-19T16:39:57-08:00"
                links:
                    first: https://api.com/foo/...
                    next: https://api.com/foo/...
                    self: https://api.com/foo/...
                services:
                    - description: Some lengthy description of fire risk
                      id: service:acme:oracle
                      links:
                        describedBy:
                            href: https://api.com/swagger/...
                            type: application/openapi3+json
                        self: Ipsam deleniti magnam nihil et.
                      name: Fire risk for region
                      provider:
                        id: http://bednar.name/rupert_hickle
                        links:
                            describedBy:
                                href: https://api.com/swagger/...
                                type: application/openapi3+json
                            self: Ipsam deleniti magnam nihil et.
                    - description: Some lengthy description of fire risk
                      id: service:acme:oracle
                      links:
                        describedBy:
                            href: https://api.com/swagger/...
                            type: application/openapi3+json
                        self: Ipsam deleniti magnam nihil et.
                      name: Fire risk for region
                      provider:
                        id: http://bednar.name/rupert_hickle
                        links:
                            describedBy:
                                href: https://api.com/swagger/...
                                type: application/openapi3+json
                            self: Ipsam deleniti magnam nihil et.
                    - description: Some lengthy description of fire risk
                      id: service:acme:oracle
                      links:
                        describedBy:
                            href: https://api.com/swagger/...
                            type: application/openapi3+json
                        self: Ipsam deleniti magnam nihil et.
                      name: Fire risk for region
                      provider:
                        id: http://bednar.name/rupert_hickle
                        links:
                            describedBy:
                                href: https://api.com/swagger/...
                                type: application/openapi3+json
                            self: Ipsam deleniti magnam nihil et.
            required:
                - services
                - at-time
                - links
        ServiceStatusRT:
            type: object
            properties:
                account:
                    $ref: '#/components/schemas/RefT'
                description:
                    type: string
                    description: More detailed description of the service
                    example: This service ...
                id:
                    type: string
                    description: Service ID
                    example: service:acme:oracle
                links:
                    $ref: '#/components/schemas/SelfT'
                metadata:
                    type: array
                    items:
                        $ref: '#/components/schemas/ParameterT'
                    description: Optional provider provided meta tags
                    example:
                        - name: Beatae qui repellendus molestias culpa aut.
                          value: Quia quis aut quia veniam est dignissimos.
                        - name: Beatae qui repellendus molestias culpa aut.
                          value: Quia quis aut quia veniam est dignissimos.
                        - name: Beatae qui repellendus molestias culpa aut.
                          value: Quia quis aut quia veniam est dignissimos.
                        - name: Beatae qui repellendus molestias culpa aut.
                          value: Quia quis aut quia veniam est dignissimos.
                name:
                    type: string
                    description: Optional provider provided name
                    example: Fire risk for Lot2
                parameters:
                    type: array
                    items:
                        $ref: '#/components/schemas/ParameterDefT'
                    description: Service parameter definitions
                    example:
                        - description: The name of the region as according to ...
                          label: Region Name
                          name: region
                          type: string
                        - label: Rainfall/month threshold
                          name: threshold
                          type: float
                          unit: m
                provider:
                    $ref: '#/components/schemas/RefT'
                provider-ref:
                    type: string
                    description: Provider provided ID. Needs to be a single string with punctuations allowed. Might have been changed
                    example: service_foo
                status:
                    type: string
                    description: Service status
                    example: error
                    enum:
                        - active
                        - inactive
                        - error
                tags:
                    type: array
                    items:
                        type: string
                        example: Perferendis et qui.
                    description: Optional provider provided tags
                    example:
                        - tag1
                        - tag2
            example:
                account:
                    id: http://bednar.name/rupert_hickle
                    links:
                        describedBy:
                            href: https://api.com/swagger/...
                            type: application/openapi3+json
                        self: Ipsam deleniti magnam nihil et.
                description: This service ...
                id: service:acme:oracle
                links:
                    describedBy:
                        href: https://api.com/swagger/...
                        type: application/openapi3+json
                    self: Ipsam deleniti magnam nihil et.
                metadata:
                    - name: Beatae qui repellendus molestias culpa aut.
                      value: Quia quis aut quia veniam est dignissimos.
                    - name: Beatae qui repellendus molestias culpa aut.
                      value: Quia quis aut quia veniam est dignissimos.
                    - name: Beatae qui repellendus molestias culpa aut.
                      value: Quia quis aut quia veniam est dignissimos.
                name: Fire risk for Lot2
                parameters:
                    - description: The name of the region as according to ...
                      label: Region Name
                      name: region
                      type: string
                    - label: Rainfall/month threshold
                      name: threshold
                      type: float
                      unit: m
                provider:
                    id: http://bednar.name/rupert_hickle
                    links:
                        describedBy:
                            href: https://api.com/swagger/...
                            type: application/openapi3+json
                        self: Ipsam deleniti magnam nihil et.
                provider-ref: service_foo
                status: active
                tags:
                    - tag1
                    - tag2
            required:
                - id
                - links
                - parameters
        WorkflowT:
            type: object
            properties:
                argo:
                    type: string
                    description: Defines the workflow using argo's WF schema
                    example: Enim porro ex dolores culpa vero asperiores.
                    format: binary
                basic:
                    $ref: '#/components/schemas/BasicWorkflowOptsT'
                opts:
                    type: string
                    description: Type specific options - left for backward compatibility, if possible use type specific elements
                    example: Amet neque.
                    format: binary
                type:
                    type: string
                    description: Type of workflow
                    example: Nulla corporis unde aperiam.
            description: |-
                Defines the workflow to use to execute this service. Currently supported 'types' are 'basic'
                	and 'argo'. In case of 'basic', use the 'basic' element for further parameters. In the current implementation
                	'opts' is expected to contain the same schema as 'basic'
            example:
                argo: Dolor deserunt quas ut.
                basic:
                    command:
                        - Et voluptas vitae qui commodi nemo occaecati.
                        - Et consectetur ex.
                    cpu:
                        limit: At eligendi.
                        request: Doloribus optio laborum incidunt nihil molestias.
                    image: Qui omnis minus illum nisi dolorum.
                    memory:
                        limit: At eligendi.
                        request: Doloribus optio laborum incidunt nihil molestias.
                opts: Vel vero.
                type: Inventore officiis repellendus ipsum quasi harum vitae.
    securitySchemes:
        jwt_header_Authorization:
            type: http
            description: Secures endpoint by requiring a valid JWT token
            scheme: bearer
tags:
    - name: openapi
      description: The openapi service serves the OpenAPI definition.
    - name: artifact
      description: Manage the life cycle of an artifact stored by this deployment.
    - name: metadata
      description: Manages the life cycle of metadata attached to an entity.
    - name: order
      description: Manage the life cycle of an order for CRE services.
    - name: service
      description: Manage the life cycle of a service offered on the CRE marketplace.
