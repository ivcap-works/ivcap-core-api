{"openapi": "3.0.3", "info": {"title": "IVCAP", "description": "\n**IVCAP** is for **service providers** to **offer** analytics **services** \nand for **consumers** to **order** customised **products** produced by said services.\n\n### Typical Workflow\n\n1. Obtain an token from the ID Providers listed in the document returned \nby [/1/authinfo.yaml](/1/authinfo.yaml). The token needs to be added\nas a bearer token via the \n<code>Authorization</code> header to every request to this service.\n1. <a href=\"#get-/1/services\">List</a> all available service.\n1. Select appropriate service and retrieve details, like parameters via \n<a href=\"#get-/1/services/-id-\">Read Service</a>.\n1. Create the appropriate json request and POST it to \n<a href=\"#post-/1/orders\">Create Order</a>. (see the example in the\nservice description.)\n1. The reply from the above POST operation contains a link (<code>links/self</code>) to the\nnewly create order record accessible via <a href=\"#get-/1/orders/-id-\">Read Order</a>.\n1. Progress of the order fulfillment can be tracked via repeated calls to \n<a href=\"#get-/1/orders/-id-\">Read Order</a> and the returned <code>status</code>.\n1. Any information products created in the context of an order will be listed under <code>producs</code>\nwhich also include a link to the respective <a href=\"#get-/1/artifacts/-id-\">Read Artifact</a>.\n1. The <a href=\"#get-/1/artifacts/-id-\">Read Artifact</a> service will return more details for \neach artifact, including a <code>data</code> link through which the artifact content can be downloaded. (The\ndownload link is also included in the <code>products</code> list returned by \nthe <a href=\"#get-/1/orders/-id-\">Read Order</a> service ).\n\nPlease note that all schemas in this API are following the [{json:api}](https://jsonapi.org/) specs \nwherever appropriate.\n\n### High-level Architecture\n\nOn receiving an order through this **API**, the internal *Order Dispatcher* is \ncreating a *workflow*, dispatching that to the \n[Argo workflow engine](https://argoproj.github.io/argo-workflows/) \nand create appropriate records in [Magda](https://magda.io/). \nAs the execution of the workflow progresses, appropriate updates are posted to the order record in Magda, \nsuch as data accessed or produced. In addition, any information products created will be\nstored via [Minio](https://min.io/) in a deployment specific object store \nand made accessible through the *Artifact* service.\n\t", "version": "0.28"}, "servers": [{"url": "http://localhost:8088", "description": "This endpoint hosts all the IVCAP services."}], "paths": {"/1/artifacts": {"get": {"tags": ["artifact"], "summary": "list artifact", "description": "list artifacts", "operationId": "artifact#list", "parameters": [{"name": "limit", "in": "query", "description": "The $limit system query option requests the number of items in the queried\n\t\t\t\tcollection to be included in the result.", "allowEmptyValue": true, "schema": {"type": "integer", "description": "The $limit system query option requests the number of items in the queried\n\t\t\t\tcollection to be included in the result.", "default": 10, "example": 10, "minimum": 1, "maximum": 50}, "example": 10}, {"name": "page", "in": "query", "description": "The content of 'page' is returned in the 'links' part of a previous query and\n\t\t\t\twill when set, ALL other parameters, except for 'limit' are ignored.", "allowEmptyValue": true, "schema": {"type": "string", "description": "The content of 'page' is returned in the 'links' part of a previous query and\n\t\t\t\twill when set, ALL other parameters, except for 'limit' are ignored.", "example": "gdsgQwhdgd"}, "example": "gdsgQwhdgd"}, {"name": "filter", "in": "query", "description": "The 'filter' system query option allows clients to filter a collection of\n\t\t\t\tresources that are addressed by a request URL. The expression specified with 'filter'\n\t\t\t\tis evaluated for each resource in the collection, and only items where the expression\n\t\t\t\tevaluates to true are included in the response.", "allowEmptyValue": true, "schema": {"type": "string", "description": "The 'filter' system query option allows clients to filter a collection of\n\t\t\t\tresources that are addressed by a request URL. The expression specified with 'filter'\n\t\t\t\tis evaluated for each resource in the collection, and only items where the expression\n\t\t\t\tevaluates to true are included in the response.", "example": "name ~= 'Scott%'"}, "example": "name ~= 'Scott%'"}, {"name": "order-by", "in": "query", "description": "The 'orderby' query option allows clients to request resources in either\n\t\t\t\tascending order using asc or descending order using desc. If asc or desc not specified,\n\t\t\t\tthen the resources will be ordered in ascending order. The request below orders Trips on\n\t\t\t\tproperty EndsAt in descending order.", "allowEmptyValue": true, "schema": {"type": "string", "description": "The 'orderby' query option allows clients to request resources in either\n\t\t\t\tascending order using asc or descending order using desc. If asc or desc not specified,\n\t\t\t\tthen the resources will be ordered in ascending order. The request below orders Trips on\n\t\t\t\tproperty EndsAt in descending order.", "example": "orderby=EndsAt"}, "example": "orderby=EndsAt"}, {"name": "order-desc", "in": "query", "description": "When set order result in descending order. Ascending order is the default.", "allowEmptyValue": true, "schema": {"type": "boolean", "description": "When set order result in descending order. Ascending order is the default.", "default": false, "example": false}, "example": true}, {"name": "at-time", "in": "query", "description": "Return the state of the respective resources at that time [now]", "allowEmptyValue": true, "schema": {"type": "string", "description": "Return the state of the respective resources at that time [now]", "example": "1996-12-19T16:39:57-08:00", "format": "date-time"}, "example": "1996-12-19T16:39:57-08:00"}], "responses": {"200": {"description": "OK response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ArtifactListRT"}, "example": {"artifacts": [{"id": "cayp:artifact:0000-000", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Velit nobis sapiente."}, "mime-type": "image/jpeg", "name": "Fire risk for Lot2", "size": 19000, "status": "ready"}, {"id": "cayp:artifact:0000-000", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Velit nobis sapiente."}, "mime-type": "image/jpeg", "name": "Fire risk for Lot2", "size": 19000, "status": "ready"}, {"id": "cayp:artifact:0000-000", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Velit nobis sapiente."}, "mime-type": "image/jpeg", "name": "Fire risk for Lot2", "size": 19000, "status": "ready"}], "at-time": "1996-12-19T16:39:57-08:00", "links": {"first": "https://api.com/foo/...", "next": "https://api.com/foo/...", "self": "https://api.com/foo/..."}}}}}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}}}}, "422": {"description": "invalid-parameter: Request contained semantically wrong paramter value", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidParameterValue"}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}}}}}, "security": [{"jwt_header_Authorization": ["consumer:read", "consumer:write"]}]}, "post": {"tags": ["artifact"], "summary": "upload artifact", "description": "Upload content and create a artifacts.", "operationId": "artifact#upload", "parameters": [{"name": "Content-Type", "in": "header", "description": "Content-Type header, MUST define type of uploaded content.", "allowEmptyValue": true, "schema": {"type": "string", "description": "Content-Type header, MUST define type of uploaded content.", "example": "application/x-netcdf4"}, "example": "application/x-netcdf4"}, {"name": "Content-Encoding", "in": "header", "description": "Content-Encoding header, MAY define encoding of content.", "allowEmptyValue": true, "schema": {"type": "string", "description": "Content-Encoding header, MAY define encoding of content.", "example": "gzip"}, "example": "gzip"}, {"name": "Content-Length", "in": "header", "description": "Content-Length header, MAY define size of expected upload.", "allowEmptyValue": true, "schema": {"type": "integer", "description": "Content-Length header, MAY define size of expected upload.", "example": 2376, "format": "int64"}, "example": 2376}, {"name": "X-Name", "in": "header", "description": "X-Name header, MAY define a more human friendly name. Reusing a name will NOT override an existing artifact with the same name", "allowEmptyValue": true, "schema": {"type": "string", "description": "X-Name header, MAY define a more human friendly name. Reusing a name will NOT override an existing artifact with the same name", "example": "sample-12"}, "example": "sample-12"}, {"name": "X-Collection", "in": "header", "description": "X-Collection header, MAY define an collection name as a simple way of grouping artifacts", "allowEmptyValue": true, "schema": {"type": "string", "description": "X-Collection header, MAY define an collection name as a simple way of grouping artifacts", "example": "urn:projectX:collection:field-trip-jun-22"}, "example": "urn:projectX:collection:field-trip-jun-22"}, {"name": "X-Policy", "in": "header", "description": "X-Policy header, MAY define a specific policy to control access to this artifact", "allowEmptyValue": true, "schema": {"type": "string", "description": "X-Policy header, MAY define a specific policy to control access to this artifact", "example": "urn:ivcap:policy:ivcap.open.metadata"}, "example": "urn:ivcap:policy:ivcap.open.metadata"}, {"name": "X-Content-Type", "in": "header", "description": "X-Content-Type header, used for initial, empty content creation requests.", "allowEmptyValue": true, "schema": {"type": "string", "description": "X-Content-Type header, used for initial, empty content creation requests.", "example": "application/x-netcdf4"}, "example": "application/x-netcdf4"}, {"name": "X-Content-Length", "in": "header", "description": "X-Content-Length header, used for initial, empty content creation requests.", "allowEmptyValue": true, "schema": {"type": "integer", "description": "X-Content-Length header, used for initial, empty content creation requests.", "example": 2376, "format": "int64"}, "example": 2376}, {"name": "Upload-Length", "in": "header", "description": "Upload-Length header, sets the expected content size part of the TUS protocol.", "allowEmptyValue": true, "schema": {"type": "integer", "description": "Upload-Length header, sets the expected content size part of the TUS protocol.", "example": 2376, "format": "int64"}, "example": 2376}, {"name": "Tus-Resumable", "in": "header", "description": "Tus-Resumable header, specifies TUS protocol version.", "allowEmptyValue": true, "schema": {"type": "string", "description": "Tus-Resumable header, specifies TUS protocol version.", "example": "1.0.0"}, "example": "1.0.0"}], "responses": {"201": {"description": "Created response.", "headers": {"Location": {"description": "link back to record", "schema": {"type": "string", "description": "link back to record", "example": "Recusandae et."}, "example": "Temporibus cum nobis natus."}, "Tus-Resumable": {"description": "indicate version of TUS supported", "schema": {"type": "string", "description": "indicate version of TUS supported", "example": "Odio eum necessitatibus deserunt dicta minus."}, "example": "Eum facilis atque."}, "Upload-Offset": {"description": "TUS offset for partially uploaded content", "schema": {"type": "integer", "description": "TUS offset for partially uploaded content", "example": 5189576526628907227, "format": "int64"}, "example": 3607059090995137316}}, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ArtifactStatusRT"}, "example": {"account": {"id": "http://reinger.name/wiley", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Velit nobis sapiente."}}, "cache-of": "Ratione impedit provident possimus distinctio deleniti cumque.", "created-at": "2022-01-01", "data": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Velit nobis sapiente."}, "etag": "Quas rem.", "id": "type:scope:name", "last-modified-at": "2022-01-01", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Velit nobis sapiente."}, "mime-type": "At quam aut nemo.", "name": "Fire risk per LGA", "policy": {"id": "http://reinger.name/wiley", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Velit nobis sapiente."}}, "size": 4510577290553118112, "status": "unknown"}}}}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}}}}}, "security": [{"jwt_header_Authorization": ["consumer:read", "consumer:write"]}]}}, "/1/artifacts/{id}": {"get": {"tags": ["artifact"], "summary": "read artifact", "description": "Show artifacts by ID", "operationId": "artifact#read", "parameters": [{"name": "id", "in": "path", "description": "ID of artifacts to show", "required": true, "schema": {"type": "string", "description": "ID of artifacts to show", "example": "type:scope:name"}, "example": "type:scope:name"}], "responses": {"200": {"description": "OK response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ArtifactStatusRT"}, "example": {"account": {"id": "http://reinger.name/wiley", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Velit nobis sapiente."}}, "cache-of": "Enim blanditiis dolorem similique.", "created-at": "2022-01-01", "data": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Velit nobis sapiente."}, "etag": "Sit ut.", "id": "type:scope:name", "last-modified-at": "2022-01-01", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Velit nobis sapiente."}, "location": "Aut atque quam sequi expedita dicta.", "mime-type": "Corrupti sapiente aut voluptatibus quasi delectus molestiae.", "name": "Fire risk per LGA", "policy": {"id": "http://reinger.name/wiley", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Velit nobis sapiente."}}, "size": 4171857033457178610, "status": "unknown", "tus-offset": 3238430373294186587, "tus-resumable": "Sed qui quidem architecto dolore inventore consequuntur."}}}}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}}}}, "404": {"description": "not-found: artifacts not found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ResourceNotFoundT"}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}}}}}, "security": [{"jwt_header_Authorization": ["consumer:read", "consumer:write"]}]}}, "/1/metadata": {"get": {"tags": ["metadata"], "summary": "list metadata", "description": "Return a list of metadata records.", "operationId": "metadata#list", "parameters": [{"name": "entity-id", "in": "query", "description": "Entity for which to request metadata", "allowEmptyValue": true, "schema": {"type": "string", "description": "Entity for which to request metadata", "example": "urn:blue:image.collA.12", "format": "uri"}, "example": "urn:blue:image.collA.12"}, {"name": "schema", "in": "query", "description": "Schema prefix using '%' as wildcard indicator", "allowEmptyValue": true, "schema": {"type": "string", "description": "Schema prefix using '%' as wildcard indicator", "example": "urn:blue:image%"}, "example": "urn:blue:image%"}, {"name": "aspect-path", "in": "query", "description": "To learn more about the supported format, see\n\t\t\t\t\thttps://www.postgresql.org/docs/current/datatype-json.html#DATATYPE-JSONPATH", "allowEmptyValue": true, "schema": {"type": "string", "description": "To learn more about the supported format, see\n\t\t\t\t\thttps://www.postgresql.org/docs/current/datatype-json.html#DATATYPE-JSONPATH", "example": "$.images[*] ? (@.size > 10000)"}, "example": "$.images[*] ? (@.size > 10000)"}, {"name": "at-time", "in": "query", "description": "Return metadata which where valid at that time [now]", "allowEmptyValue": true, "schema": {"type": "string", "description": "Return metadata which where valid at that time [now]", "example": "1996-12-19T16:39:57-08:00", "format": "date-time"}, "example": "1996-12-19T16:39:57-08:00"}, {"name": "limit", "in": "query", "description": "The 'limit' system query option requests the number of items in the queried\n\t\t\t\tcollection to be included in the result.", "allowEmptyValue": true, "schema": {"type": "integer", "description": "The 'limit' system query option requests the number of items in the queried\n\t\t\t\tcollection to be included in the result.", "default": 10, "example": 10, "minimum": 1, "maximum": 50}, "example": 10}, {"name": "filter", "in": "query", "description": "The 'filter' system query option allows clients to filter a collection of\n\t\t\t\tresources that are addressed by a request URL. The expression specified with 'filter'\n\t\t\t\tis evaluated for each resource in the collection, and only items where the expression\n\t\t\t\tevaluates to true are included in the response.", "allowEmptyValue": true, "schema": {"type": "string", "description": "The 'filter' system query option allows clients to filter a collection of\n\t\t\t\tresources that are addressed by a request URL. The expression specified with 'filter'\n\t\t\t\tis evaluated for each resource in the collection, and only items where the expression\n\t\t\t\tevaluates to true are included in the response.", "default": "", "example": "filter=FirstName eq 'Scott'"}, "example": "filter=FirstName eq 'Scott'"}, {"name": "order-by", "in": "query", "description": "The 'orderby' query option allows clients to request resources in either\n\t\t\t\tascending order using asc or descending order using desc. If asc or desc not specified,\n\t\t\t\tthen the resources will be ordered in ascending order. The request below orders Trips on\n\t\t\t\tproperty EndsAt in descending order.", "allowEmptyValue": true, "schema": {"type": "string", "description": "The 'orderby' query option allows clients to request resources in either\n\t\t\t\tascending order using asc or descending order using desc. If asc or desc not specified,\n\t\t\t\tthen the resources will be ordered in ascending order. The request below orders Trips on\n\t\t\t\tproperty EndsAt in descending order.", "default": "", "example": "orderby=EndsAt"}, "example": "orderby=EndsAt"}, {"name": "order-desc", "in": "query", "description": "When set order result in descending order. Ascending order is the default.", "allowEmptyValue": true, "schema": {"type": "boolean", "description": "When set order result in descending order. Ascending order is the default.", "example": false}, "example": false}, {"name": "page", "in": "query", "description": "The content of '$page' is returned in the 'links' part of a previous query and\n\t\t\t\twill when set, ALL other parameters, except for 'limit' are ignored.", "allowEmptyValue": true, "schema": {"type": "string", "description": "The content of '$page' is returned in the 'links' part of a previous query and\n\t\t\t\twill when set, ALL other parameters, except for 'limit' are ignored.", "example": "gdsgQwhdgd"}, "example": "gdsgQwhdgd"}], "responses": {"200": {"description": "OK response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ListMetaRT"}, "example": {"aspect-path": "Ut sit.", "at-time": "1996-12-19T16:39:57-08:00", "entity-id": "urn:blue:image.collA.12", "links": {"first": "https://api.com/foo/...", "next": "https://api.com/foo/...", "self": "https://api.com/foo/..."}, "records": [{"aspect": "{...}", "aspectContext": "{...}", "entity": "urn:blue:transect.1", "record-id": "urn:ivcap:record.123e4567-e89b-12d3-a456-426614174000", "schema": "urn:blue:schema.image"}, {"aspect": "{...}", "aspectContext": "{...}", "entity": "urn:blue:transect.1", "record-id": "urn:ivcap:record.123e4567-e89b-12d3-a456-426614174000", "schema": "urn:blue:schema.image"}, {"aspect": "{...}", "aspectContext": "{...}", "entity": "urn:blue:transect.1", "record-id": "urn:ivcap:record.123e4567-e89b-12d3-a456-426614174000", "schema": "urn:blue:schema.image"}, {"aspect": "{...}", "aspectContext": "{...}", "entity": "urn:blue:transect.1", "record-id": "urn:ivcap:record.123e4567-e89b-12d3-a456-426614174000", "schema": "urn:blue:schema.image"}], "schema": "urn:blue:image,urn:blue:location"}}}}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}}}}, "422": {"description": "invalid-parameter: Request contained semantically wrong paramter value", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidParameterValue"}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}}}}}, "security": [{"jwt_header_Authorization": ["consumer:read", "consumer:write"]}]}, "post": {"tags": ["metadata"], "summary": "add metadata", "description": "Attach new metadata to an entity.", "operationId": "metadata#add", "parameters": [{"name": "entity-id", "in": "query", "description": "Entity to which attach metadata", "allowEmptyValue": true, "required": true, "schema": {"type": "string", "description": "Entity to which attach metadata", "example": "http://borer.biz/meagan", "format": "uri"}, "example": "http://herzogwillms.com/brannon"}, {"name": "schema", "in": "query", "description": "Schema of metadata", "allowEmptyValue": true, "required": true, "schema": {"type": "string", "description": "Schema of metadata", "example": "http://dubuque.name/jarrett_waters", "format": "uri"}, "example": "http://grady.name/dion"}, {"name": "policy-id", "in": "query", "description": "Policy guiding visibility and actions performed", "allowEmptyValue": true, "schema": {"type": "string", "description": "Policy guiding visibility and actions performed", "example": "http://colliercarroll.info/constantin", "format": "uri"}, "example": "http://murazikaufderhar.net/angie.berge"}, {"name": "Content-Type", "in": "header", "description": "Content-Type header, MUST be of application/json.", "allowEmptyValue": true, "required": true, "schema": {"type": "string", "description": "Content-Type header, MUST be of application/json.", "example": "application/json"}, "example": "application/json"}], "requestBody": {"description": "Aspect content", "required": true, "content": {"application/json": {"schema": {"type": "string", "description": "Aspect content", "example": "{\"$schema\": ...}", "format": "binary"}, "example": "{\"$schema\": ...}"}}}, "responses": {"200": {"description": "OK response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AddMetaRT"}, "example": {"record-id": "urn:ivcap:record.123e4567-e89b-12d3-a456-426614174000"}}}}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}}}}, "422": {"description": "invalid-parameter: Request contained semantically wrong paramter value", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidParameterValue"}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}}}}}, "security": [{"jwt_header_Authorization": ["consumer:read", "consumer:write"]}]}, "put": {"tags": ["metadata"], "summary": "update_one metadata", "description": "Revoke a record for the same entity and same schema and create new one\n\t\t\twith the provided properties. __NOTE__, this method will fail if there is more than one active record for the entity/schema pair.", "operationId": "metadata#update_one", "parameters": [{"name": "entity-id", "in": "query", "description": "Entity to which attach metadata", "allowEmptyValue": true, "required": true, "schema": {"type": "string", "description": "Entity to which attach metadata", "example": "urn:url:....", "format": "uri"}, "example": "urn:url:...."}, {"name": "schema", "in": "query", "description": "Schema of metadata", "allowEmptyValue": true, "required": true, "schema": {"type": "string", "description": "Schema of metadata", "example": "urn:url:....", "format": "uri"}, "example": "urn:url:...."}, {"name": "policy-id", "in": "query", "description": "Policy guiding visibility and actions performed", "allowEmptyValue": true, "schema": {"type": "string", "description": "Policy guiding visibility and actions performed", "example": "http://littel.org/marlon_rolfson", "format": "uri"}, "example": "http://luettgen.biz/maria_white"}, {"name": "Content-Type", "in": "header", "description": "Content-Type header, MUST be of application/json.", "allowEmptyValue": true, "schema": {"type": "string", "description": "Content-Type header, MUST be of application/json.", "example": "application/json"}, "example": "application/json"}], "requestBody": {"description": "Aspect content", "required": true, "content": {"application/json": {"schema": {"type": "string", "description": "Aspect content", "example": "{\"$schema\": ...}", "format": "binary"}, "example": "{\"$schema\": ...}"}}}, "responses": {"200": {"description": "OK response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AddMetaRT"}, "example": {"record-id": "urn:ivcap:record.123e4567-e89b-12d3-a456-426614174000"}}}}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}}}}, "422": {"description": "invalid-parameter: Request contained semantically wrong paramter value", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidParameterValue"}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}}}}}, "security": [{"jwt_header_Authorization": ["consumer:read", "consumer:write"]}]}}, "/1/metadata/{id}": {"delete": {"tags": ["metadata"], "summary": "revoke metadata", "description": "Retract a previously created statement.", "operationId": "metadata#revoke", "parameters": [{"name": "id", "in": "path", "description": "Record ID to restract", "required": true, "schema": {"type": "string", "description": "Record ID to restract", "example": "urn:ivcap:record.53cbb715-4ffd-4158-9e55-5d0ae69605a4", "format": "uri"}, "example": "urn:ivcap:record.53cbb715-4ffd-4158-9e55-5d0ae69605a4"}], "responses": {"204": {"description": "No Content response."}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}}}}, "422": {"description": "invalid-parameter: Request contained semantically wrong paramter value", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidParameterValue"}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}}}}}, "security": [{"jwt_header_Authorization": ["consumer:read", "consumer:write"]}]}, "get": {"tags": ["metadata"], "summary": "read metadata", "description": "Show metadata by ID", "operationId": "metadata#read", "parameters": [{"name": "id", "in": "path", "description": "ID of metadata to show", "required": true, "schema": {"type": "string", "description": "ID of metadata to show", "example": "type:scope:name"}, "example": "type:scope:name"}], "responses": {"200": {"description": "OK response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/MetadataRecordRT"}, "example": {"aspect": "{...}", "asserter": "...", "entity": "urn:blue:transect.1", "record-id": "urn:ivcap:record.123e4567-e89b-12d3-a456-426614174000", "revoker": "...", "schema": "urn:blue:schema.image", "valid-from": "1996-12-19T16:39:57-08:00", "valid-to": "1996-12-19T16:39:57-08:00"}}}}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}}}}, "404": {"description": "not-found: metadata not found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ResourceNotFoundT"}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}}}}}, "security": [{"jwt_header_Authorization": ["consumer:read", "consumer:write"]}]}, "put": {"tags": ["metadata"], "summary": "update_record metadata", "description": "Revoke this record and create a new one with the information provided.\n\t\t\tFor any field not provided, the value from the current record is used.", "operationId": "metadata#update_record", "parameters": [{"name": "entity-id", "in": "query", "description": "Entity to which attach metadata", "allowEmptyValue": true, "schema": {"type": "string", "description": "Entity to which attach metadata", "example": "urn:url:....", "format": "uri"}, "example": "urn:url:...."}, {"name": "schema", "in": "query", "description": "Schema of metadata", "allowEmptyValue": true, "schema": {"type": "string", "description": "Schema of metadata", "example": "urn:url:....", "format": "uri"}, "example": "urn:url:...."}, {"name": "policy-id", "in": "query", "description": "Policy guiding visibility and actions performed", "allowEmptyValue": true, "schema": {"type": "string", "description": "Policy guiding visibility and actions performed", "example": "http://walsh.org/marta_zulauf", "format": "uri"}, "example": "http://ziemann.name/aurelia"}, {"name": "id", "in": "path", "description": "Record ID to update", "required": true, "schema": {"type": "string", "description": "Record ID to update", "example": "urn:ivcap:record.53cbb715-4ffd-4158-9e55-5d0ae69605a4", "format": "uri"}, "example": "urn:ivcap:record.53cbb715-4ffd-4158-9e55-5d0ae69605a4"}, {"name": "Content-Type", "in": "header", "description": "Content-Type header, MUST be of application/json.", "allowEmptyValue": true, "schema": {"type": "string", "description": "Content-Type header, MUST be of application/json.", "example": "application/json"}, "example": "application/json"}], "requestBody": {"description": "Aspect content", "required": true, "content": {"application/json": {"schema": {"type": "string", "description": "Aspect content", "example": "{\"$schema\": ...}", "format": "binary"}, "example": "{\"$schema\": ...}"}}}, "responses": {"200": {"description": "OK response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AddMetaRT"}, "example": {"record-id": "urn:ivcap:record.123e4567-e89b-12d3-a456-426614174000"}}}}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}}}}, "422": {"description": "invalid-parameter: Request contained semantically wrong paramter value", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidParameterValue"}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}}}}}, "security": [{"jwt_header_Authorization": ["consumer:read", "consumer:write"]}]}}, "/1/openapi/openapi3.json": {"get": {"tags": ["openapi"], "summary": "Download /public/openapi3.json", "description": "JSON document containing the API swagger definition", "operationId": "openapi#/1/openapi/openapi3.json", "responses": {"200": {"description": "File downloaded"}}}}, "/1/orders": {"get": {"tags": ["order"], "summary": "list order", "description": "list orders", "operationId": "order#list", "parameters": [{"name": "limit", "in": "query", "description": "The $limit system query option requests the number of items in the queried\n\t\t\t\tcollection to be included in the result.", "allowEmptyValue": true, "schema": {"type": "integer", "description": "The $limit system query option requests the number of items in the queried\n\t\t\t\tcollection to be included in the result.", "default": 10, "example": 10, "minimum": 1, "maximum": 50}, "example": 10}, {"name": "page", "in": "query", "description": "The content of 'page' is returned in the 'links' part of a previous query and\n\t\t\t\twill when set, ALL other parameters, except for 'limit' are ignored.", "allowEmptyValue": true, "schema": {"type": "string", "description": "The content of 'page' is returned in the 'links' part of a previous query and\n\t\t\t\twill when set, ALL other parameters, except for 'limit' are ignored.", "example": "gdsgQwhdgd"}, "example": "gdsgQwhdgd"}, {"name": "filter", "in": "query", "description": "The 'filter' system query option allows clients to filter a collection of\n\t\t\t\tresources that are addressed by a request URL. The expression specified with 'filter'\n\t\t\t\tis evaluated for each resource in the collection, and only items where the expression\n\t\t\t\tevaluates to true are included in the response.", "allowEmptyValue": true, "schema": {"type": "string", "description": "The 'filter' system query option allows clients to filter a collection of\n\t\t\t\tresources that are addressed by a request URL. The expression specified with 'filter'\n\t\t\t\tis evaluated for each resource in the collection, and only items where the expression\n\t\t\t\tevaluates to true are included in the response.", "example": "name ~= 'Scott%'"}, "example": "name ~= 'Scott%'"}, {"name": "order-by", "in": "query", "description": "The 'orderby' query option allows clients to request resources in either\n\t\t\t\tascending order using asc or descending order using desc. If asc or desc not specified,\n\t\t\t\tthen the resources will be ordered in ascending order. The request below orders Trips on\n\t\t\t\tproperty EndsAt in descending order.", "allowEmptyValue": true, "schema": {"type": "string", "description": "The 'orderby' query option allows clients to request resources in either\n\t\t\t\tascending order using asc or descending order using desc. If asc or desc not specified,\n\t\t\t\tthen the resources will be ordered in ascending order. The request below orders Trips on\n\t\t\t\tproperty EndsAt in descending order.", "example": "orderby=EndsAt"}, "example": "orderby=EndsAt"}, {"name": "order-desc", "in": "query", "description": "When set order result in descending order. Ascending order is the default.", "allowEmptyValue": true, "schema": {"type": "boolean", "description": "When set order result in descending order. Ascending order is the default.", "default": false, "example": true}, "example": true}, {"name": "at-time", "in": "query", "description": "Return the state of the respective resources at that time [now]", "allowEmptyValue": true, "schema": {"type": "string", "description": "Return the state of the respective resources at that time [now]", "example": "1996-12-19T16:39:57-08:00", "format": "date-time"}, "example": "1996-12-19T16:39:57-08:00"}], "responses": {"200": {"description": "OK response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/OrderListRT"}, "example": {"at-time": "1996-12-19T16:39:57-08:00", "links": {"first": "https://api.com/foo/...", "next": "https://api.com/foo/...", "self": "https://api.com/foo/..."}, "orders": [{"account-id": "2022-01-01", "finished-at": "2022-01-01", "id": "cayp:order:123e4567-e89b-12d3-a456-426614174000", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Velit nobis sapiente."}, "name": "Fire risk for Lot2", "ordered-at": "2022-01-01", "service-id": "2022-01-01", "started-at": "2022-01-01", "status": "error"}, {"account-id": "2022-01-01", "finished-at": "2022-01-01", "id": "cayp:order:123e4567-e89b-12d3-a456-426614174000", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Velit nobis sapiente."}, "name": "Fire risk for Lot2", "ordered-at": "2022-01-01", "service-id": "2022-01-01", "started-at": "2022-01-01", "status": "error"}, {"account-id": "2022-01-01", "finished-at": "2022-01-01", "id": "cayp:order:123e4567-e89b-12d3-a456-426614174000", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Velit nobis sapiente."}, "name": "Fire risk for Lot2", "ordered-at": "2022-01-01", "service-id": "2022-01-01", "started-at": "2022-01-01", "status": "error"}]}}}}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}}}}, "422": {"description": "invalid-parameter: Request contained semantically wrong paramter value", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidParameterValue"}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}}}}}, "security": [{"jwt_header_Authorization": ["consumer:read", "consumer:write"]}]}, "post": {"tags": ["order"], "summary": "create order", "description": "Create a new orders and return its status.", "operationId": "order#create", "requestBody": {"description": "New orders description", "required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/OrderRequestT"}, "example": {"account-id": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "name": "Fire risk for Lot2", "parameters": [{"name": "region", "value": "Upper Valley"}, {"name": "threshold", "value": "10"}], "policy-id": "urn:ivcap:policy:123e4567-e89b-12d3-a456-426614174000", "service-id": "urn:ivcap:service:123e4567-e89b-12d3-a456-426614174000", "tags": ["tag1", "tag2"]}}}}, "responses": {"200": {"description": "OK response.", "content": {"application/json": {"schema": {"description": "Response body may alternatively be #/components/schemas/ReadResponseBodyTiny", "$ref": "#/components/schemas/OrderStatusRT"}, "example": {"account": {"id": "http://reinger.name/wiley", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Velit nobis sapiente."}}, "finished-at": "2023-03-17T04:57:00Z", "id": "123e4567-e89b-12d3-a456-426614174000", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Velit nobis sapiente."}, "name": "Fire risk for Lot2", "ordered-at": "2023-03-17T04:57:00Z", "parameters": [{"name": "region", "value": "Upper Valley"}, {"name": "threshold", "value": "10"}], "product-links": {"first": "https://api.com/foo/...", "next": "https://api.com/foo/...", "self": "https://api.com/foo/..."}, "products": [{"href": "https:/.../1/artifacts/0000-00001220", "mime-type": "image/geo+tiff", "name": "fire risk map", "size": 1234963}], "service": {"id": "http://reinger.name/wiley", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Velit nobis sapiente."}}, "started-at": "2023-03-17T04:57:00Z", "status": "pending", "tags": ["tag1", "tag2"]}}}}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}}}}, "404": {"description": "not-found:  not found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ResourceNotFoundT"}}}}, "422": {"description": "invalid-parameter: Request contained semantically wrong paramter value", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidParameterValue"}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}}}}, "503": {"description": "not-available: service currently not available"}}, "security": [{"jwt_header_Authorization": ["consumer:read", "consumer:write"]}]}}, "/1/orders/logs": {"post": {"tags": ["order"], "summary": "logs order", "description": "download order logs", "operationId": "order#logs", "requestBody": {"description": "Download orders request", "required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/DownloadLogRequestT"}, "example": {"container-name": "main", "from": 1257894000, "namespace-name": "ivcap-develop-runner", "order-id": "urn:ivcap:order:123e4567-e89b-12d3-a456-426614174000", "policy-id": "urn:ivcap:policy:123e4567-e89b-12d3-a456-426614174000", "to": 1257894000}}}}, "responses": {"200": {"description": "OK response."}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}}}}, "404": {"description": "not-found:  not found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ResourceNotFoundT"}}}}, "422": {"description": "invalid-parameter: Request contained semantically wrong paramter value", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidParameterValue"}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}}}}}, "security": [{"jwt_header_Authorization": ["consumer:read", "consumer:write"]}]}}, "/1/orders/top": {"post": {"tags": ["order"], "summary": "top order", "description": "top order resources", "operationId": "order#top", "requestBody": {"description": "orders order request", "required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/OrderTopRequestT"}, "example": {"namespace-name": "ivcap-develop-runner", "order-id": "urn:ivcap:order:123e4567-e89b-12d3-a456-426614174000", "policy-id": "urn:ivcap:policy:123e4567-e89b-12d3-a456-426614174000"}}}}, "responses": {"200": {"description": "OK response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/OrderTopResultItemCollection"}, "example": [{"container": "Aliquam sit error fuga.", "cpu": "Neque odio officia voluptas.", "ephemeral-storage": "Itaque eaque et accusantium sunt.", "memory": "Doloremque unde similique sequi.", "storage": "Eveniet eos incidunt rerum."}, {"container": "Aliquam sit error fuga.", "cpu": "Neque odio officia voluptas.", "ephemeral-storage": "Itaque eaque et accusantium sunt.", "memory": "Doloremque unde similique sequi.", "storage": "Eveniet eos incidunt rerum."}, {"container": "Aliquam sit error fuga.", "cpu": "Neque odio officia voluptas.", "ephemeral-storage": "Itaque eaque et accusantium sunt.", "memory": "Doloremque unde similique sequi.", "storage": "Eveniet eos incidunt rerum."}]}}}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}}}}, "404": {"description": "not-found:  not found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ResourceNotFoundT"}}}}, "422": {"description": "invalid-parameter: Request contained semantically wrong paramter value", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidParameterValue"}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}}}}}, "security": [{"jwt_header_Authorization": ["consumer:read", "consumer:write"]}]}}, "/1/orders/{id}": {"get": {"tags": ["order"], "summary": "read order", "description": "Show orders by ID", "operationId": "order#read", "parameters": [{"name": "id", "in": "path", "description": "ID of orders to show", "required": true, "schema": {"type": "string", "description": "ID of orders to show", "example": "type:scope:name"}, "example": "type:scope:name"}], "responses": {"200": {"description": "OK response.", "content": {"application/json": {"schema": {"description": "Response body may alternatively be #/components/schemas/ReadResponseBodyTiny", "$ref": "#/components/schemas/OrderStatusRT"}, "example": {"account": {"id": "http://reinger.name/wiley", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Velit nobis sapiente."}}, "finished-at": "2023-03-17T04:57:00Z", "id": "123e4567-e89b-12d3-a456-426614174000", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Velit nobis sapiente."}, "name": "Fire risk for Lot2", "ordered-at": "2023-03-17T04:57:00Z", "parameters": [{"name": "region", "value": "Upper Valley"}, {"name": "threshold", "value": "10"}], "product-links": {"first": "https://api.com/foo/...", "next": "https://api.com/foo/...", "self": "https://api.com/foo/..."}, "products": [{"href": "https:/.../1/artifacts/0000-00001220", "mime-type": "image/geo+tiff", "name": "fire risk map", "size": 1234963}], "service": {"id": "http://reinger.name/wiley", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Velit nobis sapiente."}}, "started-at": "2023-03-17T04:57:00Z", "status": "pending", "tags": ["tag1", "tag2"]}}}}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}}}}, "404": {"description": "not-found: orders not found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ResourceNotFoundT"}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}}}}}, "security": [{"jwt_header_Authorization": ["consumer:read", "consumer:write"]}]}}, "/1/services": {"get": {"tags": ["service"], "summary": "list service", "description": "list services", "operationId": "service#list", "parameters": [{"name": "limit", "in": "query", "description": "The $limit system query option requests the number of items in the queried\n\t\t\t\tcollection to be included in the result.", "allowEmptyValue": true, "schema": {"type": "integer", "description": "The $limit system query option requests the number of items in the queried\n\t\t\t\tcollection to be included in the result.", "default": 10, "example": 10, "minimum": 1, "maximum": 50}, "example": 10}, {"name": "page", "in": "query", "description": "The content of 'page' is returned in the 'links' part of a previous query and\n\t\t\t\twill when set, ALL other parameters, except for 'limit' are ignored.", "allowEmptyValue": true, "schema": {"type": "string", "description": "The content of 'page' is returned in the 'links' part of a previous query and\n\t\t\t\twill when set, ALL other parameters, except for 'limit' are ignored.", "example": "gdsgQwhdgd"}, "example": "gdsgQwhdgd"}, {"name": "filter", "in": "query", "description": "The 'filter' system query option allows clients to filter a collection of\n\t\t\t\tresources that are addressed by a request URL. The expression specified with 'filter'\n\t\t\t\tis evaluated for each resource in the collection, and only items where the expression\n\t\t\t\tevaluates to true are included in the response.", "allowEmptyValue": true, "schema": {"type": "string", "description": "The 'filter' system query option allows clients to filter a collection of\n\t\t\t\tresources that are addressed by a request URL. The expression specified with 'filter'\n\t\t\t\tis evaluated for each resource in the collection, and only items where the expression\n\t\t\t\tevaluates to true are included in the response.", "example": "name ~= 'Scott%'"}, "example": "name ~= 'Scott%'"}, {"name": "order-by", "in": "query", "description": "The 'orderby' query option allows clients to request resources in either\n\t\t\t\tascending order using asc or descending order using desc. If asc or desc not specified,\n\t\t\t\tthen the resources will be ordered in ascending order. The request below orders Trips on\n\t\t\t\tproperty EndsAt in descending order.", "allowEmptyValue": true, "schema": {"type": "string", "description": "The 'orderby' query option allows clients to request resources in either\n\t\t\t\tascending order using asc or descending order using desc. If asc or desc not specified,\n\t\t\t\tthen the resources will be ordered in ascending order. The request below orders Trips on\n\t\t\t\tproperty EndsAt in descending order.", "example": "orderby=EndsAt"}, "example": "orderby=EndsAt"}, {"name": "order-desc", "in": "query", "description": "When set order result in descending order. Ascending order is the default.", "allowEmptyValue": true, "schema": {"type": "boolean", "description": "When set order result in descending order. Ascending order is the default.", "default": false, "example": true}, "example": false}, {"name": "at-time", "in": "query", "description": "Return the state of the respective resources at that time [now]", "allowEmptyValue": true, "schema": {"type": "string", "description": "Return the state of the respective resources at that time [now]", "example": "1996-12-19T16:39:57-08:00", "format": "date-time"}, "example": "1996-12-19T16:39:57-08:00"}], "responses": {"200": {"description": "OK response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ServiceListRT"}, "example": {"at-time": "1996-12-19T16:39:57-08:00", "links": {"first": "https://api.com/foo/...", "next": "https://api.com/foo/...", "self": "https://api.com/foo/..."}, "services": [{"description": "Some lengthy description of fire risk", "id": "service:acme:oracle", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Velit nobis sapiente."}, "name": "Fire risk for region", "provider": {"id": "http://reinger.name/wiley", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Velit nobis sapiente."}}}, {"description": "Some lengthy description of fire risk", "id": "service:acme:oracle", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Velit nobis sapiente."}, "name": "Fire risk for region", "provider": {"id": "http://reinger.name/wiley", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Velit nobis sapiente."}}}, {"description": "Some lengthy description of fire risk", "id": "service:acme:oracle", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Velit nobis sapiente."}, "name": "Fire risk for region", "provider": {"id": "http://reinger.name/wiley", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Velit nobis sapiente."}}}]}}}}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}}}}, "422": {"description": "invalid-parameter: Request contained semantically wrong paramter value", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidParameterValue"}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}}}}}, "security": [{"jwt_header_Authorization": ["consumer:read", "consumer:write"]}]}, "post": {"tags": ["service"], "summary": "create_service service", "description": "Create a new services and return its status.", "operationId": "service#create_service", "requestBody": {"description": "New services description", "required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ServiceDescriptionT"}, "example": {"account-id": "urn:ivcap:account:0f0e3f57-80f7-4899-9b69-459af2efd789", "banner": "http://boyer.org/otha", "description": "This service ...", "metadata": [{"name": "Porro minima qui ut cumque quia.", "value": "Exercitationem ratione."}, {"name": "Porro minima qui ut cumque quia.", "value": "Exercitationem ratione."}, {"name": "Porro minima qui ut cumque quia.", "value": "Exercitationem ratione."}], "name": "Fire risk for Lot2", "parameters": [{"description": "The name of the region as according to ...", "label": "Region Name", "name": "region", "type": "string"}, {"label": "Rainfall/month threshold", "name": "threshold", "type": "float", "unit": "m"}], "policy-id": "Amet accusamus assumenda nobis ipsum.", "provider-id": "urn:ivcap:provider:0f0e3f57-80f7-4899-9b69-459af2efd789", "provider-ref": "service_foo_patch_1", "references": [{"title": "Inventore voluptatem incidunt vel et voluptas.", "uri": "http://rodriguez.name/sterling.schmitt"}, {"title": "Inventore voluptatem incidunt vel et voluptas.", "uri": "http://rodriguez.name/sterling.schmitt"}, {"title": "Inventore voluptatem incidunt vel et voluptas.", "uri": "http://rodriguez.name/sterling.schmitt"}], "tags": ["tag1", "tag2"], "workflow": {"argo": "Exercitationem nobis perspiciatis voluptate quia.", "basic": {"command": ["/bin/sh", "-c", "echo $PATH"], "cpu": {"limit": "100m", "request": "10m"}, "ephemeral-storage": {"limit": "4Gi", "request": "2Gi"}, "image": "alpine", "memory": {"limit": "100Mi", "request": "10Mi"}}, "opts": "Facilis alias.", "type": "basic"}}}}}, "responses": {"201": {"description": "Created response.", "content": {"application/json": {"schema": {"description": "Response body may alternatively be #/components/schemas/CreateServiceResponseBodyTiny", "$ref": "#/components/schemas/ServiceStatusRT"}, "example": {"account": {"id": "http://reinger.name/wiley", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Velit nobis sapiente."}}, "description": "This service ...", "id": "service:acme:oracle", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Velit nobis sapiente."}, "metadata": [{"name": "Quidem est ipsa.", "value": "Esse rerum vitae et commodi."}, {"name": "Quidem est ipsa.", "value": "Esse rerum vitae et commodi."}], "name": "Fire risk for Lot2", "parameters": [{"description": "The name of the region as according to ...", "label": "Region Name", "name": "region", "type": "string"}, {"label": "Rainfall/month threshold", "name": "threshold", "type": "float", "unit": "m"}], "provider": {"id": "http://reinger.name/wiley", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Velit nobis sapiente."}}, "provider-ref": "service_foo", "status": "error", "tags": ["tag1", "tag2"]}}}}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}}}}, "404": {"description": "not-found:  not found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ResourceNotFoundT"}}}}, "409": {"description": "already-created: Resource already exists", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ResourceNotFoundT"}}}}, "422": {"description": "invalid-parameter: Request contained semantically wrong paramter value", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidParameterValue"}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}}}}}, "security": [{"jwt_header_Authorization": ["consumer:read", "consumer:write"]}]}}, "/1/services/{id}": {"delete": {"tags": ["service"], "summary": "delete service", "description": "Delete an existing services.", "operationId": "service#delete", "parameters": [{"name": "id", "in": "path", "description": "ID of services to update", "required": true, "schema": {"type": "string", "description": "ID of services to update", "example": "Ut accusantium ratione sed atque et."}, "example": "Quis maxime laboriosam molestias quisquam."}], "responses": {"204": {"description": "No Content response."}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}}}}}, "security": [{"jwt_header_Authorization": ["consumer:read", "consumer:write"]}]}, "get": {"tags": ["service"], "summary": "read service", "description": "Show services by ID", "operationId": "service#read", "parameters": [{"name": "id", "in": "path", "description": "ID of services to show", "required": true, "schema": {"type": "string", "description": "ID of services to show", "example": "type:scope:name"}, "example": "type:scope:name"}], "responses": {"200": {"description": "OK response.", "content": {"application/json": {"schema": {"description": "Response body may alternatively be #/components/schemas/CreateServiceResponseBodyTiny", "$ref": "#/components/schemas/ServiceStatusRT"}, "example": {"account": {"id": "http://reinger.name/wiley", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Velit nobis sapiente."}}, "description": "This service ...", "id": "service:acme:oracle", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Velit nobis sapiente."}, "metadata": [{"name": "Quidem est ipsa.", "value": "Esse rerum vitae et commodi."}, {"name": "Quidem est ipsa.", "value": "Esse rerum vitae et commodi."}, {"name": "Quidem est ipsa.", "value": "Esse rerum vitae et commodi."}], "name": "Fire risk for Lot2", "parameters": [{"description": "The name of the region as according to ...", "label": "Region Name", "name": "region", "type": "string"}, {"label": "Rainfall/month threshold", "name": "threshold", "type": "float", "unit": "m"}], "provider": {"id": "http://reinger.name/wiley", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Velit nobis sapiente."}}, "provider-ref": "service_foo", "status": "inactive", "tags": ["tag1", "tag2"]}}}}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}}}}, "404": {"description": "not-found: services not found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ResourceNotFoundT"}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}}}}}, "security": [{"jwt_header_Authorization": ["consumer:read", "consumer:write"]}]}, "put": {"tags": ["service"], "summary": "update service", "description": "Update an existing services and return its status.", "operationId": "service#update", "parameters": [{"name": "force-create", "in": "query", "description": "Create if not already exist", "allowEmptyValue": true, "schema": {"type": "boolean", "description": "Create if not already exist", "example": false}, "example": false}, {"name": "id", "in": "path", "description": "ID of services to update", "required": true, "schema": {"type": "string", "description": "ID of services to update", "example": "Ratione nisi omnis et."}, "example": "Qui a nesciunt nisi saepe eos."}], "requestBody": {"description": "Updated services description", "required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ServiceDescriptionT"}, "example": {"account-id": "urn:ivcap:account:0f0e3f57-80f7-4899-9b69-459af2efd789", "banner": "http://colegottlieb.biz/domenick_bins", "description": "This service ...", "metadata": [{"name": "Porro minima qui ut cumque quia.", "value": "Exercitationem ratione."}, {"name": "Porro minima qui ut cumque quia.", "value": "Exercitationem ratione."}], "name": "Fire risk for Lot2", "parameters": [{"description": "The name of the region as according to ...", "label": "Region Name", "name": "region", "type": "string"}, {"label": "Rainfall/month threshold", "name": "threshold", "type": "float", "unit": "m"}], "policy-id": "Inventore inventore totam.", "provider-id": "urn:ivcap:provider:0f0e3f57-80f7-4899-9b69-459af2efd789", "provider-ref": "service_foo_patch_1", "references": [{"title": "Inventore voluptatem incidunt vel et voluptas.", "uri": "http://rodriguez.name/sterling.schmitt"}, {"title": "Inventore voluptatem incidunt vel et voluptas.", "uri": "http://rodriguez.name/sterling.schmitt"}, {"title": "Inventore voluptatem incidunt vel et voluptas.", "uri": "http://rodriguez.name/sterling.schmitt"}], "tags": ["tag1", "tag2"], "workflow": {"argo": "Exercitationem nobis perspiciatis voluptate quia.", "basic": {"command": ["/bin/sh", "-c", "echo $PATH"], "cpu": {"limit": "100m", "request": "10m"}, "ephemeral-storage": {"limit": "4Gi", "request": "2Gi"}, "image": "alpine", "memory": {"limit": "100Mi", "request": "10Mi"}}, "opts": "Facilis alias.", "type": "basic"}}}}}, "responses": {"200": {"description": "OK response.", "content": {"application/json": {"schema": {"description": "Response body may alternatively be #/components/schemas/CreateServiceResponseBodyTiny", "$ref": "#/components/schemas/ServiceStatusRT"}, "example": {"account": {"id": "http://reinger.name/wiley", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Velit nobis sapiente."}}, "description": "This service ...", "id": "service:acme:oracle", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Velit nobis sapiente."}, "metadata": [{"name": "Quidem est ipsa.", "value": "Esse rerum vitae et commodi."}, {"name": "Quidem est ipsa.", "value": "Esse rerum vitae et commodi."}], "name": "Fire risk for Lot2", "parameters": [{"description": "The name of the region as according to ...", "label": "Region Name", "name": "region", "type": "string"}, {"label": "Rainfall/month threshold", "name": "threshold", "type": "float", "unit": "m"}], "provider": {"id": "http://reinger.name/wiley", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Velit nobis sapiente."}}, "provider-ref": "service_foo", "status": "active", "tags": ["tag1", "tag2"]}}}}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}}}}, "404": {"description": "not-found:  not found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ResourceNotFoundT"}}}}, "422": {"description": "invalid-parameter: Request contained semantically wrong paramter value", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidParameterValue"}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}}}}}, "security": [{"jwt_header_Authorization": ["consumer:read", "consumer:write"]}]}}}, "components": {"schemas": {"AddMetaRT": {"type": "object", "properties": {"record-id": {"type": "string", "description": "Reference to record created", "example": "urn:ivcap:record.123e4567-e89b-12d3-a456-426614174000", "format": "uri"}}, "example": {"record-id": "urn:ivcap:record.123e4567-e89b-12d3-a456-426614174000"}, "required": ["record-id"]}, "ArtifactListItem": {"type": "object", "properties": {"id": {"type": "string", "description": "Artifact ID", "example": "cayp:artifact:0000-000"}, "links": {"$ref": "#/components/schemas/SelfT"}, "mime-type": {"type": "string", "description": "Mime (content) type of artifact", "example": "image/jpeg"}, "name": {"type": "string", "description": "Optional name", "example": "Fire risk for Lot2"}, "size": {"type": "integer", "description": "Size of aritfact in bytes", "example": 19000, "format": "int64"}, "status": {"type": "string", "description": "Artifact status", "example": "ready", "enum": ["pending", "partial", "ready", "error", "unknown"]}}, "example": {"id": "cayp:artifact:0000-000", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Velit nobis sapiente."}, "mime-type": "image/jpeg", "name": "Fire risk for Lot2", "size": 19000, "status": "ready"}, "required": ["links"]}, "ArtifactListRT": {"type": "object", "properties": {"artifacts": {"type": "array", "items": {"$ref": "#/components/schemas/ArtifactListItem"}, "description": "Artifacts", "example": [{"id": "cayp:artifact:0000-000", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Velit nobis sapiente."}, "mime-type": "image/jpeg", "name": "Fire risk for Lot2", "size": 19000, "status": "ready"}, {"id": "cayp:artifact:0000-000", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Velit nobis sapiente."}, "mime-type": "image/jpeg", "name": "Fire risk for Lot2", "size": 19000, "status": "ready"}, {"id": "cayp:artifact:0000-000", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Velit nobis sapiente."}, "mime-type": "image/jpeg", "name": "Fire risk for Lot2", "size": 19000, "status": "ready"}, {"id": "cayp:artifact:0000-000", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Velit nobis sapiente."}, "mime-type": "image/jpeg", "name": "Fire risk for Lot2", "size": 19000, "status": "ready"}]}, "at-time": {"type": "string", "description": "Time at which this list was valid", "example": "1996-12-19T16:39:57-08:00", "format": "date-time"}, "links": {"$ref": "#/components/schemas/NavT"}}, "example": {"artifacts": [{"id": "cayp:artifact:0000-000", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Velit nobis sapiente."}, "mime-type": "image/jpeg", "name": "Fire risk for Lot2", "size": 19000, "status": "ready"}, {"id": "cayp:artifact:0000-000", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Velit nobis sapiente."}, "mime-type": "image/jpeg", "name": "Fire risk for Lot2", "size": 19000, "status": "ready"}, {"id": "cayp:artifact:0000-000", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Velit nobis sapiente."}, "mime-type": "image/jpeg", "name": "Fire risk for Lot2", "size": 19000, "status": "ready"}, {"id": "cayp:artifact:0000-000", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Velit nobis sapiente."}, "mime-type": "image/jpeg", "name": "Fire risk for Lot2", "size": 19000, "status": "ready"}], "at-time": "1996-12-19T16:39:57-08:00", "links": {"first": "https://api.com/foo/...", "next": "https://api.com/foo/...", "self": "https://api.com/foo/..."}}, "required": ["artifacts", "links"]}, "ArtifactStatusRT": {"type": "object", "properties": {"account": {"$ref": "#/components/schemas/RefT"}, "cache-of": {"type": "string", "description": "URL of object this artifact is caching", "example": "Eos labore."}, "created-at": {"type": "string", "description": "DateTime artifact was created", "example": "2022-01-01"}, "data": {"$ref": "#/components/schemas/SelfT"}, "etag": {"type": "string", "description": "ETAG of artifact", "example": "Assumenda aut quia commodi."}, "id": {"type": "string", "description": "Artifact ID", "example": "type:scope:name"}, "last-modified-at": {"type": "string", "description": "DateTime artifact was last modified", "example": "2022-01-01"}, "links": {"$ref": "#/components/schemas/SelfT"}, "location": {"type": "string", "description": "link back to record", "example": "Molestias dolorum provident inventore."}, "mime-type": {"type": "string", "description": "Mime-type of data", "example": "Iste nemo et harum hic qui voluptas."}, "name": {"type": "string", "description": "Optional name", "example": "Fire risk per LGA"}, "policy": {"$ref": "#/components/schemas/RefT"}, "size": {"type": "integer", "description": "Size of data", "example": 2708169700325799042, "format": "int64"}, "status": {"type": "string", "description": "Artifact status", "example": "ready", "enum": ["pending", "partial", "ready", "error", "unknown"]}, "tus-offset": {"type": "integer", "description": "TUS offset for partially uploaded content", "example": 7387561675735263870, "format": "int64"}, "tus-resumable": {"type": "string", "description": "indicate version of TUS supported", "example": "Dicta dicta."}}, "example": {"account": {"id": "http://reinger.name/wiley", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Velit nobis sapiente."}}, "cache-of": "Vel reprehenderit.", "created-at": "2022-01-01", "data": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Velit nobis sapiente."}, "etag": "Quaerat ea ipsam soluta.", "id": "type:scope:name", "last-modified-at": "2022-01-01", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Velit nobis sapiente."}, "location": "Libero ducimus eaque qui consectetur.", "mime-type": "Ab reprehenderit possimus suscipit quos quia.", "name": "Fire risk per LGA", "policy": {"id": "http://reinger.name/wiley", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Velit nobis sapiente."}}, "size": 8058464561447101702, "status": "error", "tus-offset": 8823655499316616494, "tus-resumable": "Porro veritatis laborum ut."}, "required": ["id", "status", "links"]}, "BasicWorkflowOptsT": {"type": "object", "properties": {"command": {"type": "array", "items": {"type": "string", "example": "Accusantium illum est veniam."}, "description": "Command to start the container - needed for some container runtimes", "example": ["/bin/sh", "-c", "echo $PATH"]}, "cpu": {"$ref": "#/components/schemas/ResourceMemoryT"}, "ephemeral-storage": {"$ref": "#/components/schemas/ResourceMemoryT"}, "image": {"type": "string", "description": "container image name", "example": "alpine"}, "memory": {"$ref": "#/components/schemas/ResourceMemoryT"}}, "example": {"command": ["/bin/sh", "-c", "echo $PATH"], "cpu": {"limit": "100m", "request": "10m"}, "ephemeral-storage": {"limit": "4Gi", "request": "2Gi"}, "image": "alpine", "memory": {"limit": "100Mi", "request": "10Mi"}}, "required": ["image", "command"]}, "CreateServiceResponseBodyTiny": {"type": "object", "properties": {"links": {"$ref": "#/components/schemas/SelfT"}, "name": {"type": "string", "description": "Optional provider provided name", "example": "Fire risk for Lot2"}}, "description": "create_service_response_body result type (tiny view)", "example": {"links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Velit nobis sapiente."}, "name": "Fire risk for Lot2"}, "required": ["links"]}, "DescribedByT": {"type": "object", "properties": {"href": {"type": "string", "example": "https://api.com/swagger/...", "format": "uri"}, "type": {"type": "string", "example": "application/openapi3+json"}}, "example": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}}, "DownloadLogRequestT": {"type": "object", "properties": {"container-name": {"type": "string", "description": "Reference to container name", "example": "main"}, "from": {"type": "integer", "description": "From unix time, seconds since 1970-01-01", "example": 1257894000, "format": "int64"}, "namespace-name": {"type": "string", "description": "Reference to namespace name", "example": "ivcap-develop-runner"}, "order-id": {"type": "string", "description": "Reference to order requested", "example": "urn:ivcap:order:123e4567-e89b-12d3-a456-426614174000", "format": "uri"}, "policy-id": {"type": "string", "description": "Policy to control access to record an all generated artifacts", "example": "urn:ivcap:policy:123e4567-e89b-12d3-a456-426614174000", "format": "uri"}, "to": {"type": "integer", "description": "To unix time, seconds since 1970-01-01", "example": 1257894000, "format": "int64"}}, "example": {"container-name": "main", "from": 1257894000, "namespace-name": "ivcap-develop-runner", "order-id": "urn:ivcap:order:123e4567-e89b-12d3-a456-426614174000", "policy-id": "urn:ivcap:policy:123e4567-e89b-12d3-a456-426614174000", "to": 1257894000}, "required": ["order-id"]}, "InvalidParameterValue": {"type": "object", "properties": {"message": {"type": "string", "description": "message describing expected type or pattern.", "example": "Reiciendis incidunt."}, "name": {"type": "string", "description": "name of parameter.", "example": "Perspiciatis sit pariatur sunt."}, "value": {"type": "string", "description": "provided parameter value.", "example": "Reiciendis similique repellendus et."}}, "description": "Invalide parameter value", "example": {"message": "Fugit alias velit.", "name": "Aut at.", "value": "Consequatur minima ut."}, "required": ["name", "message"]}, "InvalidScopesT": {"type": "object", "properties": {"id": {"type": "string", "description": "ID of involved resource", "example": "123e4567-e89b-12d3-a456-426614174000", "format": "uuid"}, "message": {"type": "string", "description": "Message of error", "default": "Not authorized to perform this action", "example": "Sunt aliquam iure."}}, "description": "Token scopes are invalid", "example": {"id": "123e4567-e89b-12d3-a456-426614174000", "message": "Rerum incidunt."}, "required": ["message"]}, "ListMetaRT": {"type": "object", "properties": {"aspect-path": {"type": "string", "description": "Optional json path to further filter on returned list", "example": "Voluptates impedit."}, "at-time": {"type": "string", "description": "Time at which this list was valid", "example": "1996-12-19T16:39:57-08:00", "format": "date-time"}, "entity-id": {"type": "string", "description": "Entity for which to request metadata", "example": "urn:blue:image.collA.12", "format": "uri"}, "links": {"$ref": "#/components/schemas/NavT"}, "records": {"type": "array", "items": {"$ref": "#/components/schemas/MetadataListItemRT"}, "description": "List of metadata records", "example": [{"aspect": "{...}", "aspectContext": "{...}", "entity": "urn:blue:transect.1", "record-id": "urn:ivcap:record.123e4567-e89b-12d3-a456-426614174000", "schema": "urn:blue:schema.image"}, {"aspect": "{...}", "aspectContext": "{...}", "entity": "urn:blue:transect.1", "record-id": "urn:ivcap:record.123e4567-e89b-12d3-a456-426614174000", "schema": "urn:blue:schema.image"}]}, "schema": {"type": "string", "description": "Optional schema to filter on", "example": "urn:blue:image,urn:blue:location", "format": "uri"}}, "example": {"aspect-path": "Suscipit ullam et commodi eos soluta.", "at-time": "1996-12-19T16:39:57-08:00", "entity-id": "urn:blue:image.collA.12", "links": {"first": "https://api.com/foo/...", "next": "https://api.com/foo/...", "self": "https://api.com/foo/..."}, "records": [{"aspect": "{...}", "aspectContext": "{...}", "entity": "urn:blue:transect.1", "record-id": "urn:ivcap:record.123e4567-e89b-12d3-a456-426614174000", "schema": "urn:blue:schema.image"}, {"aspect": "{...}", "aspectContext": "{...}", "entity": "urn:blue:transect.1", "record-id": "urn:ivcap:record.123e4567-e89b-12d3-a456-426614174000", "schema": "urn:blue:schema.image"}], "schema": "urn:blue:image,urn:blue:location"}, "required": ["records", "links"]}, "MetadataListItemRT": {"type": "object", "properties": {"aspect": {"type": "object", "description": "Attached metadata aspect", "example": "{...}"}, "aspectContext": {"type": "string", "description": "If aspectPath was defined, this is what matched the query", "example": "{...}"}, "entity": {"type": "string", "description": "Entity ID", "example": "urn:blue:transect.1", "format": "uri"}, "record-id": {"type": "string", "description": "Record ID", "example": "urn:ivcap:record.123e4567-e89b-12d3-a456-426614174000", "format": "uri"}, "schema": {"type": "string", "description": "Schema ID", "example": "urn:blue:schema.image", "format": "uri"}}, "example": {"aspect": "{...}", "aspectContext": "{...}", "entity": "urn:blue:transect.1", "record-id": "urn:ivcap:record.123e4567-e89b-12d3-a456-426614174000", "schema": "urn:blue:schema.image"}}, "MetadataRecordRT": {"type": "object", "properties": {"aspect": {"type": "string", "description": "Attached metadata aspect", "example": "{...}", "format": "binary"}, "asserter": {"type": "string", "description": "Entity asserting this metadata record at 'valid-from'", "example": "..."}, "entity": {"type": "string", "description": "Entity ID", "example": "urn:blue:transect.1", "format": "uri"}, "record-id": {"type": "string", "description": "Record ID", "example": "urn:ivcap:record.123e4567-e89b-12d3-a456-426614174000", "format": "uri"}, "revoker": {"type": "string", "description": "Entity revoking this record at 'valid-to'", "example": "...", "format": "date-time"}, "schema": {"type": "string", "description": "Schema ID", "example": "urn:blue:schema.image", "format": "uri"}, "valid-from": {"type": "string", "description": "Time this record was asserted", "example": "1996-12-19T16:39:57-08:00", "format": "date-time"}, "valid-to": {"type": "string", "description": "Time this record was revoked", "example": "1996-12-19T16:39:57-08:00", "format": "date-time"}}, "example": {"aspect": "{...}", "asserter": "...", "entity": "urn:blue:transect.1", "record-id": "urn:ivcap:record.123e4567-e89b-12d3-a456-426614174000", "revoker": "...", "schema": "urn:blue:schema.image", "valid-from": "1996-12-19T16:39:57-08:00", "valid-to": "1996-12-19T16:39:57-08:00"}}, "NavT": {"type": "object", "properties": {"first": {"type": "string", "example": "https://api.com/foo/...", "format": "uri"}, "next": {"type": "string", "example": "https://api.com/foo/...", "format": "uri"}, "self": {"type": "string", "example": "https://api.com/foo/...", "format": "uri"}}, "example": {"first": "https://api.com/foo/...", "next": "https://api.com/foo/...", "self": "https://api.com/foo/..."}}, "NotImplementedT": {"type": "object", "properties": {"message": {"type": "string", "description": "Information message", "default": "Method not implemented", "example": "Voluptas cupiditate."}}, "description": "Method is not yet implemented", "example": {"message": "Corporis consequatur quo ex mollitia eum consequatur."}, "required": ["message"]}, "OrderListItem": {"type": "object", "properties": {"account-id": {"type": "string", "description": "ID of ordered service", "example": "2022-01-01"}, "finished-at": {"type": "string", "description": "DateTime order was finished", "example": "2022-01-01"}, "id": {"type": "string", "description": "Order ID", "example": "cayp:order:123e4567-e89b-12d3-a456-426614174000"}, "links": {"$ref": "#/components/schemas/SelfT"}, "name": {"type": "string", "description": "Optional customer provided name", "example": "Fire risk for Lot2"}, "ordered-at": {"type": "string", "description": "DateTime order was placed", "example": "2022-01-01"}, "service-id": {"type": "string", "description": "ID of ordered service", "example": "2022-01-01"}, "started-at": {"type": "string", "description": "DateTime processing of order started", "example": "2022-01-01"}, "status": {"type": "string", "description": "Order status", "example": "executing", "enum": ["unknown", "pending", "scheduled", "executing", "succeeded", "failed", "error"]}}, "example": {"account-id": "2022-01-01", "finished-at": "2022-01-01", "id": "cayp:order:123e4567-e89b-12d3-a456-426614174000", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Velit nobis sapiente."}, "name": "Fire risk for Lot2", "ordered-at": "2022-01-01", "service-id": "2022-01-01", "started-at": "2022-01-01", "status": "succeeded"}, "required": ["links"]}, "OrderListRT": {"type": "object", "properties": {"at-time": {"type": "string", "description": "Time at which this list was valid", "example": "1996-12-19T16:39:57-08:00", "format": "date-time"}, "links": {"$ref": "#/components/schemas/NavT"}, "orders": {"type": "array", "items": {"$ref": "#/components/schemas/OrderListItem"}, "description": "Orders", "example": [{"account-id": "2022-01-01", "finished-at": "2022-01-01", "id": "cayp:order:123e4567-e89b-12d3-a456-426614174000", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Velit nobis sapiente."}, "name": "Fire risk for Lot2", "ordered-at": "2022-01-01", "service-id": "2022-01-01", "started-at": "2022-01-01", "status": "error"}, {"account-id": "2022-01-01", "finished-at": "2022-01-01", "id": "cayp:order:123e4567-e89b-12d3-a456-426614174000", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Velit nobis sapiente."}, "name": "Fire risk for Lot2", "ordered-at": "2022-01-01", "service-id": "2022-01-01", "started-at": "2022-01-01", "status": "error"}]}}, "example": {"at-time": "1996-12-19T16:39:57-08:00", "links": {"first": "https://api.com/foo/...", "next": "https://api.com/foo/...", "self": "https://api.com/foo/..."}, "orders": [{"account-id": "2022-01-01", "finished-at": "2022-01-01", "id": "cayp:order:123e4567-e89b-12d3-a456-426614174000", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Velit nobis sapiente."}, "name": "Fire risk for Lot2", "ordered-at": "2022-01-01", "service-id": "2022-01-01", "started-at": "2022-01-01", "status": "error"}, {"account-id": "2022-01-01", "finished-at": "2022-01-01", "id": "cayp:order:123e4567-e89b-12d3-a456-426614174000", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Velit nobis sapiente."}, "name": "Fire risk for Lot2", "ordered-at": "2022-01-01", "service-id": "2022-01-01", "started-at": "2022-01-01", "status": "error"}]}, "required": ["orders", "at-time", "links"]}, "OrderRequestT": {"type": "object", "properties": {"account-id": {"type": "string", "description": "Reference to billable account", "example": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "format": "uri"}, "name": {"type": "string", "description": "Optional customer provided name", "example": "Fire risk for Lot2"}, "parameters": {"type": "array", "items": {"$ref": "#/components/schemas/ParameterT"}, "description": "Service parameters", "example": [{"name": "region", "value": "Upper Valley"}, {"name": "threshold", "value": "10"}]}, "policy-id": {"type": "string", "description": "Policy to control access to record an all generated artifacts", "example": "urn:ivcap:policy:123e4567-e89b-12d3-a456-426614174000", "format": "uri"}, "service-id": {"type": "string", "description": "Reference to service requested", "example": "urn:ivcap:service:123e4567-e89b-12d3-a456-426614174000", "format": "uri"}, "tags": {"type": "array", "items": {"type": "string", "example": "Placeat excepturi."}, "description": "Optional customer provided tags", "example": ["tag1", "tag2"]}}, "example": {"account-id": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "name": "Fire risk for Lot2", "parameters": [{"name": "region", "value": "Upper Valley"}, {"name": "threshold", "value": "10"}], "policy-id": "urn:ivcap:policy:123e4567-e89b-12d3-a456-426614174000", "service-id": "urn:ivcap:service:123e4567-e89b-12d3-a456-426614174000", "tags": ["tag1", "tag2"]}, "required": ["service-id", "parameters"]}, "OrderStatusRT": {"type": "object", "properties": {"account": {"$ref": "#/components/schemas/RefT"}, "finished-at": {"type": "string", "description": "DateTime order processing finished", "example": "2023-03-17T04:57:00Z"}, "id": {"type": "string", "description": "Order ID", "example": "123e4567-e89b-12d3-a456-426614174000", "format": "uuid"}, "links": {"$ref": "#/components/schemas/SelfT"}, "name": {"type": "string", "description": "Optional customer provided name", "example": "Fire risk for Lot2"}, "ordered-at": {"type": "string", "description": "DateTime order was placed", "example": "2023-03-17T04:57:00Z"}, "parameters": {"type": "array", "items": {"$ref": "#/components/schemas/ParameterT"}, "description": "Service parameters", "example": [{"name": "region", "value": "Upper Valley"}, {"name": "threshold", "value": "10"}]}, "product-links": {"$ref": "#/components/schemas/NavT"}, "products": {"type": "array", "items": {"$ref": "#/components/schemas/ProductT"}, "description": "Products delivered for this order", "example": [{"href": "https:/.../1/artifacts/0000-00001220", "mime-type": "image/geo+tiff", "name": "fire risk map", "size": 1234963}]}, "service": {"$ref": "#/components/schemas/RefT"}, "started-at": {"type": "string", "description": "DateTime order processing started", "example": "2023-03-17T04:57:00Z"}, "status": {"type": "string", "description": "Order status", "example": "pending", "enum": ["unknown", "pending", "scheduled", "executing", "succeeded", "failed", "error"]}, "tags": {"type": "array", "items": {"type": "string", "example": "Optio quibusdam harum."}, "description": "Optional customer provided tags", "example": ["tag1", "tag2"]}}, "example": {"account": {"id": "http://reinger.name/wiley", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Velit nobis sapiente."}}, "finished-at": "2023-03-17T04:57:00Z", "id": "123e4567-e89b-12d3-a456-426614174000", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Velit nobis sapiente."}, "name": "Fire risk for Lot2", "ordered-at": "2023-03-17T04:57:00Z", "parameters": [{"name": "region", "value": "Upper Valley"}, {"name": "threshold", "value": "10"}], "product-links": {"first": "https://api.com/foo/...", "next": "https://api.com/foo/...", "self": "https://api.com/foo/..."}, "products": [{"href": "https:/.../1/artifacts/0000-00001220", "mime-type": "image/geo+tiff", "name": "fire risk map", "size": 1234963}], "service": {"id": "http://reinger.name/wiley", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Velit nobis sapiente."}}, "started-at": "2023-03-17T04:57:00Z", "status": "pending", "tags": ["tag1", "tag2"]}, "required": ["id", "parameters"]}, "OrderTopRequestT": {"type": "object", "properties": {"namespace-name": {"type": "string", "description": "Reference to namespace name", "example": "ivcap-develop-runner"}, "order-id": {"type": "string", "description": "Reference to order requested", "example": "urn:ivcap:order:123e4567-e89b-12d3-a456-426614174000", "format": "uri"}, "policy-id": {"type": "string", "description": "Policy to control access to record an all generated artifacts", "example": "urn:ivcap:policy:123e4567-e89b-12d3-a456-426614174000", "format": "uri"}}, "example": {"namespace-name": "ivcap-develop-runner", "order-id": "urn:ivcap:order:123e4567-e89b-12d3-a456-426614174000", "policy-id": "urn:ivcap:policy:123e4567-e89b-12d3-a456-426614174000"}, "required": ["order-id"]}, "OrderTopResultItem": {"type": "object", "properties": {"container": {"type": "string", "description": "container", "example": "Cupiditate et nihil esse."}, "cpu": {"type": "string", "description": "cpu", "example": "Ipsum qui necessitatibus quidem sint doloremque."}, "ephemeral-storage": {"type": "string", "description": "ephemeral-storage", "example": "Accusamus doloremque et dolor ullam dolorem hic."}, "memory": {"type": "string", "description": "memory", "example": "Blanditiis nihil eligendi."}, "storage": {"type": "string", "description": "storage", "example": "Cumque qui pariatur sint corrupti."}}, "example": {"container": "Et dolore qui dolores est dolorum rerum.", "cpu": "Totam voluptas.", "ephemeral-storage": "Quis voluptate quis ipsa repudiandae quidem eos.", "memory": "Ipsa consequatur distinctio necessitatibus.", "storage": "Et vel beatae."}, "required": ["container", "cpu", "memory", "storage", "ephemeral-storage"]}, "OrderTopResultItemCollection": {"type": "array", "items": {"$ref": "#/components/schemas/OrderTopResultItem"}, "example": [{"container": "Aliquam sit error fuga.", "cpu": "Neque odio officia voluptas.", "ephemeral-storage": "Itaque eaque et accusantium sunt.", "memory": "Doloremque unde similique sequi.", "storage": "Eveniet eos incidunt rerum."}, {"container": "Aliquam sit error fuga.", "cpu": "Neque odio officia voluptas.", "ephemeral-storage": "Itaque eaque et accusantium sunt.", "memory": "Doloremque unde similique sequi.", "storage": "Eveniet eos incidunt rerum."}, {"container": "Aliquam sit error fuga.", "cpu": "Neque odio officia voluptas.", "ephemeral-storage": "Itaque eaque et accusantium sunt.", "memory": "Doloremque unde similique sequi.", "storage": "Eveniet eos incidunt rerum."}, {"container": "Aliquam sit error fuga.", "cpu": "Neque odio officia voluptas.", "ephemeral-storage": "Itaque eaque et accusantium sunt.", "memory": "Doloremque unde similique sequi.", "storage": "Eveniet eos incidunt rerum."}]}, "ParameterDefT": {"type": "object", "properties": {"constant": {"type": "boolean", "example": false}, "default": {"type": "string", "example": "Quis et."}, "description": {"type": "string", "example": "Assumenda quod ipsa voluptas quia cum."}, "label": {"type": "string", "example": "Magni accusamus doloremque autem omnis et."}, "name": {"type": "string", "example": "Laudantium perspiciatis aut dolorum libero ducimus at."}, "optional": {"type": "boolean", "example": true}, "options": {"type": "array", "items": {"$ref": "#/components/schemas/ParameterOptT"}, "example": [{"description": "Sit repellat nemo recusandae asperiores dolorum voluptas.", "value": "Saepe minima non qui quos."}, {"description": "Sit repellat nemo recusandae asperiores dolorum voluptas.", "value": "Saepe minima non qui quos."}]}, "type": {"type": "string", "example": "Qui voluptas unde hic qui quis."}, "unit": {"type": "string", "example": "Animi animi."}}, "example": {"constant": false, "default": "Accusamus doloribus excepturi.", "description": "Necessitatibus eum aut possimus dicta amet.", "label": "Asperiores sit at iusto eum facere sint.", "name": "Itaque dolorem voluptatem enim aut.", "optional": true, "options": [{"description": "Sit repellat nemo recusandae asperiores dolorum voluptas.", "value": "Saepe minima non qui quos."}, {"description": "Sit repellat nemo recusandae asperiores dolorum voluptas.", "value": "Saepe minima non qui quos."}], "type": "Eligendi dicta aperiam doloremque aut odit.", "unit": "Quia est."}}, "ParameterOptT": {"type": "object", "properties": {"description": {"type": "string", "example": "Nulla quis accusantium laboriosam in et."}, "value": {"type": "string", "example": "Necessitatibus vero officiis iste omnis corrupti."}}, "example": {"description": "Ipsam quia rerum laborum asperiores id asperiores.", "value": "In et odio aut est."}}, "ParameterT": {"type": "object", "properties": {"name": {"type": "string", "example": "Quisquam earum dolores unde qui mollitia veniam."}, "value": {"type": "string", "example": "Eaque cumque ipsa eum laborum corporis."}}, "example": {"name": "Ipsam cumque voluptatem.", "value": "Nulla corporis unde aperiam."}}, "ProductT": {"type": "object", "properties": {"id": {"type": "string", "example": "Et voluptas dolores quis quaerat consequatur quas."}, "links": {"$ref": "#/components/schemas/SelfWithDataT"}, "mime-type": {"type": "string", "example": "Et porro ducimus corporis quas."}, "name": {"type": "string", "example": "Illo dolores inventore odit unde architecto quis."}, "size": {"type": "integer", "example": 8294536858564357687, "format": "int64"}, "status": {"type": "string", "example": "Ullam illum assumenda explicabo aut."}}, "example": {"id": "Ut nisi optio dolorem.", "links": {"data": "Quis aut quia veniam.", "describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Qui repellendus molestias culpa aut assumenda."}, "mime-type": "In asperiores voluptatem ut deserunt.", "name": "Atque reiciendis perferendis qui.", "size": 9136100875930702234, "status": "Explicabo officiis vel."}}, "ReadResponseBodyTiny": {"type": "object", "properties": {"links": {"$ref": "#/components/schemas/SelfT"}, "name": {"type": "string", "description": "Optional customer provided name", "example": "Fire risk for Lot2"}, "status": {"type": "string", "description": "Order status", "example": "scheduled", "enum": ["unknown", "pending", "scheduled", "executing", "succeeded", "failed", "error"]}}, "description": "ReadResponseBody result type (tiny view)", "example": {"links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Velit nobis sapiente."}, "name": "Fire risk for Lot2", "status": "pending"}}, "RefT": {"type": "object", "properties": {"id": {"type": "string", "example": "http://fadelrohan.net/arnoldo_hayes", "format": "uri"}, "links": {"$ref": "#/components/schemas/SelfT"}}, "example": {"id": "http://reingerpouros.info/abel", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Velit nobis sapiente."}}}, "ReferenceT": {"type": "object", "properties": {"title": {"type": "string", "description": "Title of reference document", "example": "Expedita quasi natus."}, "uri": {"type": "string", "description": "Link to document", "example": "http://miller.org/pat_bayer", "format": "uri"}}, "example": {"title": "Itaque quia.", "uri": "http://uptondooley.net/talon.bechtelar"}}, "ResourceMemoryT": {"type": "object", "properties": {"limit": {"type": "string", "description": "minimal requirements [system limit]", "example": "Quaerat et at delectus."}, "request": {"type": "string", "description": "minimal requirements [0]", "example": "Et sit voluptas cumque voluptatibus."}}, "description": "See https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#resource-units-in-kubernetes for units", "example": {"limit": "Inventore quas voluptas consequatur sint nihil.", "request": "Inventore corporis."}}, "ResourceNotFoundT": {"type": "object", "properties": {"id": {"type": "string", "description": "ID of missing resource", "example": "cayp:type:123e4567-e89b-12d3-a456-426614174000", "format": "uri"}, "message": {"type": "string", "description": "Message of error", "example": "Resource 123...00 not found"}}, "description": "artifacts not found", "example": {"id": "cayp:type:123e4567-e89b-12d3-a456-426614174000", "message": "Resource 123...00 not found"}, "required": ["message", "id"]}, "SelfT": {"type": "object", "properties": {"describedBy": {"$ref": "#/components/schemas/DescribedByT"}, "self": {"type": "string", "example": "Et officia."}}, "example": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Fuga beatae blanditiis sed iusto."}}, "SelfWithDataT": {"type": "object", "properties": {"data": {"type": "string", "example": "Repudiandae sed voluptas."}, "describedBy": {"$ref": "#/components/schemas/DescribedByT"}, "self": {"type": "string", "example": "Asperiores dicta eos."}}, "example": {"data": "Est tempore iusto asperiores ratione dolore.", "describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Nihil doloremque eveniet tenetur quasi cupiditate accusamus."}}, "ServiceDescriptionT": {"type": "object", "properties": {"account-id": {"type": "string", "description": "Reference to account revenues for this service should be credited to", "example": "urn:ivcap:account:0f0e3f57-80f7-4899-9b69-459af2efd789", "format": "uri"}, "banner": {"type": "string", "description": "Link to banner image oprionally used for this service", "example": "http://fadel.info/carlotta", "format": "uri"}, "description": {"type": "string", "description": "More detailed description of the service", "example": "This service ..."}, "metadata": {"type": "array", "items": {"$ref": "#/components/schemas/ParameterT"}, "description": "Optional provider provided meta tags", "example": [{"name": "Porro minima qui ut cumque quia.", "value": "Exercitationem ratione."}, {"name": "Porro minima qui ut cumque quia.", "value": "Exercitationem ratione."}, {"name": "Porro minima qui ut cumque quia.", "value": "Exercitationem ratione."}, {"name": "Porro minima qui ut cumque quia.", "value": "Exercitationem ratione."}]}, "name": {"type": "string", "description": "Optional provider provided name", "example": "Fire risk for Lot2"}, "parameters": {"type": "array", "items": {"$ref": "#/components/schemas/ParameterDefT"}, "description": "Service parameter definitions", "example": [{"description": "The name of the region as according to ...", "label": "Region Name", "name": "region", "type": "string"}, {"label": "Rainfall/month threshold", "name": "threshold", "type": "float", "unit": "m"}]}, "policy-id": {"type": "string", "description": "Reference to policy controlling access", "example": "Quam cupiditate enim harum perferendis."}, "provider-id": {"type": "string", "description": "Reference to service provider", "example": "urn:ivcap:provider:0f0e3f57-80f7-4899-9b69-459af2efd789", "format": "uri"}, "provider-ref": {"type": "string", "description": "Provider provided reference. Should to be a single string with punctuations allowed. Might be changed, so please check result", "example": "service_foo_patch_1"}, "references": {"type": "array", "items": {"$ref": "#/components/schemas/ReferenceT"}, "description": "Reference to account revenues for this service should be credited to", "example": [{"title": "Inventore voluptatem incidunt vel et voluptas.", "uri": "http://rodriguez.name/sterling.schmitt"}, {"title": "Inventore voluptatem incidunt vel et voluptas.", "uri": "http://rodriguez.name/sterling.schmitt"}, {"title": "Inventore voluptatem incidunt vel et voluptas.", "uri": "http://rodriguez.name/sterling.schmitt"}]}, "tags": {"type": "array", "items": {"type": "string", "example": "Qui modi."}, "description": "Optional provider provided tags", "example": ["tag1", "tag2"]}, "workflow": {"$ref": "#/components/schemas/WorkflowT"}}, "example": {"account-id": "urn:ivcap:account:0f0e3f57-80f7-4899-9b69-459af2efd789", "banner": "http://binsohara.net/arnulfo.schimmel", "description": "This service ...", "metadata": [{"name": "Porro minima qui ut cumque quia.", "value": "Exercitationem ratione."}, {"name": "Porro minima qui ut cumque quia.", "value": "Exercitationem ratione."}, {"name": "Porro minima qui ut cumque quia.", "value": "Exercitationem ratione."}, {"name": "Porro minima qui ut cumque quia.", "value": "Exercitationem ratione."}], "name": "Fire risk for Lot2", "parameters": [{"description": "The name of the region as according to ...", "label": "Region Name", "name": "region", "type": "string"}, {"label": "Rainfall/month threshold", "name": "threshold", "type": "float", "unit": "m"}], "policy-id": "Libero nam eius.", "provider-id": "urn:ivcap:provider:0f0e3f57-80f7-4899-9b69-459af2efd789", "provider-ref": "service_foo_patch_1", "references": [{"title": "Inventore voluptatem incidunt vel et voluptas.", "uri": "http://rodriguez.name/sterling.schmitt"}, {"title": "Inventore voluptatem incidunt vel et voluptas.", "uri": "http://rodriguez.name/sterling.schmitt"}, {"title": "Inventore voluptatem incidunt vel et voluptas.", "uri": "http://rodriguez.name/sterling.schmitt"}], "tags": ["tag1", "tag2"], "workflow": {"argo": "Exercitationem nobis perspiciatis voluptate quia.", "basic": {"command": ["/bin/sh", "-c", "echo $PATH"], "cpu": {"limit": "100m", "request": "10m"}, "ephemeral-storage": {"limit": "4Gi", "request": "2Gi"}, "image": "alpine", "memory": {"limit": "100Mi", "request": "10Mi"}}, "opts": "Facilis alias.", "type": "basic"}}, "required": ["description", "provider-id", "account-id", "workflow", "parameters"]}, "ServiceListItem": {"type": "object", "properties": {"description": {"type": "string", "description": "Optional description of the service", "example": "Some lengthy description of fire risk"}, "id": {"type": "string", "description": "Service ID", "example": "service:acme:oracle"}, "links": {"$ref": "#/components/schemas/SelfT"}, "name": {"type": "string", "description": "Optional customer provided name", "example": "Fire risk for region"}, "provider": {"$ref": "#/components/schemas/RefT"}}, "example": {"description": "Some lengthy description of fire risk", "id": "service:acme:oracle", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Velit nobis sapiente."}, "name": "Fire risk for region", "provider": {"id": "http://reinger.name/wiley", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Velit nobis sapiente."}}}, "required": ["links"]}, "ServiceListRT": {"type": "object", "properties": {"at-time": {"type": "string", "description": "Time at which this list was valid", "example": "1996-12-19T16:39:57-08:00", "format": "date-time"}, "links": {"$ref": "#/components/schemas/NavT"}, "services": {"type": "array", "items": {"$ref": "#/components/schemas/ServiceListItem"}, "description": "Services", "example": [{"description": "Some lengthy description of fire risk", "id": "service:acme:oracle", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Velit nobis sapiente."}, "name": "Fire risk for region", "provider": {"id": "http://reinger.name/wiley", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Velit nobis sapiente."}}}, {"description": "Some lengthy description of fire risk", "id": "service:acme:oracle", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Velit nobis sapiente."}, "name": "Fire risk for region", "provider": {"id": "http://reinger.name/wiley", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Velit nobis sapiente."}}}]}}, "example": {"at-time": "1996-12-19T16:39:57-08:00", "links": {"first": "https://api.com/foo/...", "next": "https://api.com/foo/...", "self": "https://api.com/foo/..."}, "services": [{"description": "Some lengthy description of fire risk", "id": "service:acme:oracle", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Velit nobis sapiente."}, "name": "Fire risk for region", "provider": {"id": "http://reinger.name/wiley", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Velit nobis sapiente."}}}, {"description": "Some lengthy description of fire risk", "id": "service:acme:oracle", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Velit nobis sapiente."}, "name": "Fire risk for region", "provider": {"id": "http://reinger.name/wiley", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Velit nobis sapiente."}}}, {"description": "Some lengthy description of fire risk", "id": "service:acme:oracle", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Velit nobis sapiente."}, "name": "Fire risk for region", "provider": {"id": "http://reinger.name/wiley", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Velit nobis sapiente."}}}]}, "required": ["services", "at-time", "links"]}, "ServiceStatusRT": {"type": "object", "properties": {"account": {"$ref": "#/components/schemas/RefT"}, "description": {"type": "string", "description": "More detailed description of the service", "example": "This service ..."}, "id": {"type": "string", "description": "Service ID", "example": "service:acme:oracle"}, "links": {"$ref": "#/components/schemas/SelfT"}, "metadata": {"type": "array", "items": {"$ref": "#/components/schemas/ParameterT"}, "description": "Optional provider provided meta tags", "example": [{"name": "Quidem est ipsa.", "value": "Esse rerum vitae et commodi."}, {"name": "Quidem est ipsa.", "value": "Esse rerum vitae et commodi."}]}, "name": {"type": "string", "description": "Optional provider provided name", "example": "Fire risk for Lot2"}, "parameters": {"type": "array", "items": {"$ref": "#/components/schemas/ParameterDefT"}, "description": "Service parameter definitions", "example": [{"description": "The name of the region as according to ...", "label": "Region Name", "name": "region", "type": "string"}, {"label": "Rainfall/month threshold", "name": "threshold", "type": "float", "unit": "m"}]}, "provider": {"$ref": "#/components/schemas/RefT"}, "provider-ref": {"type": "string", "description": "Provider provided ID. Needs to be a single string with punctuations allowed. Might have been changed", "example": "service_foo"}, "status": {"type": "string", "description": "Service status", "example": "active", "enum": ["active", "inactive", "error"]}, "tags": {"type": "array", "items": {"type": "string", "example": "Et tempore hic atque in."}, "description": "Optional provider provided tags", "example": ["tag1", "tag2"]}}, "example": {"account": {"id": "http://reinger.name/wiley", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Velit nobis sapiente."}}, "description": "This service ...", "id": "service:acme:oracle", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Velit nobis sapiente."}, "metadata": [{"name": "Quidem est ipsa.", "value": "Esse rerum vitae et commodi."}, {"name": "Quidem est ipsa.", "value": "Esse rerum vitae et commodi."}, {"name": "Quidem est ipsa.", "value": "Esse rerum vitae et commodi."}, {"name": "Quidem est ipsa.", "value": "Esse rerum vitae et commodi."}], "name": "Fire risk for Lot2", "parameters": [{"description": "The name of the region as according to ...", "label": "Region Name", "name": "region", "type": "string"}, {"label": "Rainfall/month threshold", "name": "threshold", "type": "float", "unit": "m"}], "provider": {"id": "http://reinger.name/wiley", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Velit nobis sapiente."}}, "provider-ref": "service_foo", "status": "active", "tags": ["tag1", "tag2"]}, "required": ["id", "links", "parameters"]}, "WorkflowT": {"type": "object", "properties": {"argo": {"type": "string", "description": "Defines the workflow using argo's WF schema", "example": "Voluptas saepe.", "format": "binary"}, "basic": {"$ref": "#/components/schemas/BasicWorkflowOptsT"}, "opts": {"type": "string", "description": "Type specific options - left for backward compatibility, if possible use type specific elements", "example": "Est qui libero voluptatem.", "format": "binary"}, "type": {"type": "string", "description": "Type of workflow", "example": "basic"}}, "description": "Defines the workflow to use to execute this service. Currently supported 'types' are 'basic'\n\tand 'argo'. In case of 'basic', use the 'basic' element for further parameters. In the current implementation\n\t'opts' is expected to contain the same schema as 'basic'", "example": {"argo": "Et modi non non iure officia aut.", "basic": {"command": ["/bin/sh", "-c", "echo $PATH"], "cpu": {"limit": "100m", "request": "10m"}, "ephemeral-storage": {"limit": "4Gi", "request": "2Gi"}, "image": "alpine", "memory": {"limit": "100Mi", "request": "10Mi"}}, "opts": "Tempora iure magni nihil ut rerum.", "type": "basic"}}}, "securitySchemes": {"jwt_header_Authorization": {"type": "http", "description": "Secures endpoint by requiring a valid JWT token", "scheme": "bearer"}}}, "tags": [{"name": "openapi", "description": "The openapi service serves the OpenAPI definition."}, {"name": "artifact", "description": "Manage the life cycle of an artifact stored by this deployment."}, {"name": "metadata", "description": "Manages the life cycle of metadata attached to an entity."}, {"name": "order", "description": "Manage the life cycle of an order for CRE services."}, {"name": "service", "description": "Manage the life cycle of a service offered on the CRE marketplace."}]}
