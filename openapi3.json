{"openapi": "3.0.3", "info": {"title": "IVCAP", "description": "\n**IVCAP** is for **service providers** to **offer** analytics **services**\nand for **consumers** to **order** customised **products** produced by said services.\n\n### Typical Workflow\n\n1. Obtain an token from the ID Providers listed in the document returned\nby [/1/authinfo.yaml](/1/authinfo.yaml). The token needs to be added\nas a bearer token via the\n<code>Authorization</code> header to every request to this service.\n1. <a href=\"#get-/1/services\">List</a> all available service.\n1. Select appropriate service and retrieve details, like parameters via\n<a href=\"#get-/1/services/-id-\">Read Service</a>.\n1. Create the appropriate json request and POST it to\n<a href=\"#post-/1/orders\">Create Order</a>. (see the example in the\nservice description.)\n1. The reply from the above POST operation contains a link (<code>links/self</code>) to the\nnewly create order record accessible via <a href=\"#get-/1/orders/-id-\">Read Order</a>.\n1. Progress of the order fulfilment can be tracked via repeated calls to\n<a href=\"#get-/1/orders/-id-\">Read Order</a> and the returned <code>status</code>.\n1. Any information products created in the context of an order will be listed under <code>producs</code>\nwhich also include a link to the respective <a href=\"#get-/1/artifacts/-id-\">Read Artifact</a>.\n1. The <a href=\"#get-/1/artifacts/-id-\">Read Artifact</a> service will return more details for\neach artifact, including a <code>data</code> link through which the artifact content can be downloaded. (The\ndownload link is also included in the <code>products</code> list returned by\nthe <a href=\"#get-/1/orders/-id-\">Read Order</a> service ).\n\nPlease note that all schemas in this API are following the [{json:api}](https://jsonapi.org/) specs\nwherever appropriate.\n\n### High-level Architecture\n\nOn receiving an order through this **API**, the internal *Order Dispatcher* is\ncreating a *workflow*, dispatching that to the\n[Argo workflow engine](https://argoproj.github.io/argo-workflows/)\nand create appropriate records in [Magda](https://magda.io/).\nAs the execution of the workflow progresses, appropriate updates are posted to the order record in Magda,\nsuch as data accessed or produced. In addition, any information products created will be\nstored via [Minio](https://min.io/) in a deployment specific object store\nand made accessible through the *Artifact* service.\n\t", "version": "0.34"}, "servers": [{"url": "http://localhost:8088", "description": "This endpoint hosts all the IVCAP services."}], "paths": {"/1/artifacts": {"get": {"tags": ["artifact"], "summary": "list artifact", "description": "list artifacts", "operationId": "artifact#list", "parameters": [{"name": "limit", "in": "query", "description": "The $limit system query option requests the number of items in the queried\n\t\t\t\tcollection to be included in the result.", "allowEmptyValue": true, "schema": {"type": "integer", "description": "The $limit system query option requests the number of items in the queried\n\t\t\t\tcollection to be included in the result.", "default": 10, "example": 10, "format": "int64", "minimum": 1, "maximum": 50}, "example": 10}, {"name": "page", "in": "query", "description": "The content of 'page' is returned in the 'links' part of a previous query and\n\t\t\t\twill when set, ALL other parameters, except for 'limit' are ignored.", "allowEmptyValue": true, "schema": {"type": "string", "description": "The content of 'page' is returned in the 'links' part of a previous query and\n\t\t\t\twill when set, ALL other parameters, except for 'limit' are ignored.", "example": "gdsgQwhdgd"}, "example": "gdsgQwhdgd"}, {"name": "filter", "in": "query", "description": "The 'filter' system query option allows clients to filter a collection of\n\t\t\t\tresources that are addressed by a request URL. The expression specified with 'filter'\n\t\t\t\tis evaluated for each resource in the collection, and only items where the expression\n\t\t\t\tevaluates to true are included in the response.", "allowEmptyValue": true, "schema": {"type": "string", "description": "The 'filter' system query option allows clients to filter a collection of\n\t\t\t\tresources that are addressed by a request URL. The expression specified with 'filter'\n\t\t\t\tis evaluated for each resource in the collection, and only items where the expression\n\t\t\t\tevaluates to true are included in the response.", "example": "name ~= 'Scott%'"}, "example": "name ~= 'Scott%'"}, {"name": "order-by", "in": "query", "description": "The 'orderby' query option allows clients to request resources in either\n\t\t\t\tascending order using asc or descending order using desc. If asc or desc not specified,\n\t\t\t\tthen the resources will be ordered in ascending order. The request below orders Trips on\n\t\t\t\tproperty EndsAt in descending order.", "allowEmptyValue": true, "schema": {"type": "string", "description": "The 'orderby' query option allows clients to request resources in either\n\t\t\t\tascending order using asc or descending order using desc. If asc or desc not specified,\n\t\t\t\tthen the resources will be ordered in ascending order. The request below orders Trips on\n\t\t\t\tproperty EndsAt in descending order.", "example": "orderby=EndsAt"}, "example": "orderby=EndsAt"}, {"name": "order-desc", "in": "query", "description": "When set order result in descending order. Ascending order is the lt.", "allowEmptyValue": true, "schema": {"type": "boolean", "description": "When set order result in descending order. Ascending order is the lt.", "default": false, "example": false}, "example": false}, {"name": "at-time", "in": "query", "description": "Return the state of the respective resources at that time [now]", "allowEmptyValue": true, "schema": {"type": "string", "description": "Return the state of the respective resources at that time [now]", "example": "1996-12-19T16:39:57-08:00", "format": "date-time"}, "example": "1996-12-19T16:39:57-08:00"}], "responses": {"200": {"description": "OK response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ArtifactListRT"}, "example": {"at-time": "1996-12-19T16:39:57-08:00", "items": [{"href": "https://api.ivcap.net/1/orders/...", "id": "urn:ivcap:artifact:123e4567-e89b-12d3-a456-426614174000", "mime-type": "image/jpeg", "name": "Fire risk for Lot2", "size": 19000, "status": "ready"}, {"href": "https://api.ivcap.net/1/orders/...", "id": "urn:ivcap:artifact:123e4567-e89b-12d3-a456-426614174000", "mime-type": "image/jpeg", "name": "Fire risk for Lot2", "size": 19000, "status": "ready"}, {"href": "https://api.ivcap.net/1/orders/...", "id": "urn:ivcap:artifact:123e4567-e89b-12d3-a456-426614174000", "mime-type": "image/jpeg", "name": "Fire risk for Lot2", "size": 19000, "status": "ready"}], "links": [{"href": "https://api.ivcap.net/1/....", "rel": "self", "type": "application/json"}, {"href": "https://api.ivcap.net/1/....", "rel": "first", "type": "application/json"}, {"href": "https://api.ivcap.net/1/....", "rel": "next", "type": "application/json"}, {"href": "https://api.ivcap.net/1/openapi/openapi3.json#/components/schemas/user", "rel": "describedBy", "type": "application/openapi3+json"}]}}}}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}, "example": {"id": "123e4567-e89b-12d3-a456-426614174000", "message": "Minus dolores nemo reiciendis voluptates eum."}}}}, "422": {"description": "invalid-parameter: Request contained semantically wrong parameter value", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidParameterValue"}, "example": {"message": "Delectus molestiae molestiae voluptas enim blanditiis dolorem.", "name": "Placeat sit.", "value": "Nemo aut atque quam sequi expedita dicta."}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}, "example": {"message": "Sapiente provident."}}}}}, "security": [{"jwt_header_Authorization": ["consumer:read"]}]}, "post": {"tags": ["artifact"], "summary": "upload artifact", "description": "Upload content and create a artifacts.", "operationId": "artifact#upload", "parameters": [{"name": "Content-Type", "in": "header", "description": "Content-Type header, MUST define type of uploaded content.", "allowEmptyValue": true, "schema": {"type": "string", "description": "Content-Type header, MUST define type of uploaded content.", "example": "application/x-netcdf4"}, "example": "application/x-netcdf4"}, {"name": "Content-Encoding", "in": "header", "description": "Content-Encoding header, MAY define encoding of content.", "allowEmptyValue": true, "schema": {"type": "string", "description": "Content-Encoding header, MAY define encoding of content.", "example": "gzip"}, "example": "gzip"}, {"name": "Content-Length", "in": "header", "description": "Content-Length header, MAY define size of expected upload.", "allowEmptyValue": true, "schema": {"type": "integer", "description": "Content-Length header, MAY define size of expected upload.", "example": 2376, "format": "int64"}, "example": 2376}, {"name": "X-Name", "in": "header", "description": "X-Name header, MAY define a more human friendly name. Reusing a name will NOT override an existing artifact with the same name", "allowEmptyValue": true, "schema": {"type": "string", "description": "X-Name header, MAY define a more human friendly name. Reusing a name will NOT override an existing artifact with the same name", "example": "sample-12"}, "example": "sample-12"}, {"name": "X-Collection", "in": "header", "description": "X-Collection header, MAY define an collection name as a simple way of grouping artifacts", "allowEmptyValue": true, "schema": {"type": "string", "description": "X-Collection header, MAY define an collection name as a simple way of grouping artifacts", "example": "urn:projectX:collection:field-trip-jun-22"}, "example": "urn:projectX:collection:field-trip-jun-22"}, {"name": "X-Policy", "in": "header", "description": "X-Policy header, MAY define a specific policy to control access to this artifact", "allowEmptyValue": true, "schema": {"type": "string", "description": "X-Policy header, MAY define a specific policy to control access to this artifact", "example": "urn:ivcap:policy:ivcap.open.metadata"}, "example": "urn:ivcap:policy:ivcap.open.metadata"}, {"name": "X-Content-Type", "in": "header", "description": "X-Content-Type header, used for initial, empty content creation requests.", "allowEmptyValue": true, "schema": {"type": "string", "description": "X-Content-Type header, used for initial, empty content creation requests.", "example": "application/x-netcdf4"}, "example": "application/x-netcdf4"}, {"name": "X-Content-Length", "in": "header", "description": "X-Content-Length header, used for initial, empty content creation requests.", "allowEmptyValue": true, "schema": {"type": "integer", "description": "X-Content-Length header, used for initial, empty content creation requests.", "example": 2376, "format": "int64"}, "example": 2376}, {"name": "Upload-Length", "in": "header", "description": "Upload-Length header, sets the expected content size part of the TUS protocol.", "allowEmptyValue": true, "schema": {"type": "integer", "description": "Upload-Length header, sets the expected content size part of the TUS protocol.", "example": 2376, "format": "int64"}, "example": 2376}, {"name": "Tus-Resumable", "in": "header", "description": "Tus-Resumable header, specifies TUS protocol version.", "allowEmptyValue": true, "schema": {"type": "string", "description": "Tus-Resumable header, specifies TUS protocol version.", "example": "1.0.0"}, "example": "1.0.0"}], "responses": {"201": {"description": "Created response.", "headers": {"Location": {"description": "link back to record", "schema": {"type": "string", "description": "link back to record", "example": "Est ipsum illo ut."}, "example": "Eos dolorum nemo vero ea ut."}, "Tus-Resumable": {"description": "indicate version of TUS supported", "schema": {"type": "string", "description": "indicate version of TUS supported", "example": "Harum libero nam."}, "example": "Et tempore hic atque in."}, "Upload-Offset": {"description": "TUS offset for partially uploaded content", "schema": {"type": "integer", "description": "TUS offset for partially uploaded content", "example": 8588881085241803625, "format": "int64"}, "example": 8648839335217800455}}, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ArtifactStatusRT"}, "example": {"account": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "cache-of": "Et quas rem repellendus magni.", "created-at": "1996-12-19T16:39:57-08:00", "data-href": "https://api.ivcap.net/1/artifacts/.../blob", "etag": "Inventore exercitationem dignissimos voluptate consequuntur exercitationem quae.", "id": "urn:ivcap:Artifact ID:123e4567-e89b-12d3-a456-426614174000", "last-modified-at": "1996-12-19T16:39:57-08:00", "links": [{"href": "https://api.ivcap.net/1/....", "rel": "self", "type": "application/json"}, {"href": "https://api.ivcap.net/1/openapi/openapi3.json#/components/schemas/user", "rel": "describedBy", "type": "application/json"}], "mime-type": "Possimus distinctio.", "name": "Fire risk per LGA", "policy": "urn:ivcap:policy:123e4567-e89b-12d3-a456-426614174000", "size": 2688763162657771945, "status": "pending"}}}}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}, "example": {"id": "123e4567-e89b-12d3-a456-426614174000", "message": "Explicabo aut ut nihil quia."}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}, "example": {"message": "Ullam quis possimus mollitia veniam provident consequatur."}}}}}, "security": [{"jwt_header_Authorization": ["consumer:write"]}]}}, "/1/artifacts/{id}": {"get": {"tags": ["artifact"], "summary": "read artifact", "description": "Show artifacts by ID", "operationId": "artifact#read", "parameters": [{"name": "id", "in": "path", "description": "ID of artifacts to show", "required": true, "schema": {"type": "string", "description": "ID of artifacts to show", "example": "urn:ivcap:artifacts"}, "example": "urn:ivcap:artifacts"}], "responses": {"200": {"description": "OK response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ArtifactStatusRT"}, "example": {"account": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "cache-of": "Numquam aut.", "created-at": "1996-12-19T16:39:57-08:00", "data-href": "https://api.ivcap.net/1/artifacts/.../blob", "etag": "Magni asperiores illo et ut.", "id": "urn:ivcap:Artifact ID:123e4567-e89b-12d3-a456-426614174000", "last-modified-at": "1996-12-19T16:39:57-08:00", "links": [{"href": "https://api.ivcap.net/1/....", "rel": "self", "type": "application/json"}, {"href": "https://api.ivcap.net/1/openapi/openapi3.json#/components/schemas/user", "rel": "describedBy", "type": "application/json"}], "mime-type": "Qui quidem architecto dolore inventore consequuntur vero.", "name": "Fire risk per LGA", "policy": "urn:ivcap:policy:123e4567-e89b-12d3-a456-426614174000", "size": 5113521523588006411, "status": "partial"}}}}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}, "example": {"id": "123e4567-e89b-12d3-a456-426614174000", "message": "Qui qui."}}}}, "404": {"description": "not-found: artifacts not found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ResourceNotFoundT"}, "example": {"id": "cayp:type:123e4567-e89b-12d3-a456-426614174000", "message": "Resource 123...00 not found"}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}, "example": {"message": "Quo similique et."}}}}}, "security": [{"jwt_header_Authorization": ["consumer:read"]}]}}, "/1/aspects": {"get": {"tags": ["aspect"], "summary": "list aspect", "description": "Return a list of aspect aspects.", "operationId": "aspect#list", "parameters": [{"name": "entity", "in": "query", "description": "Optional entity for which to request aspects", "allowEmptyValue": true, "schema": {"type": "string", "description": "Optional entity for which to request aspects", "example": "urn:blue:image.collA#12", "format": "uri"}, "example": "urn:blue:image.collA#12"}, {"name": "schema", "in": "query", "description": "Schema prefix using '%' as wildcard indicator", "allowEmptyValue": true, "schema": {"type": "string", "description": "Schema prefix using '%' as wildcard indicator", "example": "urn:blue:schema:image%"}, "example": "urn:blue:schema:image%"}, {"name": "content-path", "in": "query", "description": "To learn more about the supported format, see\n\t\t\t\t\thttps://www.postgresql.org/docs/current/datatype-json.html#DATATYPE-JSONPATH", "allowEmptyValue": true, "schema": {"type": "string", "description": "To learn more about the supported format, see\n\t\t\t\t\thttps://www.postgresql.org/docs/current/datatype-json.html#DATATYPE-JSONPATH", "example": "$.images[*] ? (@.size > 10000)"}, "example": "$.images[*] ? (@.size > 10000)"}, {"name": "at-time", "in": "query", "description": "Return aspect which where valid at that time [now]", "allowEmptyValue": true, "schema": {"type": "string", "description": "Return aspect which where valid at that time [now]", "example": "1996-12-19T16:39:57-08:00", "format": "date-time"}, "example": "1996-12-19T16:39:57-08:00"}, {"name": "limit", "in": "query", "description": "The 'limit' system query option requests the number of items in the queried\n\t\t\t\tcollection to be included in the result.", "allowEmptyValue": true, "schema": {"type": "integer", "description": "The 'limit' system query option requests the number of items in the queried\n\t\t\t\tcollection to be included in the result.", "default": 10, "example": 10, "format": "int64", "minimum": 1, "maximum": 50}, "example": 10}, {"name": "filter", "in": "query", "description": "The 'filter' system query option allows clients to filter a collection of\n\t\t\t\tresources that are addressed by a request URL. The expression specified with 'filter'\n\t\t\t\tis evaluated for each resource in the collection, and only items where the expression\n\t\t\t\tevaluates to true are included in the response.", "allowEmptyValue": true, "schema": {"type": "string", "description": "The 'filter' system query option allows clients to filter a collection of\n\t\t\t\tresources that are addressed by a request URL. The expression specified with 'filter'\n\t\t\t\tis evaluated for each resource in the collection, and only items where the expression\n\t\t\t\tevaluates to true are included in the response.", "default": "", "example": "FirstName eq 'Scott'"}, "example": "FirstName eq 'Scott'"}, {"name": "order-by", "in": "query", "description": "Optional comma-separated list of attributes to sort the list by.\n* entity\n* schema\n* content\n* policy\n* account\n* created_by\n* retracted_by\n* replaces\n* valid_from\n* valid_to\n", "allowEmptyValue": true, "schema": {"type": "string", "description": "Optional comma-separated list of attributes to sort the list by.\n* entity\n* schema\n* content\n* policy\n* account\n* created_by\n* retracted_by\n* replaces\n* valid_from\n* valid_to\n", "default": "valid_from", "example": "entity,created-at"}, "example": "entity,created-at"}, {"name": "order-direction", "in": "query", "description": "Set the sort direction 'ASC', 'DESC' for each order-by element.", "allowEmptyValue": true, "schema": {"type": "string", "description": "Set the sort direction 'ASC', 'DESC' for each order-by element.", "default": "DESC", "example": "Voluptatibus mollitia tempora dolores."}, "example": "Deleniti dolorem et pariatur omnis."}, {"name": "include-content", "in": "query", "description": "When set, also include aspect content in list.", "allowEmptyValue": true, "schema": {"type": "boolean", "description": "When set, also include aspect content in list.", "example": false}, "example": true}, {"name": "page", "in": "query", "description": "The content of '$page' is returned in the 'links' part of a previous query and\n\t\t\t\twill when set, ALL other parameters, except for 'limit' are ignored.", "allowEmptyValue": true, "schema": {"type": "string", "description": "The content of '$page' is returned in the 'links' part of a previous query and\n\t\t\t\twill when set, ALL other parameters, except for 'limit' are ignored.", "example": "gdsgQwhdgd"}, "example": "gdsgQwhdgd"}], "responses": {"200": {"description": "OK response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AspectListRT"}, "example": {"aspect-path": "Et dicta inventore aut est adipisci qui.", "at-time": "1996-12-19T16:39:57-08:00", "entity": "urn:blue:image.collA.12", "items": [{"content": "{...}", "content-type": "application/json", "entity": "urn:blue:transect.1", "id": "urn:ivcap:aspect:123e4567-e89b-12d3-a456-426614174000", "schema": "urn:blue:schema.image", "valid-from": "1996-12-19T16:39:57-08:00", "valid-to": "1996-12-19T16:39:57-08:00"}, {"content": "{...}", "content-type": "application/json", "entity": "urn:blue:transect.1", "id": "urn:ivcap:aspect:123e4567-e89b-12d3-a456-426614174000", "schema": "urn:blue:schema.image", "valid-from": "1996-12-19T16:39:57-08:00", "valid-to": "1996-12-19T16:39:57-08:00"}, {"content": "{...}", "content-type": "application/json", "entity": "urn:blue:transect.1", "id": "urn:ivcap:aspect:123e4567-e89b-12d3-a456-426614174000", "schema": "urn:blue:schema.image", "valid-from": "1996-12-19T16:39:57-08:00", "valid-to": "1996-12-19T16:39:57-08:00"}, {"content": "{...}", "content-type": "application/json", "entity": "urn:blue:transect.1", "id": "urn:ivcap:aspect:123e4567-e89b-12d3-a456-426614174000", "schema": "urn:blue:schema.image", "valid-from": "1996-12-19T16:39:57-08:00", "valid-to": "1996-12-19T16:39:57-08:00"}], "links": [{"href": "https://api.ivcap.net/1/....", "rel": "self", "type": "application/json"}, {"href": "https://api.ivcap.net/1/....", "rel": "first", "type": "application/json"}, {"href": "https://api.ivcap.net/1/....", "rel": "next", "type": "application/json"}, {"href": "https://api.ivcap.net/1/openapi/openapi3.json#/components/schemas/user", "rel": "describedBy", "type": "application/openapi3+json"}], "schema": "urn:blue:image,urn:blue:location"}}}}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}, "example": {"id": "123e4567-e89b-12d3-a456-426614174000", "message": "Facilis quia qui dolor."}}}}, "415": {"description": "unsupported-content-type: Format not supported by this method on the target resource", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}, "example": {"message": "Modi voluptas voluptates quaerat molestias ipsum."}}}}, "422": {"description": "invalid-parameter: Request contained semantically wrong parameter value", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidParameterValue"}, "example": {"message": "Quidem expedita.", "name": "Voluptatem at.", "value": "Aut aut eligendi soluta dolorum."}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}, "example": {"message": "Ad sed omnis repellendus."}}}}}, "security": [{"jwt_header_Authorization": ["consumer:read"]}]}, "post": {"tags": ["aspect"], "summary": "create aspect", "description": "Attach new aspect to an entity.", "operationId": "aspect#create", "parameters": [{"name": "entity", "in": "query", "description": "Entity to which attach aspect", "allowEmptyValue": true, "required": true, "schema": {"type": "string", "description": "Entity to which attach aspect", "example": "urn:some_ns:entity#123"}, "example": "urn:some_ns:entity#123"}, {"name": "schema", "in": "query", "description": "Schema of the aspect in payload", "allowEmptyValue": true, "required": true, "schema": {"type": "string", "description": "Schema of the aspect in payload", "example": "urn:some_ns:schema:some_schema.1"}, "example": "urn:some_ns:schema:some_schema.1"}, {"name": "policy", "in": "query", "description": "Policy guiding visibility and actions performed", "allowEmptyValue": true, "schema": {"type": "string", "description": "Policy guiding visibility and actions performed", "example": "urn:ivcap:policy:some_policy.1"}, "example": "urn:ivcap:policy:some_policy.1"}, {"name": "Content-Type", "in": "header", "description": "Content-Type header, MUST be of application/json.", "allowEmptyValue": true, "required": true, "schema": {"type": "string", "description": "Content-Type header, MUST be of application/json.", "example": "application/json"}, "example": "application/json"}], "requestBody": {"description": "Aspect content", "required": true, "content": {"application/json": {"schema": {"type": "string", "description": "Aspect content", "example": "{\"$schema\": ...}", "format": "binary"}, "example": "{\"$schema\": ...}"}}}, "responses": {"200": {"description": "OK response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AspectIDRT"}, "example": {"id": "urn:ivcap:aspect:123e4567-e89b-12d3-a456-426614174000"}}}}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}, "example": {"id": "123e4567-e89b-12d3-a456-426614174000", "message": "Sunt est quaerat voluptatum."}}}}, "422": {"description": "invalid-parameter: Request contained semantically wrong parameter value", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidParameterValue"}, "example": {"message": "Aut totam modi optio eius blanditiis.", "name": "Architecto officiis at expedita aut dignissimos voluptas.", "value": "Quaerat quia maiores sunt."}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}, "example": {"message": "Vel deleniti fugit."}}}}}, "security": [{"jwt_header_Authorization": ["consumer:write"]}]}, "put": {"tags": ["aspect"], "summary": "update aspect", "description": "A convenience method which will create a new aspect, but will also\n\t\tretract a potentially existing aspect for the same entity with the same schema.", "operationId": "aspect#update", "parameters": [{"name": "entity", "in": "query", "description": "Entity to which attach aspect", "allowEmptyValue": true, "required": true, "schema": {"type": "string", "description": "Entity to which attach aspect", "example": "urn:some_ns:schema:some_schema.1"}, "example": "urn:some_ns:schema:some_schema.1"}, {"name": "schema", "in": "query", "description": "Schema of aspect", "allowEmptyValue": true, "required": true, "schema": {"type": "string", "description": "Schema of aspect", "example": "urn:url:....", "format": "uri"}, "example": "urn:url:...."}, {"name": "Content-Type", "in": "header", "description": "Content-Type header, MUST be of application/json.", "allowEmptyValue": true, "required": true, "schema": {"type": "string", "description": "Content-Type header, MUST be of application/json.", "example": "application/json"}, "example": "application/json"}], "requestBody": {"description": "Aspect content", "required": true, "content": {"application/json": {"schema": {"type": "string", "description": "Aspect content", "example": "{\"$schema\": ...}", "format": "binary"}, "example": "{\"$schema\": ...}"}}}, "responses": {"200": {"description": "OK response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AspectIDRT"}, "example": {"id": "urn:ivcap:aspect:123e4567-e89b-12d3-a456-426614174000"}}}}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}, "example": {"id": "123e4567-e89b-12d3-a456-426614174000", "message": "Officiis enim quam blanditiis soluta."}}}}, "422": {"description": "invalid-parameter: Request contained semantically wrong parameter value", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidParameterValue"}, "example": {"message": "Assumenda hic dolorum vero.", "name": "Omnis fugit iste perspiciatis voluptatibus ea.", "value": "Impedit eum eum."}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}, "example": {"message": "Vel atque necessitatibus veniam."}}}}}, "security": [{"jwt_header_Authorization": ["consumer:write"]}]}}, "/1/aspects/{id}": {"delete": {"tags": ["aspect"], "summary": "retract aspect", "description": "Retract a previously created statement.", "operationId": "aspect#retract", "parameters": [{"name": "id", "in": "path", "description": "Aspect ID to restract", "required": true, "schema": {"type": "string", "description": "Aspect ID to restract", "example": "urn:ivcap:aspect#53cbb715-4ffd-4158-9e55-5d0ae69605a4", "format": "uri"}, "example": "urn:ivcap:aspect#53cbb715-4ffd-4158-9e55-5d0ae69605a4"}], "responses": {"204": {"description": "No Content response."}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}, "example": {"id": "123e4567-e89b-12d3-a456-426614174000", "message": "Officia minima aperiam consequatur."}}}}, "422": {"description": "invalid-parameter: Request contained semantically wrong parameter value", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidParameterValue"}, "example": {"message": "Voluptatum amet earum voluptas.", "name": "Eum maxime est ut esse unde libero.", "value": "Sint consectetur."}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}, "example": {"message": "Ut dolores deleniti nulla itaque."}}}}}, "security": [{"jwt_header_Authorization": ["consumer:write"]}]}, "get": {"tags": ["aspect"], "summary": "read aspect", "description": "Show aspects by ID", "operationId": "aspect#read", "parameters": [{"name": "id", "in": "path", "description": "ID of aspects to show", "required": true, "schema": {"type": "string", "description": "ID of aspects to show", "example": "urn:ivcap:aspects"}, "example": "urn:ivcap:aspects"}], "responses": {"200": {"description": "OK response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AspectRT"}, "example": {"asserter": "urn:ivcap:principal:123e4567-e89b-12d3-a456-426614174000", "content": "{...}", "content-type": "application/json", "entity": "urn:blue:transect.1", "id": "urn:ivcap:record:123e4567-e89b-12d3-a456-426614174000", "links": [{"href": "https://api.ivcap.net/1/....", "rel": "self", "type": "application/json"}, {"href": "https://api.ivcap.net/1/openapi/openapi3.json#/components/schemas/user", "rel": "describedBy", "type": "application/json"}], "retracter": "urn:ivcap:principal:123e4567-e89b-12d3-a456-426614174000", "schema": "urn:blue:schema.image", "valid-from": "1996-12-19T16:39:57-08:00", "valid-to": "1996-12-19T16:39:57-08:00"}}}}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}, "example": {"id": "123e4567-e89b-12d3-a456-426614174000", "message": "Veritatis illo suscipit fuga."}}}}, "404": {"description": "not-found: aspects not found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ResourceNotFoundT"}, "example": {"id": "cayp:type:123e4567-e89b-12d3-a456-426614174000", "message": "Resource 123...00 not found"}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}, "example": {"message": "Incidunt id error hic corrupti."}}}}}, "security": [{"jwt_header_Authorization": ["consumer:read"]}]}}, "/1/metadata": {"get": {"tags": ["metadata"], "summary": "list metadata", "description": "Return a list of metadata records.", "operationId": "metadata#list", "parameters": [{"name": "entity-id", "in": "query", "description": "Entity for which to request metadata", "allowEmptyValue": true, "schema": {"type": "string", "description": "Entity for which to request metadata", "example": "urn:blue:image.collA.12", "format": "uri"}, "example": "urn:blue:image.collA.12"}, {"name": "schema", "in": "query", "description": "Schema prefix using '%' as wildcard indicator", "allowEmptyValue": true, "schema": {"type": "string", "description": "Schema prefix using '%' as wildcard indicator", "example": "urn:blue:image%"}, "example": "urn:blue:image%"}, {"name": "aspect-path", "in": "query", "description": "To learn more about the supported format, see\n\t\t\t\t\thttps://www.postgresql.org/docs/current/datatype-json.html#DATATYPE-JSONPATH", "allowEmptyValue": true, "schema": {"type": "string", "description": "To learn more about the supported format, see\n\t\t\t\t\thttps://www.postgresql.org/docs/current/datatype-json.html#DATATYPE-JSONPATH", "example": "$.images[*] ? (@.size > 10000)"}, "example": "$.images[*] ? (@.size > 10000)"}, {"name": "at-time", "in": "query", "description": "Return metadata which where valid at that time [now]", "allowEmptyValue": true, "schema": {"type": "string", "description": "Return metadata which where valid at that time [now]", "example": "1996-12-19T16:39:57-08:00", "format": "date-time"}, "example": "1996-12-19T16:39:57-08:00"}, {"name": "limit", "in": "query", "description": "The 'limit' system query option requests the number of items in the queried\n\t\t\t\tcollection to be included in the result.", "allowEmptyValue": true, "schema": {"type": "integer", "description": "The 'limit' system query option requests the number of items in the queried\n\t\t\t\tcollection to be included in the result.", "default": 10, "example": 10, "format": "int64", "minimum": 1, "maximum": 50}, "example": 10}, {"name": "filter", "in": "query", "description": "The 'filter' system query option allows clients to filter a collection of\n\t\t\t\tresources that are addressed by a request URL. The expression specified with 'filter'\n\t\t\t\tis evaluated for each resource in the collection, and only items where the expression\n\t\t\t\tevaluates to true are included in the response.", "allowEmptyValue": true, "schema": {"type": "string", "description": "The 'filter' system query option allows clients to filter a collection of\n\t\t\t\tresources that are addressed by a request URL. The expression specified with 'filter'\n\t\t\t\tis evaluated for each resource in the collection, and only items where the expression\n\t\t\t\tevaluates to true are included in the response.", "default": "", "example": "filter=FirstName eq 'Scott'"}, "example": "filter=FirstName eq 'Scott'"}, {"name": "order-by", "in": "query", "description": "The 'orderby' query option allows clients to request resources in either\n\t\t\t\tascending order using asc or descending order using desc. If asc or desc not specified,\n\t\t\t\tthen the resources will be ordered in ascending order. The request below orders Trips on\n\t\t\t\tproperty EndsAt in descending order.", "allowEmptyValue": true, "schema": {"type": "string", "description": "The 'orderby' query option allows clients to request resources in either\n\t\t\t\tascending order using asc or descending order using desc. If asc or desc not specified,\n\t\t\t\tthen the resources will be ordered in ascending order. The request below orders Trips on\n\t\t\t\tproperty EndsAt in descending order.", "default": "", "example": "orderby=EndsAt"}, "example": "orderby=EndsAt"}, {"name": "order-desc", "in": "query", "description": "When set order result in descending order. Ascending order is the default.", "allowEmptyValue": true, "schema": {"type": "boolean", "description": "When set order result in descending order. Ascending order is the default.", "example": true}, "example": true}, {"name": "include-content", "in": "query", "description": "When set, also include aspect content in list.", "allowEmptyValue": true, "schema": {"type": "boolean", "description": "When set, also include aspect content in list.", "default": true, "example": true}, "example": false}, {"name": "page", "in": "query", "description": "The content of '$page' is returned in the 'links' part of a previous query and\n\t\t\t\twill when set, ALL other parameters, except for 'limit' are ignored.", "allowEmptyValue": true, "schema": {"type": "string", "description": "The content of '$page' is returned in the 'links' part of a previous query and\n\t\t\t\twill when set, ALL other parameters, except for 'limit' are ignored.", "example": "gdsgQwhdgd"}, "example": "gdsgQwhdgd"}], "responses": {"200": {"description": "OK response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ListMetaRT"}, "example": {"aspect-path": "Voluptate dolor eligendi.", "at-time": "1996-12-19T16:39:57-08:00", "entity": "urn:blue:image.collA.12", "items": [{"aspect": "{...}", "aspect-context": "{...}", "entity": "urn:blue:transect.1", "id": "urn:ivcap:metadata:123e4567-e89b-12d3-a456-426614174000", "schema": "urn:blue:schema.image"}, {"aspect": "{...}", "aspect-context": "{...}", "entity": "urn:blue:transect.1", "id": "urn:ivcap:metadata:123e4567-e89b-12d3-a456-426614174000", "schema": "urn:blue:schema.image"}, {"aspect": "{...}", "aspect-context": "{...}", "entity": "urn:blue:transect.1", "id": "urn:ivcap:metadata:123e4567-e89b-12d3-a456-426614174000", "schema": "urn:blue:schema.image"}, {"aspect": "{...}", "aspect-context": "{...}", "entity": "urn:blue:transect.1", "id": "urn:ivcap:metadata:123e4567-e89b-12d3-a456-426614174000", "schema": "urn:blue:schema.image"}], "links": [{"href": "https://api.ivcap.net/1/....", "rel": "self", "type": "application/json"}, {"href": "https://api.ivcap.net/1/....", "rel": "first", "type": "application/json"}, {"href": "https://api.ivcap.net/1/....", "rel": "next", "type": "application/json"}, {"href": "https://api.ivcap.net/1/openapi/openapi3.json#/components/schemas/user", "rel": "describedBy", "type": "application/openapi3+json"}], "schema": "urn:blue:image,urn:blue:location"}}}}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}, "example": {"id": "123e4567-e89b-12d3-a456-426614174000", "message": "Expedita magni sapiente."}}}}, "422": {"description": "invalid-parameter: Request contained semantically wrong parameter value", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidParameterValue"}, "example": {"message": "Repellat enim.", "name": "Quia quam fugit aspernatur non nisi.", "value": "Necessitatibus cum."}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}, "example": {"message": "Dolor aut quia fugiat quis."}}}}}, "security": [{"jwt_header_Authorization": ["consumer:read"]}]}, "post": {"tags": ["metadata"], "summary": "add metadata", "description": "Attach new metadata to an entity.", "operationId": "metadata#add", "parameters": [{"name": "entity-id", "in": "query", "description": "Entity to which attach metadata", "allowEmptyValue": true, "required": true, "schema": {"type": "string", "description": "Entity to which attach metadata", "example": "http://faymraz.info/bertha", "format": "uri"}, "example": "http://reinger.org/everardo.parker"}, {"name": "schema", "in": "query", "description": "Schema of metadata", "allowEmptyValue": true, "required": true, "schema": {"type": "string", "description": "Schema of metadata", "example": "http://goyette.name/veronica_mraz", "format": "uri"}, "example": "http://lindgren.info/mikel.reinger"}, {"name": "policy-id", "in": "query", "description": "Policy guiding visibility and actions performed", "allowEmptyValue": true, "schema": {"type": "string", "description": "Policy guiding visibility and actions performed", "example": "http://langoshmaggio.name/sven_kuhic", "format": "uri"}, "example": "http://altenwerthswift.net/luisa"}, {"name": "Content-Type", "in": "header", "description": "Content-Type header, MUST be of application/json.", "allowEmptyValue": true, "required": true, "schema": {"type": "string", "description": "Content-Type header, MUST be of application/json.", "example": "application/json"}, "example": "application/json"}], "requestBody": {"description": "Aspect content", "required": true, "content": {"application/json": {"schema": {"type": "string", "description": "Aspect content", "example": "{\"$schema\": ...}", "format": "binary"}, "example": "{\"$schema\": ...}"}}}, "responses": {"200": {"description": "OK response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AddMetaRT"}, "example": {"record-id": "urn:ivcap:record.123e4567-e89b-12d3-a456-426614174000"}}}}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}, "example": {"id": "123e4567-e89b-12d3-a456-426614174000", "message": "Officia recusandae voluptas facilis ut maxime."}}}}, "422": {"description": "invalid-parameter: Request contained semantically wrong parameter value", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidParameterValue"}, "example": {"message": "Deleniti sit qui non deserunt sint vel.", "name": "Iure ut dicta.", "value": "Vel est natus quae sit quidem corrupti."}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}, "example": {"message": "Minima repellat ut et."}}}}}, "security": [{"jwt_header_Authorization": ["consumer:write"]}]}}, "/1/metadata/{id}": {"delete": {"tags": ["metadata"], "summary": "revoke metadata", "description": "Retract a previously created statement.", "operationId": "metadata#revoke", "parameters": [{"name": "id", "in": "path", "description": "Record ID to restract", "required": true, "schema": {"type": "string", "description": "Record ID to restract", "example": "urn:ivcap:record.53cbb715-4ffd-4158-9e55-5d0ae69605a4", "format": "uri"}, "example": "urn:ivcap:record.53cbb715-4ffd-4158-9e55-5d0ae69605a4"}], "responses": {"204": {"description": "No Content response."}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}, "example": {"id": "123e4567-e89b-12d3-a456-426614174000", "message": "Quod nulla ea ut amet ut."}}}}, "422": {"description": "invalid-parameter: Request contained semantically wrong parameter value", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidParameterValue"}, "example": {"message": "Qui occaecati aperiam quo fugiat non.", "name": "Nihil voluptatem ea unde at quis sit.", "value": "Vel molestias."}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}, "example": {"message": "Rem perferendis eos architecto repellat corrupti doloribus."}}}}}, "security": [{"jwt_header_Authorization": ["consumer:write"]}]}, "get": {"tags": ["metadata"], "summary": "read metadata", "description": "Show metadata by ID", "operationId": "metadata#read", "parameters": [{"name": "id", "in": "path", "description": "ID of metadata to show", "required": true, "schema": {"type": "string", "description": "ID of metadata to show", "example": "urn:ivcap:metadata"}, "example": "urn:ivcap:metadata"}], "responses": {"200": {"description": "OK response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/MetadataRecordRT"}, "example": {"aspect": "{...}", "asserter": "urn:ivcap:principal:123e4567-e89b-12d3-a456-426614174000", "entity": "urn:blue:transect.1", "id": "urn:ivcap:record:123e4567-e89b-12d3-a456-426614174000", "links": [{"href": "https://api.ivcap.net/1/....", "rel": "self", "type": "application/json"}, {"href": "https://api.ivcap.net/1/openapi/openapi3.json#/components/schemas/user", "rel": "describedBy", "type": "application/json"}], "revoker": "urn:ivcap:principal:123e4567-e89b-12d3-a456-426614174000", "schema": "urn:blue:schema.image", "valid-from": "1996-12-19T16:39:57-08:00", "valid-to": "1996-12-19T16:39:57-08:00"}}}}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}, "example": {"id": "123e4567-e89b-12d3-a456-426614174000", "message": "In unde soluta alias quibusdam accusantium."}}}}, "404": {"description": "not-found: metadata not found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ResourceNotFoundT"}, "example": {"id": "cayp:type:123e4567-e89b-12d3-a456-426614174000", "message": "Resource 123...00 not found"}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}, "example": {"message": "Amet blanditiis voluptas nemo est dolore."}}}}}, "security": [{"jwt_header_Authorization": ["consumer:read"]}]}, "put": {"tags": ["metadata"], "summary": "update_record metadata", "description": "Revoke this record and create a new one with the information provided.\n\t\t\tFor any field not provided, the value from the current record is used.", "operationId": "metadata#update_record", "parameters": [{"name": "entity-id", "in": "query", "description": "Entity to which attach metadata", "allowEmptyValue": true, "schema": {"type": "string", "description": "Entity to which attach metadata", "example": "urn:url:....", "format": "uri"}, "example": "urn:url:...."}, {"name": "schema", "in": "query", "description": "Schema of metadata", "allowEmptyValue": true, "schema": {"type": "string", "description": "Schema of metadata", "example": "urn:url:....", "format": "uri"}, "example": "urn:url:...."}, {"name": "policy-id", "in": "query", "description": "Policy guiding visibility and actions performed", "allowEmptyValue": true, "schema": {"type": "string", "description": "Policy guiding visibility and actions performed", "example": "http://dooleyblock.name/tod", "format": "uri"}, "example": "http://monahan.name/ora.collier"}, {"name": "id", "in": "path", "description": "Record ID to update", "required": true, "schema": {"type": "string", "description": "Record ID to update", "example": "urn:ivcap:record.53cbb715-4ffd-4158-9e55-5d0ae69605a4", "format": "uri"}, "example": "urn:ivcap:record.53cbb715-4ffd-4158-9e55-5d0ae69605a4"}, {"name": "Content-Type", "in": "header", "description": "Content-Type header, MUST be of application/json.", "allowEmptyValue": true, "schema": {"type": "string", "description": "Content-Type header, MUST be of application/json.", "example": "application/json"}, "example": "application/json"}], "requestBody": {"description": "Aspect content", "required": true, "content": {"application/json": {"schema": {"type": "string", "description": "Aspect content", "example": "{\"$schema\": ...}", "format": "binary"}, "example": "{\"$schema\": ...}"}}}, "responses": {"200": {"description": "OK response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AddMetaRT"}, "example": {"record-id": "urn:ivcap:record.123e4567-e89b-12d3-a456-426614174000"}}}}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}, "example": {"id": "123e4567-e89b-12d3-a456-426614174000", "message": "Explicabo rerum aut."}}}}, "422": {"description": "invalid-parameter: Request contained semantically wrong parameter value", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidParameterValue"}, "example": {"message": "Quo commodi sapiente cum odit.", "name": "Nihil cumque.", "value": "Et minima dolore sed."}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}, "example": {"message": "Alias non expedita aut quisquam ipsam odio."}}}}}, "security": [{"jwt_header_Authorization": ["consumer:write"]}]}}, "/1/openapi/openapi3.json": {"get": {"tags": ["openapi"], "summary": "Download /public/openapi3.json", "description": "JSON document containing the API swagger definition", "operationId": "openapi#/1/openapi/openapi3.json", "responses": {"200": {"description": "File downloaded"}}}}, "/1/orders": {"get": {"tags": ["order"], "summary": "list order", "description": "list orders", "operationId": "order#list", "parameters": [{"name": "limit", "in": "query", "description": "The $limit system query option requests the number of items in the queried\n\t\t\t\tcollection to be included in the result.", "allowEmptyValue": true, "schema": {"type": "integer", "description": "The $limit system query option requests the number of items in the queried\n\t\t\t\tcollection to be included in the result.", "default": 10, "example": 10, "format": "int64", "minimum": 1, "maximum": 50}, "example": 10}, {"name": "page", "in": "query", "description": "The content of 'page' is returned in the 'links' part of a previous query and\n\t\t\t\twill when set, ALL other parameters, except for 'limit' are ignored.", "allowEmptyValue": true, "schema": {"type": "string", "description": "The content of 'page' is returned in the 'links' part of a previous query and\n\t\t\t\twill when set, ALL other parameters, except for 'limit' are ignored.", "example": "gdsgQwhdgd"}, "example": "gdsgQwhdgd"}, {"name": "filter", "in": "query", "description": "The 'filter' system query option allows clients to filter a collection of\n\t\t\t\tresources that are addressed by a request URL. The expression specified with 'filter'\n\t\t\t\tis evaluated for each resource in the collection, and only items where the expression\n\t\t\t\tevaluates to true are included in the response.", "allowEmptyValue": true, "schema": {"type": "string", "description": "The 'filter' system query option allows clients to filter a collection of\n\t\t\t\tresources that are addressed by a request URL. The expression specified with 'filter'\n\t\t\t\tis evaluated for each resource in the collection, and only items where the expression\n\t\t\t\tevaluates to true are included in the response.", "example": "name ~= 'Scott%'"}, "example": "name ~= 'Scott%'"}, {"name": "order-by", "in": "query", "description": "The 'orderby' query option allows clients to request resources in either\n\t\t\t\tascending order using asc or descending order using desc. If asc or desc not specified,\n\t\t\t\tthen the resources will be ordered in ascending order. The request below orders Trips on\n\t\t\t\tproperty EndsAt in descending order.", "allowEmptyValue": true, "schema": {"type": "string", "description": "The 'orderby' query option allows clients to request resources in either\n\t\t\t\tascending order using asc or descending order using desc. If asc or desc not specified,\n\t\t\t\tthen the resources will be ordered in ascending order. The request below orders Trips on\n\t\t\t\tproperty EndsAt in descending order.", "example": "orderby=EndsAt"}, "example": "orderby=EndsAt"}, {"name": "order-desc", "in": "query", "description": "When set order result in descending order. Ascending order is the lt.", "allowEmptyValue": true, "schema": {"type": "boolean", "description": "When set order result in descending order. Ascending order is the lt.", "default": false, "example": true}, "example": false}, {"name": "at-time", "in": "query", "description": "Return the state of the respective resources at that time [now]", "allowEmptyValue": true, "schema": {"type": "string", "description": "Return the state of the respective resources at that time [now]", "example": "1996-12-19T16:39:57-08:00", "format": "date-time"}, "example": "1996-12-19T16:39:57-08:00"}], "responses": {"200": {"description": "OK response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/OrderListRT"}, "example": {"at-time": "1996-12-19T16:39:57-08:00", "items": [{"account": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "finished-at": "1996-12-19T16:39:57-08:00", "href": "https://api.ivcap.net/1/orders/...", "id": "urn:ivcap:order:123e4567-e89b-12d3-a456-426614174000", "name": "Fire risk for Lot2", "ordered-at": "1996-12-19T16:39:57-08:00", "service": "urn:ivcap:service:123e4567-e89b-12d3-a456-426614174000", "started-at": "1996-12-19T16:39:57-08:00", "status": "error"}, {"account": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "finished-at": "1996-12-19T16:39:57-08:00", "href": "https://api.ivcap.net/1/orders/...", "id": "urn:ivcap:order:123e4567-e89b-12d3-a456-426614174000", "name": "Fire risk for Lot2", "ordered-at": "1996-12-19T16:39:57-08:00", "service": "urn:ivcap:service:123e4567-e89b-12d3-a456-426614174000", "started-at": "1996-12-19T16:39:57-08:00", "status": "error"}, {"account": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "finished-at": "1996-12-19T16:39:57-08:00", "href": "https://api.ivcap.net/1/orders/...", "id": "urn:ivcap:order:123e4567-e89b-12d3-a456-426614174000", "name": "Fire risk for Lot2", "ordered-at": "1996-12-19T16:39:57-08:00", "service": "urn:ivcap:service:123e4567-e89b-12d3-a456-426614174000", "started-at": "1996-12-19T16:39:57-08:00", "status": "error"}, {"account": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "finished-at": "1996-12-19T16:39:57-08:00", "href": "https://api.ivcap.net/1/orders/...", "id": "urn:ivcap:order:123e4567-e89b-12d3-a456-426614174000", "name": "Fire risk for Lot2", "ordered-at": "1996-12-19T16:39:57-08:00", "service": "urn:ivcap:service:123e4567-e89b-12d3-a456-426614174000", "started-at": "1996-12-19T16:39:57-08:00", "status": "error"}], "links": [{"href": "https://api.ivcap.net/1/....", "rel": "self", "type": "application/json"}, {"href": "https://api.ivcap.net/1/....", "rel": "first", "type": "application/json"}, {"href": "https://api.ivcap.net/1/....", "rel": "next", "type": "application/json"}, {"href": "https://api.ivcap.net/1/openapi/openapi3.json#/components/schemas/user", "rel": "describedBy", "type": "application/openapi3+json"}]}}}}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}, "example": {"id": "123e4567-e89b-12d3-a456-426614174000", "message": "Reiciendis est incidunt."}}}}, "422": {"description": "invalid-parameter: Request contained semantically wrong parameter value", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidParameterValue"}, "example": {"message": "Et commodi dolores ea.", "name": "Laboriosam consequatur sed natus ut soluta qui.", "value": "Id iure soluta."}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}, "example": {"message": "Rerum nemo quidem."}}}}}, "security": [{"jwt_header_Authorization": ["consumer:read"]}]}, "post": {"tags": ["order"], "summary": "create order", "description": "Create a new orders and return its status.", "operationId": "order#create", "requestBody": {"description": "New orders description", "required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/OrderRequestT"}, "example": {"name": "Fire risk for Lot2", "parameters": [{"name": "region", "value": "Upper Valley"}, {"name": "threshold", "value": "10"}], "policy": "urn:ivcap:policy:123e4567-e89b-12d3-a456-426614174000", "service": "urn:ivcap:service:123e4567-e89b-12d3-a456-426614174000", "tags": ["tag1", "tag2"]}}}}, "responses": {"200": {"description": "OK response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/OrderStatusRT"}, "example": {"account": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "finished-at": "1996-12-19T16:39:57-08:00", "id": "urn:ivcap:order:123e4567-e89b-12d3-a456-426614174000", "links": [{"href": "https://api.ivcap.net/1/....", "rel": "self", "type": "application/json"}, {"href": "https://api.ivcap.net/1/openapi/openapi3.json#/components/schemas/user", "rel": "describedBy", "type": "application/json"}], "name": "Fire risk for Lot2", "ordered-at": "1996-12-19T16:39:57-08:00", "parameters": [{"name": "region", "value": "Upper Valley"}, {"name": "threshold", "value": "10"}], "products": {"items": [{"data-href": "https:/.../1/artifacts/0000-00001220/blob", "href": "https:/.../1/artifacts/0000-00001220", "mime-type": "image/geo+tiff", "name": "fire risk map", "size": 1234963}], "links": [{"href": "https://api.ivcap.net/1/....", "rel": "next"}]}, "service": "urn:ivcap:service:123e4567-e89b-12d3-a456-426614174000", "started-at": "1996-12-19T16:39:57-08:00", "status": "executing", "tags": ["tag1", "tag2"]}}}}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}, "example": {"id": "123e4567-e89b-12d3-a456-426614174000", "message": "Qui repellendus molestias culpa aut assumenda."}}}}, "404": {"description": "not-found:  not found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ResourceNotFoundT"}, "example": {"id": "cayp:type:123e4567-e89b-12d3-a456-426614174000", "message": "Resource 123...00 not found"}}}}, "422": {"description": "invalid-parameter: Request contained semantically wrong parameter value", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidParameterValue"}, "example": {"message": "Incidunt dolorum.", "name": "Magni ea dolore et soluta temporibus vero.", "value": "Consectetur veritatis vero saepe debitis."}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}, "example": {"message": "Quis aut quia veniam."}}}}, "503": {"description": "not-available: service currently not available"}}, "security": [{"jwt_header_Authorization": ["consumer:write"]}]}}, "/1/orders/{id}": {"get": {"tags": ["order"], "summary": "read order", "description": "Show orders by ID", "operationId": "order#read", "parameters": [{"name": "id", "in": "path", "description": "ID of orders to show", "required": true, "schema": {"type": "string", "description": "ID of orders to show", "example": "urn:ivcap:orders"}, "example": "urn:ivcap:orders"}], "responses": {"200": {"description": "OK response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/OrderStatusRT"}, "example": {"account": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "finished-at": "1996-12-19T16:39:57-08:00", "id": "urn:ivcap:order:123e4567-e89b-12d3-a456-426614174000", "links": [{"href": "https://api.ivcap.net/1/....", "rel": "self", "type": "application/json"}, {"href": "https://api.ivcap.net/1/openapi/openapi3.json#/components/schemas/user", "rel": "describedBy", "type": "application/json"}], "name": "Fire risk for Lot2", "ordered-at": "1996-12-19T16:39:57-08:00", "parameters": [{"name": "region", "value": "Upper Valley"}, {"name": "threshold", "value": "10"}], "products": {"items": [{"data-href": "https:/.../1/artifacts/0000-00001220/blob", "href": "https:/.../1/artifacts/0000-00001220", "mime-type": "image/geo+tiff", "name": "fire risk map", "size": 1234963}], "links": [{"href": "https://api.ivcap.net/1/....", "rel": "next"}]}, "service": "urn:ivcap:service:123e4567-e89b-12d3-a456-426614174000", "started-at": "1996-12-19T16:39:57-08:00", "status": "unknown", "tags": ["tag1", "tag2"]}}}}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}, "example": {"id": "123e4567-e89b-12d3-a456-426614174000", "message": "Rerum dignissimos qui expedita quia deserunt veritatis."}}}}, "404": {"description": "not-found: orders not found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ResourceNotFoundT"}, "example": {"id": "cayp:type:123e4567-e89b-12d3-a456-426614174000", "message": "Resource 123...00 not found"}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}, "example": {"message": "Voluptas odit aut quod nihil aperiam eligendi."}}}}}, "security": [{"jwt_header_Authorization": ["consumer:read"]}]}}, "/1/orders/{orderID}/logs": {"get": {"tags": ["order"], "summary": "logs order", "description": "download order logs", "operationId": "order#logs", "parameters": [{"name": "orderID", "in": "path", "description": "Reference to order requested", "required": true, "schema": {"type": "string", "description": "Reference to order requested", "example": "urn:ivcap:order:123e4567-e89b-12d3-a456-426614174000", "format": "uri"}, "example": "urn:ivcap:order:123e4567-e89b-12d3-a456-426614174000"}, {"name": "from", "in": "query", "description": "From unix time, seconds since 1970-01-01", "allowEmptyValue": true, "schema": {"type": "integer", "description": "From unix time, seconds since 1970-01-01", "example": 1257894000, "format": "int64"}, "example": 1257894000}, {"name": "to", "in": "query", "description": "To unix time, seconds since 1970-01-01", "allowEmptyValue": true, "schema": {"type": "integer", "description": "To unix time, seconds since 1970-01-01", "example": 1257894000, "format": "int64"}, "example": 1257894000}], "responses": {"200": {"description": "OK response.", "content": {"application/json": {"schema": {"type": "string", "format": "binary"}}}}, "400": {"description": "invalid-credential: Provided credential is not valid", "content": {"application/json": {"schema": {"type": "string", "format": "binary"}}}}, "401": {"description": "not-authorized: unauthorized access request", "content": {"application/json": {"schema": {"type": "string", "format": "binary"}}}}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}, "example": {"id": "123e4567-e89b-12d3-a456-426614174000", "message": "Necessitatibus perferendis quo omnis voluptas."}}}}, "404": {"description": "not-found:  not found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ResourceNotFoundT"}, "example": {"id": "cayp:type:123e4567-e89b-12d3-a456-426614174000", "message": "Resource 123...00 not found"}}}}, "422": {"description": "invalid-parameter: Request contained semantically wrong parameter value", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidParameterValue"}, "example": {"message": "Voluptatem explicabo aut adipisci.", "name": "Alias aut voluptas molestiae.", "value": "Officiis consequatur corporis autem."}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}, "example": {"message": "Laboriosam sint sit cumque."}}}}}, "security": [{"jwt_header_Authorization": ["consumer:read"]}]}}, "/1/orders/{orderID}/top": {"get": {"tags": ["order"], "summary": "top order", "description": "top order resources", "operationId": "order#top", "parameters": [{"name": "orderID", "in": "path", "description": "Reference to order requested", "required": true, "schema": {"type": "string", "description": "Reference to order requested", "example": "urn:ivcap:order:123e4567-e89b-12d3-a456-426614174000", "format": "uri"}, "example": "urn:ivcap:order:123e4567-e89b-12d3-a456-426614174000"}], "responses": {"200": {"description": "OK response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/OrderTopResultItemCollection"}, "example": [{"container": "Quia itaque tempora.", "cpu": "Est soluta ut assumenda.", "ephemeral-storage": "Accusamus ea et recusandae.", "memory": "Non dolorum nihil esse officia a.", "storage": "Officiis et ea saepe."}, {"container": "Quia itaque tempora.", "cpu": "Est soluta ut assumenda.", "ephemeral-storage": "Accusamus ea et recusandae.", "memory": "Non dolorum nihil esse officia a.", "storage": "Officiis et ea saepe."}, {"container": "Quia itaque tempora.", "cpu": "Est soluta ut assumenda.", "ephemeral-storage": "Accusamus ea et recusandae.", "memory": "Non dolorum nihil esse officia a.", "storage": "Officiis et ea saepe."}]}}}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}, "example": {"id": "123e4567-e89b-12d3-a456-426614174000", "message": "Ut in distinctio."}}}}, "404": {"description": "not-found:  not found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ResourceNotFoundT"}, "example": {"id": "cayp:type:123e4567-e89b-12d3-a456-426614174000", "message": "Resource 123...00 not found"}}}}, "422": {"description": "invalid-parameter: Request contained semantically wrong parameter value", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidParameterValue"}, "example": {"message": "Culpa nulla facilis voluptatem.", "name": "Non eius perferendis culpa voluptates fuga.", "value": "Eos officiis."}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}, "example": {"message": "Aut voluptas deserunt."}}}}}, "security": [{"jwt_header_Authorization": ["consumer:read"]}]}}, "/1/services": {"get": {"tags": ["service"], "summary": "list service", "description": "list services", "operationId": "service#list", "parameters": [{"name": "limit", "in": "query", "description": "The $limit system query option requests the number of items in the queried\n\t\t\t\tcollection to be included in the result.", "allowEmptyValue": true, "schema": {"type": "integer", "description": "The $limit system query option requests the number of items in the queried\n\t\t\t\tcollection to be included in the result.", "default": 10, "example": 10, "format": "int64", "minimum": 1, "maximum": 50}, "example": 10}, {"name": "page", "in": "query", "description": "The content of 'page' is returned in the 'links' part of a previous query and\n\t\t\t\twill when set, ALL other parameters, except for 'limit' are ignored.", "allowEmptyValue": true, "schema": {"type": "string", "description": "The content of 'page' is returned in the 'links' part of a previous query and\n\t\t\t\twill when set, ALL other parameters, except for 'limit' are ignored.", "example": "gdsgQwhdgd"}, "example": "gdsgQwhdgd"}, {"name": "filter", "in": "query", "description": "The 'filter' system query option allows clients to filter a collection of\n\t\t\t\tresources that are addressed by a request URL. The expression specified with 'filter'\n\t\t\t\tis evaluated for each resource in the collection, and only items where the expression\n\t\t\t\tevaluates to true are included in the response.", "allowEmptyValue": true, "schema": {"type": "string", "description": "The 'filter' system query option allows clients to filter a collection of\n\t\t\t\tresources that are addressed by a request URL. The expression specified with 'filter'\n\t\t\t\tis evaluated for each resource in the collection, and only items where the expression\n\t\t\t\tevaluates to true are included in the response.", "example": "name ~= 'Scott%'"}, "example": "name ~= 'Scott%'"}, {"name": "order-by", "in": "query", "description": "The 'orderby' query option allows clients to request resources in either\n\t\t\t\tascending order using asc or descending order using desc. If asc or desc not specified,\n\t\t\t\tthen the resources will be ordered in ascending order. The request below orders Trips on\n\t\t\t\tproperty EndsAt in descending order.", "allowEmptyValue": true, "schema": {"type": "string", "description": "The 'orderby' query option allows clients to request resources in either\n\t\t\t\tascending order using asc or descending order using desc. If asc or desc not specified,\n\t\t\t\tthen the resources will be ordered in ascending order. The request below orders Trips on\n\t\t\t\tproperty EndsAt in descending order.", "example": "orderby=EndsAt"}, "example": "orderby=EndsAt"}, {"name": "order-desc", "in": "query", "description": "When set order result in descending order. Ascending order is the lt.", "allowEmptyValue": true, "schema": {"type": "boolean", "description": "When set order result in descending order. Ascending order is the lt.", "default": false, "example": false}, "example": false}, {"name": "at-time", "in": "query", "description": "Return the state of the respective resources at that time [now]", "allowEmptyValue": true, "schema": {"type": "string", "description": "Return the state of the respective resources at that time [now]", "example": "1996-12-19T16:39:57-08:00", "format": "date-time"}, "example": "1996-12-19T16:39:57-08:00"}], "responses": {"200": {"description": "OK response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ServiceListRT"}, "example": {"at-time": "1996-12-19T16:39:57-08:00", "items": [{"account": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "description": "Some lengthy description of fire risk", "href": "https://api.ivcap.net/1/services/...", "id": "urn:ivcap:service:123e4567-e89b-12d3-a456-426614174000", "name": "Fire risk for region"}, {"account": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "description": "Some lengthy description of fire risk", "href": "https://api.ivcap.net/1/services/...", "id": "urn:ivcap:service:123e4567-e89b-12d3-a456-426614174000", "name": "Fire risk for region"}, {"account": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "description": "Some lengthy description of fire risk", "href": "https://api.ivcap.net/1/services/...", "id": "urn:ivcap:service:123e4567-e89b-12d3-a456-426614174000", "name": "Fire risk for region"}, {"account": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "description": "Some lengthy description of fire risk", "href": "https://api.ivcap.net/1/services/...", "id": "urn:ivcap:service:123e4567-e89b-12d3-a456-426614174000", "name": "Fire risk for region"}], "links": [{"href": "https://api.ivcap.net/1/....", "rel": "self", "type": "application/json"}, {"href": "https://api.ivcap.net/1/....", "rel": "first", "type": "application/json"}, {"href": "https://api.ivcap.net/1/....", "rel": "next", "type": "application/json"}, {"href": "https://api.ivcap.net/1/openapi/openapi3.json#/components/schemas/user", "rel": "describedBy", "type": "application/openapi3+json"}]}}}}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}, "example": {"id": "123e4567-e89b-12d3-a456-426614174000", "message": "Sint aut ut magni voluptatem quae."}}}}, "422": {"description": "invalid-parameter: Request contained semantically wrong parameter value", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidParameterValue"}, "example": {"message": "Porro ipsum autem possimus.", "name": "Repellat molestias et quam minus voluptatum qui.", "value": "Ipsam est hic voluptates."}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}, "example": {"message": "Numquam dolorem eum."}}}}}, "security": [{"jwt_header_Authorization": ["consumer:read"]}]}, "post": {"tags": ["service"], "summary": "create_service service", "description": "Create a new services and return its status.", "operationId": "service#create_service", "requestBody": {"description": "New services description", "required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ServiceDefinitionT"}, "example": {"banner": "http://block.name/makenna_wilderman", "description": "This service ...", "name": "Fire risk for Lot2", "parameters": [{"description": "The name of the region as according to ...", "label": "Region Name", "name": "region", "type": "string"}, {"label": "Rainfall/month threshold", "name": "threshold", "type": "float", "unit": "m"}], "policy": "urn:ivcap:policy:123e4567-e89b-12d3-a456-426614174000", "references": [{"title": "Quos ab et sed aperiam a.", "uri": "http://dietrich.org/jeremie"}, {"title": "Quos ab et sed aperiam a.", "uri": "http://dietrich.org/jeremie"}], "tags": ["tag1", "tag2"], "workflow": {"argo": "Voluptas doloribus optio.", "basic": {"command": ["/bin/sh", "-c", "echo $PATH"], "cpu": {"limit": "100m", "request": "10m"}, "ephemeral-storage": {"limit": "4Gi", "request": "2Gi"}, "gpu-number": 2, "gpu-type": "nvidia-tesla-t4", "image": "alpine", "memory": {"limit": "100Mi", "request": "10Mi"}, "volume-mounts": [{"mount-path": "Nemo occaecati amet et consectetur.", "name": "Nisi dolorum corporis eum et voluptas vitae.", "read-only": true}, {"mount-path": "Nemo occaecati amet et consectetur.", "name": "Nisi dolorum corporis eum et voluptas vitae.", "read-only": true}, {"mount-path": "Nemo occaecati amet et consectetur.", "name": "Nisi dolorum corporis eum et voluptas vitae.", "read-only": true}, {"mount-path": "Nemo occaecati amet et consectetur.", "name": "Nisi dolorum corporis eum et voluptas vitae.", "read-only": true}], "volumes": [{"name": "Velit qui omnis.", "volume-source": "{\"emptyDir\":{\"medium\" : \"Memory\"}}"}, {"name": "Velit qui omnis.", "volume-source": "{\"emptyDir\":{\"medium\" : \"Memory\"}}"}, {"name": "Velit qui omnis.", "volume-source": "{\"emptyDir\":{\"medium\" : \"Memory\"}}"}, {"name": "Velit qui omnis.", "volume-source": "{\"emptyDir\":{\"medium\" : \"Memory\"}}"}]}, "opts": "Incidunt nihil molestias ut.", "type": "basic"}}}}}, "responses": {"201": {"description": "Created response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ServiceStatusRT"}, "example": {"account": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "description": "This service ...", "id": "urn:ivcap:service:123e4567-e89b-12d3-a456-426614174000", "links": [{"href": "https://api.ivcap.net/1/....", "rel": "self", "type": "application/json"}, {"href": "https://api.ivcap.net/1/openapi/openapi3.json#/components/schemas/user", "rel": "describedBy", "type": "application/json"}], "name": "Fire risk for Lot2", "parameters": [{"description": "The name of the region as according to ...", "label": "Region Name", "name": "region", "type": "string"}, {"label": "Rainfall/month threshold", "name": "threshold", "type": "float", "unit": "m"}], "status": "inactive", "tags": ["tag1", "tag2"]}}}}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}, "example": {"id": "123e4567-e89b-12d3-a456-426614174000", "message": "Odit et doloremque esse dolorem laudantium."}}}}, "404": {"description": "not-found:  not found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ResourceNotFoundT"}, "example": {"id": "cayp:type:123e4567-e89b-12d3-a456-426614174000", "message": "Resource 123...00 not found"}}}}, "409": {"description": "already-created: Resource already exists", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ResourceNotFoundT"}, "example": {"id": "cayp:type:123e4567-e89b-12d3-a456-426614174000", "message": "Resource 123...00 already exists"}}}}, "422": {"description": "invalid-parameter: Request contained semantically wrong parameter value", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidParameterValue"}, "example": {"message": "Nostrum ex.", "name": "Laborum qui.", "value": "Rem assumenda sit magnam accusamus enim."}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}, "example": {"message": "Laboriosam dolores incidunt."}}}}}, "security": [{"jwt_header_Authorization": ["consumer:write"]}]}}, "/1/services/{id}": {"delete": {"tags": ["service"], "summary": "delete service", "description": "Delete an existing services.", "operationId": "service#delete", "parameters": [{"name": "id", "in": "path", "description": "ID of services to update", "required": true, "schema": {"type": "string", "description": "ID of services to update", "example": "Recusandae amet nesciunt iste."}, "example": "Et tempora ex qui officiis totam mollitia."}], "responses": {"204": {"description": "No Content response."}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}, "example": {"id": "123e4567-e89b-12d3-a456-426614174000", "message": "Dolor labore nam consectetur repellendus quos."}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}, "example": {"message": "Magni repellat nulla sunt."}}}}}, "security": [{"jwt_header_Authorization": ["consumer:write"]}]}, "get": {"tags": ["service"], "summary": "read service", "description": "Show services by ID", "operationId": "service#read", "parameters": [{"name": "id", "in": "path", "description": "ID of services to show", "required": true, "schema": {"type": "string", "description": "ID of services to show", "example": "urn:ivcap:services"}, "example": "urn:ivcap:services"}], "responses": {"200": {"description": "OK response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ServiceStatusRT"}, "example": {"account": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "description": "This service ...", "id": "urn:ivcap:service:123e4567-e89b-12d3-a456-426614174000", "links": [{"href": "https://api.ivcap.net/1/....", "rel": "self", "type": "application/json"}, {"href": "https://api.ivcap.net/1/openapi/openapi3.json#/components/schemas/user", "rel": "describedBy", "type": "application/json"}], "name": "Fire risk for Lot2", "parameters": [{"description": "The name of the region as according to ...", "label": "Region Name", "name": "region", "type": "string"}, {"label": "Rainfall/month threshold", "name": "threshold", "type": "float", "unit": "m"}], "status": "active", "tags": ["tag1", "tag2"]}}}}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}, "example": {"id": "123e4567-e89b-12d3-a456-426614174000", "message": "Iusto eum rerum dolores sed."}}}}, "404": {"description": "not-found: services not found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ResourceNotFoundT"}, "example": {"id": "cayp:type:123e4567-e89b-12d3-a456-426614174000", "message": "Resource 123...00 not found"}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}, "example": {"message": "Quaerat nulla iure illum eum."}}}}}, "security": [{"jwt_header_Authorization": ["consumer:read"]}]}, "put": {"tags": ["service"], "summary": "update service", "description": "Update an existing services and return its status.", "operationId": "service#update", "parameters": [{"name": "force-create", "in": "query", "description": "Create if not already exist", "allowEmptyValue": true, "schema": {"type": "boolean", "description": "Create if not already exist", "example": false}, "example": true}, {"name": "id", "in": "path", "description": "ID of services to update", "required": true, "schema": {"type": "string", "description": "ID of services to update", "example": "Placeat saepe."}, "example": "Placeat itaque est cupiditate."}], "requestBody": {"description": "Updated services description", "required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ServiceDefinitionT"}, "example": {"banner": "http://johnstonmckenzie.info/issac", "description": "This service ...", "name": "Fire risk for Lot2", "parameters": [{"description": "The name of the region as according to ...", "label": "Region Name", "name": "region", "type": "string"}, {"label": "Rainfall/month threshold", "name": "threshold", "type": "float", "unit": "m"}], "policy": "urn:ivcap:policy:123e4567-e89b-12d3-a456-426614174000", "references": [{"title": "Quos ab et sed aperiam a.", "uri": "http://dietrich.org/jeremie"}, {"title": "Quos ab et sed aperiam a.", "uri": "http://dietrich.org/jeremie"}, {"title": "Quos ab et sed aperiam a.", "uri": "http://dietrich.org/jeremie"}, {"title": "Quos ab et sed aperiam a.", "uri": "http://dietrich.org/jeremie"}], "tags": ["tag1", "tag2"], "workflow": {"argo": "Voluptas doloribus optio.", "basic": {"command": ["/bin/sh", "-c", "echo $PATH"], "cpu": {"limit": "100m", "request": "10m"}, "ephemeral-storage": {"limit": "4Gi", "request": "2Gi"}, "gpu-number": 2, "gpu-type": "nvidia-tesla-t4", "image": "alpine", "memory": {"limit": "100Mi", "request": "10Mi"}, "volume-mounts": [{"mount-path": "Nemo occaecati amet et consectetur.", "name": "Nisi dolorum corporis eum et voluptas vitae.", "read-only": true}, {"mount-path": "Nemo occaecati amet et consectetur.", "name": "Nisi dolorum corporis eum et voluptas vitae.", "read-only": true}, {"mount-path": "Nemo occaecati amet et consectetur.", "name": "Nisi dolorum corporis eum et voluptas vitae.", "read-only": true}, {"mount-path": "Nemo occaecati amet et consectetur.", "name": "Nisi dolorum corporis eum et voluptas vitae.", "read-only": true}], "volumes": [{"name": "Velit qui omnis.", "volume-source": "{\"emptyDir\":{\"medium\" : \"Memory\"}}"}, {"name": "Velit qui omnis.", "volume-source": "{\"emptyDir\":{\"medium\" : \"Memory\"}}"}, {"name": "Velit qui omnis.", "volume-source": "{\"emptyDir\":{\"medium\" : \"Memory\"}}"}, {"name": "Velit qui omnis.", "volume-source": "{\"emptyDir\":{\"medium\" : \"Memory\"}}"}]}, "opts": "Incidunt nihil molestias ut.", "type": "basic"}}}}}, "responses": {"200": {"description": "OK response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ServiceStatusRT"}, "example": {"account": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "description": "This service ...", "id": "urn:ivcap:service:123e4567-e89b-12d3-a456-426614174000", "links": [{"href": "https://api.ivcap.net/1/....", "rel": "self", "type": "application/json"}, {"href": "https://api.ivcap.net/1/openapi/openapi3.json#/components/schemas/user", "rel": "describedBy", "type": "application/json"}], "name": "Fire risk for Lot2", "parameters": [{"description": "The name of the region as according to ...", "label": "Region Name", "name": "region", "type": "string"}, {"label": "Rainfall/month threshold", "name": "threshold", "type": "float", "unit": "m"}], "status": "error", "tags": ["tag1", "tag2"]}}}}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}, "example": {"id": "123e4567-e89b-12d3-a456-426614174000", "message": "Aut beatae ut officia asperiores."}}}}, "404": {"description": "not-found:  not found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ResourceNotFoundT"}, "example": {"id": "cayp:type:123e4567-e89b-12d3-a456-426614174000", "message": "Resource 123...00 not found"}}}}, "422": {"description": "invalid-parameter: Request contained semantically wrong parameter value", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidParameterValue"}, "example": {"message": "Mollitia maiores ratione voluptates qui.", "name": "Quo voluptatem.", "value": "Veritatis qui asperiores quaerat molestiae inventore inventore."}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}, "example": {"message": "Necessitatibus est commodi."}}}}}, "security": [{"jwt_header_Authorization": ["consumer:write"]}]}}}, "components": {"schemas": {"AddMetaRT": {"type": "object", "properties": {"record-id": {"type": "string", "description": "Reference to record created", "example": "urn:ivcap:record.123e4567-e89b-12d3-a456-426614174000", "format": "uri"}}, "example": {"record-id": "urn:ivcap:record.123e4567-e89b-12d3-a456-426614174000"}, "required": ["record-id"]}, "ArtifactListItem": {"type": "object", "properties": {"href": {"type": "string", "example": "https://api.ivcap.net/1/orders/..."}, "id": {"type": "string", "description": "ID", "example": "urn:ivcap:artifact:123e4567-e89b-12d3-a456-426614174000", "format": "uuid"}, "mime-type": {"type": "string", "description": "Mime (content) type of artifact", "example": "image/jpeg"}, "name": {"type": "string", "description": "Optional name", "example": "Fire risk for Lot2"}, "size": {"type": "integer", "description": "Size of artifact in bytes", "example": 19000, "format": "int64"}, "status": {"type": "string", "description": "Artifact status", "example": "ready", "enum": ["pending", "partial", "ready", "error", "unknown"]}}, "example": {"href": "https://api.ivcap.net/1/orders/...", "id": "urn:ivcap:artifact:123e4567-e89b-12d3-a456-426614174000", "mime-type": "image/jpeg", "name": "Fire risk for Lot2", "size": 19000, "status": "ready"}, "required": ["id", "status", "href"]}, "ArtifactListRT": {"type": "object", "properties": {"at-time": {"type": "string", "description": "Time at which this list was valid", "example": "1996-12-19T16:39:57-08:00", "format": "date-time"}, "items": {"type": "array", "items": {"$ref": "#/components/schemas/ArtifactListItem"}, "description": "Artifacts", "example": [{"href": "https://api.ivcap.net/1/orders/...", "id": "urn:ivcap:artifact:123e4567-e89b-12d3-a456-426614174000", "mime-type": "image/jpeg", "name": "Fire risk for Lot2", "size": 19000, "status": "ready"}, {"href": "https://api.ivcap.net/1/orders/...", "id": "urn:ivcap:artifact:123e4567-e89b-12d3-a456-426614174000", "mime-type": "image/jpeg", "name": "Fire risk for Lot2", "size": 19000, "status": "ready"}]}, "links": {"type": "array", "items": {"$ref": "#/components/schemas/LinkT"}, "example": [{"href": "https://api.ivcap.net/1/....", "rel": "self", "type": "application/json"}, {"href": "https://api.ivcap.net/1/....", "rel": "first", "type": "application/json"}, {"href": "https://api.ivcap.net/1/....", "rel": "next", "type": "application/json"}, {"href": "https://api.ivcap.net/1/openapi/openapi3.json#/components/schemas/user", "rel": "describedBy", "type": "application/openapi3+json"}]}}, "example": {"at-time": "1996-12-19T16:39:57-08:00", "items": [{"href": "https://api.ivcap.net/1/orders/...", "id": "urn:ivcap:artifact:123e4567-e89b-12d3-a456-426614174000", "mime-type": "image/jpeg", "name": "Fire risk for Lot2", "size": 19000, "status": "ready"}, {"href": "https://api.ivcap.net/1/orders/...", "id": "urn:ivcap:artifact:123e4567-e89b-12d3-a456-426614174000", "mime-type": "image/jpeg", "name": "Fire risk for Lot2", "size": 19000, "status": "ready"}, {"href": "https://api.ivcap.net/1/orders/...", "id": "urn:ivcap:artifact:123e4567-e89b-12d3-a456-426614174000", "mime-type": "image/jpeg", "name": "Fire risk for Lot2", "size": 19000, "status": "ready"}, {"href": "https://api.ivcap.net/1/orders/...", "id": "urn:ivcap:artifact:123e4567-e89b-12d3-a456-426614174000", "mime-type": "image/jpeg", "name": "Fire risk for Lot2", "size": 19000, "status": "ready"}], "links": [{"href": "https://api.ivcap.net/1/....", "rel": "self", "type": "application/json"}, {"href": "https://api.ivcap.net/1/....", "rel": "first", "type": "application/json"}, {"href": "https://api.ivcap.net/1/....", "rel": "next", "type": "application/json"}, {"href": "https://api.ivcap.net/1/openapi/openapi3.json#/components/schemas/user", "rel": "describedBy", "type": "application/openapi3+json"}]}, "required": ["items", "links"]}, "ArtifactStatusRT": {"type": "object", "properties": {"account": {"type": "string", "description": "Reference to billable account", "example": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "format": "uri"}, "cache-of": {"type": "string", "description": "URL of object this artifact is caching", "example": "Ea voluptatum quas voluptatem deserunt dolores vel."}, "created-at": {"type": "string", "description": "DateTime artifact was created", "example": "1996-12-19T16:39:57-08:00", "format": "date-time"}, "data-href": {"type": "string", "example": "https://api.ivcap.net/1/artifacts/.../blob"}, "etag": {"type": "string", "description": "ETAG of artifact", "example": "Omnis maxime rerum aut voluptates."}, "id": {"type": "string", "description": "Artifact ID", "example": "urn:ivcap:Artifact ID:123e4567-e89b-12d3-a456-426614174000", "format": "uri"}, "last-modified-at": {"type": "string", "description": "DateTime artifact was last modified", "example": "1996-12-19T16:39:57-08:00", "format": "date-time"}, "links": {"type": "array", "items": {"$ref": "#/components/schemas/LinkT"}, "example": [{"href": "https://api.ivcap.net/1/....", "rel": "self", "type": "application/json"}, {"href": "https://api.ivcap.net/1/openapi/openapi3.json#/components/schemas/user", "rel": "describedBy", "type": "application/json"}]}, "mime-type": {"type": "string", "description": "Mime-type of data", "example": "Qui perspiciatis."}, "name": {"type": "string", "description": "Optional name", "example": "Fire risk per LGA"}, "policy": {"type": "string", "description": "Reference to policy used", "example": "urn:ivcap:policy:123e4567-e89b-12d3-a456-426614174000", "format": "uri"}, "size": {"type": "integer", "description": "Size of data", "example": 4626629588910298428, "format": "int64"}, "status": {"type": "string", "description": "Artifact status", "example": "ready", "enum": ["pending", "partial", "ready", "error", "unknown"]}}, "example": {"account": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "cache-of": "Aut maxime est sequi quisquam sunt.", "created-at": "1996-12-19T16:39:57-08:00", "data-href": "https://api.ivcap.net/1/artifacts/.../blob", "etag": "Officiis non repudiandae debitis maxime inventore.", "id": "urn:ivcap:Artifact ID:123e4567-e89b-12d3-a456-426614174000", "last-modified-at": "1996-12-19T16:39:57-08:00", "links": [{"href": "https://api.ivcap.net/1/....", "rel": "self", "type": "application/json"}, {"href": "https://api.ivcap.net/1/openapi/openapi3.json#/components/schemas/user", "rel": "describedBy", "type": "application/json"}], "mime-type": "Consectetur sapiente at ratione aut.", "name": "Fire risk per LGA", "policy": "urn:ivcap:policy:123e4567-e89b-12d3-a456-426614174000", "size": 7947420052213796940, "status": "partial"}, "required": ["links", "id", "status"]}, "AspectIDRT": {"type": "object", "properties": {"id": {"type": "string", "description": "ID", "example": "urn:ivcap:aspect:123e4567-e89b-12d3-a456-426614174000", "format": "uuid"}}, "example": {"id": "urn:ivcap:aspect:123e4567-e89b-12d3-a456-426614174000"}, "required": ["id"]}, "AspectListItemRT": {"type": "object", "properties": {"content": {"type": "string", "description": "Attached aspect aspect", "example": "{...}", "format": "binary"}, "content-type": {"type": "string", "description": "Content-Type header, MUST be of application/json.", "example": "application/json"}, "entity": {"type": "string", "description": "Entity URN", "example": "urn:blue:transect.1", "format": "uri"}, "id": {"type": "string", "description": "ID", "example": "urn:ivcap:aspect:123e4567-e89b-12d3-a456-426614174000", "format": "uuid"}, "schema": {"type": "string", "description": "Schema URN", "example": "urn:blue:schema.image", "format": "uri"}, "valid-from": {"type": "string", "description": "Time this assertion became valid", "example": "1996-12-19T16:39:57-08:00", "format": "date-time"}, "valid-to": {"type": "string", "description": "Time this assertion became valid", "example": "1996-12-19T16:39:57-08:00", "format": "date-time"}}, "example": {"content": "{...}", "content-type": "application/json", "entity": "urn:blue:transect.1", "id": "urn:ivcap:aspect:123e4567-e89b-12d3-a456-426614174000", "schema": "urn:blue:schema.image", "valid-from": "1996-12-19T16:39:57-08:00", "valid-to": "1996-12-19T16:39:57-08:00"}, "required": ["id", "entity", "schema", "content-type"]}, "AspectListRT": {"type": "object", "properties": {"aspect-path": {"type": "string", "description": "Optional json path to further filter on returned list", "example": "Quia ut nostrum est suscipit."}, "at-time": {"type": "string", "description": "Time at which this list was valid", "example": "1996-12-19T16:39:57-08:00", "format": "date-time"}, "entity": {"type": "string", "description": "Entity for which to request aspect", "example": "urn:blue:image.collA.12", "format": "uri"}, "items": {"type": "array", "items": {"$ref": "#/components/schemas/AspectListItemRT"}, "description": "List of aspect descriptions", "example": [{"content": "{...}", "content-type": "application/json", "entity": "urn:blue:transect.1", "id": "urn:ivcap:aspect:123e4567-e89b-12d3-a456-426614174000", "schema": "urn:blue:schema.image", "valid-from": "1996-12-19T16:39:57-08:00", "valid-to": "1996-12-19T16:39:57-08:00"}, {"content": "{...}", "content-type": "application/json", "entity": "urn:blue:transect.1", "id": "urn:ivcap:aspect:123e4567-e89b-12d3-a456-426614174000", "schema": "urn:blue:schema.image", "valid-from": "1996-12-19T16:39:57-08:00", "valid-to": "1996-12-19T16:39:57-08:00"}]}, "links": {"type": "array", "items": {"$ref": "#/components/schemas/LinkT"}, "example": [{"href": "https://api.ivcap.net/1/....", "rel": "self", "type": "application/json"}, {"href": "https://api.ivcap.net/1/....", "rel": "first", "type": "application/json"}, {"href": "https://api.ivcap.net/1/....", "rel": "next", "type": "application/json"}, {"href": "https://api.ivcap.net/1/openapi/openapi3.json#/components/schemas/user", "rel": "describedBy", "type": "application/openapi3+json"}]}, "schema": {"type": "string", "description": "Optional schema to filter on", "example": "urn:blue:image,urn:blue:location", "format": "uri"}}, "example": {"aspect-path": "Non occaecati sit.", "at-time": "1996-12-19T16:39:57-08:00", "entity": "urn:blue:image.collA.12", "items": [{"content": "{...}", "content-type": "application/json", "entity": "urn:blue:transect.1", "id": "urn:ivcap:aspect:123e4567-e89b-12d3-a456-426614174000", "schema": "urn:blue:schema.image", "valid-from": "1996-12-19T16:39:57-08:00", "valid-to": "1996-12-19T16:39:57-08:00"}, {"content": "{...}", "content-type": "application/json", "entity": "urn:blue:transect.1", "id": "urn:ivcap:aspect:123e4567-e89b-12d3-a456-426614174000", "schema": "urn:blue:schema.image", "valid-from": "1996-12-19T16:39:57-08:00", "valid-to": "1996-12-19T16:39:57-08:00"}], "links": [{"href": "https://api.ivcap.net/1/....", "rel": "self", "type": "application/json"}, {"href": "https://api.ivcap.net/1/....", "rel": "first", "type": "application/json"}, {"href": "https://api.ivcap.net/1/....", "rel": "next", "type": "application/json"}, {"href": "https://api.ivcap.net/1/openapi/openapi3.json#/components/schemas/user", "rel": "describedBy", "type": "application/openapi3+json"}], "schema": "urn:blue:image,urn:blue:location"}, "required": ["items", "at-time", "links"]}, "AspectRT": {"type": "object", "properties": {"asserter": {"type": "string", "description": "Entity asserting this metadata record at 'valid-from'", "example": "urn:ivcap:principal:123e4567-e89b-12d3-a456-426614174000", "format": "uri"}, "content": {"type": "string", "description": "Description of aspect encoded as 'content-type'", "example": "{...}", "format": "binary"}, "content-type": {"type": "string", "description": "Content-Type header, MUST be of application/json.", "example": "application/json"}, "entity": {"type": "string", "description": "Entity URN", "example": "urn:blue:transect.1", "format": "uri"}, "id": {"type": "string", "description": "ID", "example": "urn:ivcap:record:123e4567-e89b-12d3-a456-426614174000", "format": "uuid"}, "links": {"type": "array", "items": {"$ref": "#/components/schemas/LinkT"}, "example": [{"href": "https://api.ivcap.net/1/....", "rel": "self", "type": "application/json"}, {"href": "https://api.ivcap.net/1/openapi/openapi3.json#/components/schemas/user", "rel": "describedBy", "type": "application/json"}]}, "retracter": {"type": "string", "description": "Entity retracting this record at 'valid-to'", "example": "urn:ivcap:principal:123e4567-e89b-12d3-a456-426614174000", "format": "uri"}, "schema": {"type": "string", "description": "Schema URN", "example": "urn:blue:schema.image", "format": "uri"}, "valid-from": {"type": "string", "description": "Time this record was asserted", "example": "1996-12-19T16:39:57-08:00", "format": "date-time"}, "valid-to": {"type": "string", "description": "Time this record was retracted", "example": "1996-12-19T16:39:57-08:00", "format": "date-time"}}, "example": {"asserter": "urn:ivcap:principal:123e4567-e89b-12d3-a456-426614174000", "content": "{...}", "content-type": "application/json", "entity": "urn:blue:transect.1", "id": "urn:ivcap:record:123e4567-e89b-12d3-a456-426614174000", "links": [{"href": "https://api.ivcap.net/1/....", "rel": "self", "type": "application/json"}, {"href": "https://api.ivcap.net/1/openapi/openapi3.json#/components/schemas/user", "rel": "describedBy", "type": "application/json"}], "retracter": "urn:ivcap:principal:123e4567-e89b-12d3-a456-426614174000", "schema": "urn:blue:schema.image", "valid-from": "1996-12-19T16:39:57-08:00", "valid-to": "1996-12-19T16:39:57-08:00"}, "required": ["links", "id", "entity", "schema", "content", "content-type", "valid-from", "asserter"]}, "BasicWorkflowOptsT": {"type": "object", "properties": {"command": {"type": "array", "items": {"type": "string", "example": "Impedit necessitatibus molestiae accusantium suscipit."}, "description": "Command to start the container - needed for some container runtimes", "example": ["/bin/sh", "-c", "echo $PATH"]}, "cpu": {"$ref": "#/components/schemas/ResourceMemoryT"}, "ephemeral-storage": {"$ref": "#/components/schemas/ResourceMemoryT"}, "gpu-number": {"type": "integer", "description": "Defines number of required gpu", "example": 2, "format": "int64"}, "gpu-type": {"type": "string", "description": "Defines required gpu type", "example": "nvidia-tesla-t4"}, "image": {"type": "string", "description": "container image name", "example": "alpine"}, "memory": {"$ref": "#/components/schemas/ResourceMemoryT"}, "volume-mounts": {"type": "array", "items": {"$ref": "#/components/schemas/VolumeMountT"}, "description": "VolumeMount describes a mounting of a Volume within a container", "example": [{"mount-path": "Nemo occaecati amet et consectetur.", "name": "Nisi dolorum corporis eum et voluptas vitae.", "read-only": true}, {"mount-path": "Nemo occaecati amet et consectetur.", "name": "Nisi dolorum corporis eum et voluptas vitae.", "read-only": true}]}, "volumes": {"type": "array", "items": {"$ref": "#/components/schemas/VolumeT"}, "description": "list of volumes can be mount by containers in a workflow", "example": [{"name": "Velit qui omnis.", "volume-source": "{\"emptyDir\":{\"medium\" : \"Memory\"}}"}, {"name": "Velit qui omnis.", "volume-source": "{\"emptyDir\":{\"medium\" : \"Memory\"}}"}, {"name": "Velit qui omnis.", "volume-source": "{\"emptyDir\":{\"medium\" : \"Memory\"}}"}]}}, "example": {"command": ["/bin/sh", "-c", "echo $PATH"], "cpu": {"limit": "100m", "request": "10m"}, "ephemeral-storage": {"limit": "4Gi", "request": "2Gi"}, "gpu-number": 2, "gpu-type": "nvidia-tesla-t4", "image": "alpine", "memory": {"limit": "100Mi", "request": "10Mi"}, "volume-mounts": [{"mount-path": "Nemo occaecati amet et consectetur.", "name": "Nisi dolorum corporis eum et voluptas vitae.", "read-only": true}, {"mount-path": "Nemo occaecati amet et consectetur.", "name": "Nisi dolorum corporis eum et voluptas vitae.", "read-only": true}], "volumes": [{"name": "Velit qui omnis.", "volume-source": "{\"emptyDir\":{\"medium\" : \"Memory\"}}"}, {"name": "Velit qui omnis.", "volume-source": "{\"emptyDir\":{\"medium\" : \"Memory\"}}"}, {"name": "Velit qui omnis.", "volume-source": "{\"emptyDir\":{\"medium\" : \"Memory\"}}"}, {"name": "Velit qui omnis.", "volume-source": "{\"emptyDir\":{\"medium\" : \"Memory\"}}"}]}, "required": ["image", "command"]}, "InvalidParameterValue": {"type": "object", "properties": {"message": {"type": "string", "description": "message describing expected type or pattern.", "example": "Dolore voluptatem."}, "name": {"type": "string", "description": "name of parameter.", "example": "Dolore magni beatae incidunt voluptas."}, "value": {"type": "string", "description": "provided parameter value.", "example": "Debitis est quis dolorem incidunt maiores et."}}, "description": "Invalide parameter value", "example": {"message": "Quo soluta.", "name": "Doloremque quod earum.", "value": "Et est quisquam doloribus labore est recusandae."}, "required": ["name", "message"]}, "InvalidScopesT": {"type": "object", "properties": {"id": {"type": "string", "description": "ID of involved resource", "example": "123e4567-e89b-12d3-a456-426614174000", "format": "uuid"}, "message": {"type": "string", "description": "Message of error", "default": "Not authorized to perform this action", "example": "Magni iste."}}, "description": "Token scopes are invalid", "example": {"id": "123e4567-e89b-12d3-a456-426614174000", "message": "Et harum hic qui voluptas vel."}, "required": ["message"]}, "LinkT": {"type": "object", "properties": {"href": {"type": "string", "description": "web link", "example": "https://acme.com/.."}, "rel": {"type": "string", "description": "relation type", "example": "self, describedBy, next, first"}, "type": {"type": "string", "description": "mime type", "example": "application/json"}}, "example": {"href": "https://acme.com/..", "rel": "self, describedBy, next, first", "type": "application/json"}, "required": ["rel", "type", "href"]}, "ListMetaRT": {"type": "object", "properties": {"aspect-path": {"type": "string", "description": "Optional json path to further filter on returned list", "example": "Dolorum provident."}, "at-time": {"type": "string", "description": "Time at which this list was valid", "example": "1996-12-19T16:39:57-08:00", "format": "date-time"}, "entity": {"type": "string", "description": "Entity for which to request metadata", "example": "urn:blue:image.collA.12", "format": "uri"}, "items": {"type": "array", "items": {"$ref": "#/components/schemas/MetadataListItemRT"}, "description": "List of metadata records", "example": [{"aspect": "{...}", "aspect-context": "{...}", "entity": "urn:blue:transect.1", "id": "urn:ivcap:metadata:123e4567-e89b-12d3-a456-426614174000", "schema": "urn:blue:schema.image"}, {"aspect": "{...}", "aspect-context": "{...}", "entity": "urn:blue:transect.1", "id": "urn:ivcap:metadata:123e4567-e89b-12d3-a456-426614174000", "schema": "urn:blue:schema.image"}, {"aspect": "{...}", "aspect-context": "{...}", "entity": "urn:blue:transect.1", "id": "urn:ivcap:metadata:123e4567-e89b-12d3-a456-426614174000", "schema": "urn:blue:schema.image"}]}, "links": {"type": "array", "items": {"$ref": "#/components/schemas/LinkT"}, "example": [{"href": "https://api.ivcap.net/1/....", "rel": "self", "type": "application/json"}, {"href": "https://api.ivcap.net/1/....", "rel": "first", "type": "application/json"}, {"href": "https://api.ivcap.net/1/....", "rel": "next", "type": "application/json"}, {"href": "https://api.ivcap.net/1/openapi/openapi3.json#/components/schemas/user", "rel": "describedBy", "type": "application/openapi3+json"}]}, "schema": {"type": "string", "description": "Optional schema to filter on", "example": "urn:blue:image,urn:blue:location", "format": "uri"}}, "example": {"aspect-path": "Dicta dicta.", "at-time": "1996-12-19T16:39:57-08:00", "entity": "urn:blue:image.collA.12", "items": [{"aspect": "{...}", "aspect-context": "{...}", "entity": "urn:blue:transect.1", "id": "urn:ivcap:metadata:123e4567-e89b-12d3-a456-426614174000", "schema": "urn:blue:schema.image"}, {"aspect": "{...}", "aspect-context": "{...}", "entity": "urn:blue:transect.1", "id": "urn:ivcap:metadata:123e4567-e89b-12d3-a456-426614174000", "schema": "urn:blue:schema.image"}, {"aspect": "{...}", "aspect-context": "{...}", "entity": "urn:blue:transect.1", "id": "urn:ivcap:metadata:123e4567-e89b-12d3-a456-426614174000", "schema": "urn:blue:schema.image"}], "links": [{"href": "https://api.ivcap.net/1/....", "rel": "self", "type": "application/json"}, {"href": "https://api.ivcap.net/1/....", "rel": "first", "type": "application/json"}, {"href": "https://api.ivcap.net/1/....", "rel": "next", "type": "application/json"}, {"href": "https://api.ivcap.net/1/openapi/openapi3.json#/components/schemas/user", "rel": "describedBy", "type": "application/openapi3+json"}], "schema": "urn:blue:image,urn:blue:location"}, "required": ["items", "links"]}, "MetadataListItemRT": {"type": "object", "properties": {"aspect": {"type": "object", "description": "Attached metadata aspect", "example": "{...}"}, "aspect-context": {"type": "string", "description": "If aspectPath was defined, this is what matched the query", "example": "{...}"}, "entity": {"type": "string", "description": "Entity ID", "example": "urn:blue:transect.1", "format": "uri"}, "id": {"type": "string", "description": "ID", "example": "urn:ivcap:metadata:123e4567-e89b-12d3-a456-426614174000", "format": "uuid"}, "schema": {"type": "string", "description": "Schema ID", "example": "urn:blue:schema.image", "format": "uri"}}, "example": {"aspect": "{...}", "aspect-context": "{...}", "entity": "urn:blue:transect.1", "id": "urn:ivcap:metadata:123e4567-e89b-12d3-a456-426614174000", "schema": "urn:blue:schema.image"}, "required": ["id", "entity", "schema"]}, "MetadataRecordRT": {"type": "object", "properties": {"aspect": {"type": "string", "description": "Attached metadata aspect", "example": "{...}", "format": "binary"}, "asserter": {"type": "string", "description": "Entity asserting this metadata record at 'valid-from'", "example": "urn:ivcap:principal:123e4567-e89b-12d3-a456-426614174000", "format": "uri"}, "entity": {"type": "string", "description": "Entity ID", "example": "urn:blue:transect.1", "format": "uri"}, "id": {"type": "string", "description": "ID", "example": "urn:ivcap:record:123e4567-e89b-12d3-a456-426614174000", "format": "uuid"}, "links": {"type": "array", "items": {"$ref": "#/components/schemas/LinkT"}, "example": [{"href": "https://api.ivcap.net/1/....", "rel": "self", "type": "application/json"}, {"href": "https://api.ivcap.net/1/openapi/openapi3.json#/components/schemas/user", "rel": "describedBy", "type": "application/json"}]}, "revoker": {"type": "string", "description": "Entity revoking this record at 'valid-to'", "example": "urn:ivcap:principal:123e4567-e89b-12d3-a456-426614174000", "format": "uri"}, "schema": {"type": "string", "description": "Schema ID", "example": "urn:blue:schema.image", "format": "uri"}, "valid-from": {"type": "string", "description": "Time this record was asserted", "example": "1996-12-19T16:39:57-08:00", "format": "date-time"}, "valid-to": {"type": "string", "description": "Time this record was retracted", "example": "1996-12-19T16:39:57-08:00", "format": "date-time"}}, "example": {"aspect": "{...}", "asserter": "urn:ivcap:principal:123e4567-e89b-12d3-a456-426614174000", "entity": "urn:blue:transect.1", "id": "urn:ivcap:record:123e4567-e89b-12d3-a456-426614174000", "links": [{"href": "https://api.ivcap.net/1/....", "rel": "self", "type": "application/json"}, {"href": "https://api.ivcap.net/1/openapi/openapi3.json#/components/schemas/user", "rel": "describedBy", "type": "application/json"}], "revoker": "urn:ivcap:principal:123e4567-e89b-12d3-a456-426614174000", "schema": "urn:blue:schema.image", "valid-from": "1996-12-19T16:39:57-08:00", "valid-to": "1996-12-19T16:39:57-08:00"}, "required": ["links", "id", "entity", "schema", "aspect", "valid-from", "asserter"]}, "NotImplementedT": {"type": "object", "properties": {"message": {"type": "string", "description": "Information message", "default": "Method not implemented", "example": "Eos labore."}}, "description": "Method is not yet implemented", "example": {"message": "Assumenda aut quia commodi."}, "required": ["message"]}, "OrderListItem": {"type": "object", "properties": {"account": {"type": "string", "description": "Reference to billable account", "example": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "format": "uri"}, "finished-at": {"type": "string", "description": "DateTime order processing finished", "example": "1996-12-19T16:39:57-08:00", "format": "date-time"}, "href": {"type": "string", "example": "https://api.ivcap.net/1/orders/..."}, "id": {"type": "string", "description": "ID", "example": "urn:ivcap:order:123e4567-e89b-12d3-a456-426614174000", "format": "uuid"}, "name": {"type": "string", "description": "Optional customer provided name", "example": "Fire risk for Lot2"}, "ordered-at": {"type": "string", "description": "DateTime order was placed", "example": "1996-12-19T16:39:57-08:00", "format": "date-time"}, "service": {"type": "string", "description": "Reference to service requested", "example": "urn:ivcap:service:123e4567-e89b-12d3-a456-426614174000", "format": "uri"}, "started-at": {"type": "string", "description": "DateTime order processing started", "example": "1996-12-19T16:39:57-08:00", "format": "date-time"}, "status": {"type": "string", "description": "Order status", "example": "error", "enum": ["unknown", "pending", "scheduled", "executing", "succeeded", "failed", "error"]}}, "example": {"account": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "finished-at": "1996-12-19T16:39:57-08:00", "href": "https://api.ivcap.net/1/orders/...", "id": "urn:ivcap:order:123e4567-e89b-12d3-a456-426614174000", "name": "Fire risk for Lot2", "ordered-at": "1996-12-19T16:39:57-08:00", "service": "urn:ivcap:service:123e4567-e89b-12d3-a456-426614174000", "started-at": "1996-12-19T16:39:57-08:00", "status": "error"}, "required": ["id", "status", "service", "account", "href"]}, "OrderListRT": {"type": "object", "properties": {"at-time": {"type": "string", "description": "Time at which this list was valid", "example": "1996-12-19T16:39:57-08:00", "format": "date-time"}, "items": {"type": "array", "items": {"$ref": "#/components/schemas/OrderListItem"}, "description": "Orders", "example": [{"account": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "finished-at": "1996-12-19T16:39:57-08:00", "href": "https://api.ivcap.net/1/orders/...", "id": "urn:ivcap:order:123e4567-e89b-12d3-a456-426614174000", "name": "Fire risk for Lot2", "ordered-at": "1996-12-19T16:39:57-08:00", "service": "urn:ivcap:service:123e4567-e89b-12d3-a456-426614174000", "started-at": "1996-12-19T16:39:57-08:00", "status": "error"}, {"account": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "finished-at": "1996-12-19T16:39:57-08:00", "href": "https://api.ivcap.net/1/orders/...", "id": "urn:ivcap:order:123e4567-e89b-12d3-a456-426614174000", "name": "Fire risk for Lot2", "ordered-at": "1996-12-19T16:39:57-08:00", "service": "urn:ivcap:service:123e4567-e89b-12d3-a456-426614174000", "started-at": "1996-12-19T16:39:57-08:00", "status": "error"}, {"account": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "finished-at": "1996-12-19T16:39:57-08:00", "href": "https://api.ivcap.net/1/orders/...", "id": "urn:ivcap:order:123e4567-e89b-12d3-a456-426614174000", "name": "Fire risk for Lot2", "ordered-at": "1996-12-19T16:39:57-08:00", "service": "urn:ivcap:service:123e4567-e89b-12d3-a456-426614174000", "started-at": "1996-12-19T16:39:57-08:00", "status": "error"}]}, "links": {"type": "array", "items": {"$ref": "#/components/schemas/LinkT"}, "example": [{"href": "https://api.ivcap.net/1/....", "rel": "self", "type": "application/json"}, {"href": "https://api.ivcap.net/1/....", "rel": "first", "type": "application/json"}, {"href": "https://api.ivcap.net/1/....", "rel": "next", "type": "application/json"}, {"href": "https://api.ivcap.net/1/openapi/openapi3.json#/components/schemas/user", "rel": "describedBy", "type": "application/openapi3+json"}]}}, "example": {"at-time": "1996-12-19T16:39:57-08:00", "items": [{"account": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "finished-at": "1996-12-19T16:39:57-08:00", "href": "https://api.ivcap.net/1/orders/...", "id": "urn:ivcap:order:123e4567-e89b-12d3-a456-426614174000", "name": "Fire risk for Lot2", "ordered-at": "1996-12-19T16:39:57-08:00", "service": "urn:ivcap:service:123e4567-e89b-12d3-a456-426614174000", "started-at": "1996-12-19T16:39:57-08:00", "status": "error"}, {"account": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "finished-at": "1996-12-19T16:39:57-08:00", "href": "https://api.ivcap.net/1/orders/...", "id": "urn:ivcap:order:123e4567-e89b-12d3-a456-426614174000", "name": "Fire risk for Lot2", "ordered-at": "1996-12-19T16:39:57-08:00", "service": "urn:ivcap:service:123e4567-e89b-12d3-a456-426614174000", "started-at": "1996-12-19T16:39:57-08:00", "status": "error"}, {"account": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "finished-at": "1996-12-19T16:39:57-08:00", "href": "https://api.ivcap.net/1/orders/...", "id": "urn:ivcap:order:123e4567-e89b-12d3-a456-426614174000", "name": "Fire risk for Lot2", "ordered-at": "1996-12-19T16:39:57-08:00", "service": "urn:ivcap:service:123e4567-e89b-12d3-a456-426614174000", "started-at": "1996-12-19T16:39:57-08:00", "status": "error"}], "links": [{"href": "https://api.ivcap.net/1/....", "rel": "self", "type": "application/json"}, {"href": "https://api.ivcap.net/1/....", "rel": "first", "type": "application/json"}, {"href": "https://api.ivcap.net/1/....", "rel": "next", "type": "application/json"}, {"href": "https://api.ivcap.net/1/openapi/openapi3.json#/components/schemas/user", "rel": "describedBy", "type": "application/openapi3+json"}]}, "required": ["items", "at-time", "links"]}, "OrderRequestT": {"type": "object", "properties": {"name": {"type": "string", "description": "Optional customer provided name", "example": "Fire risk for Lot2"}, "parameters": {"type": "array", "items": {"$ref": "#/components/schemas/ParameterT"}, "description": "Service parameters", "example": [{"name": "region", "value": "Upper Valley"}, {"name": "threshold", "value": "10"}]}, "policy": {"type": "string", "description": "Reference to policy used", "example": "urn:ivcap:policy:123e4567-e89b-12d3-a456-426614174000", "format": "uri"}, "service": {"type": "string", "description": "Reference to service requested", "example": "urn:ivcap:service:123e4567-e89b-12d3-a456-426614174000", "format": "uri"}, "tags": {"type": "array", "items": {"type": "string", "example": "Dicta eos amet repudiandae sed voluptas."}, "description": "Optional customer provided tags", "example": ["tag1", "tag2"]}}, "example": {"name": "Fire risk for Lot2", "parameters": [{"name": "region", "value": "Upper Valley"}, {"name": "threshold", "value": "10"}], "policy": "urn:ivcap:policy:123e4567-e89b-12d3-a456-426614174000", "service": "urn:ivcap:service:123e4567-e89b-12d3-a456-426614174000", "tags": ["tag1", "tag2"]}, "required": ["service", "parameters"]}, "OrderStatusRT": {"type": "object", "properties": {"account": {"type": "string", "description": "Reference to billable account", "example": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "format": "uri"}, "finished-at": {"type": "string", "description": "DateTime order processing finished", "example": "1996-12-19T16:39:57-08:00", "format": "date-time"}, "id": {"type": "string", "description": "ID", "example": "urn:ivcap:order:123e4567-e89b-12d3-a456-426614174000", "format": "uuid"}, "links": {"type": "array", "items": {"$ref": "#/components/schemas/LinkT"}, "example": [{"href": "https://api.ivcap.net/1/....", "rel": "self", "type": "application/json"}, {"href": "https://api.ivcap.net/1/openapi/openapi3.json#/components/schemas/user", "rel": "describedBy", "type": "application/json"}]}, "name": {"type": "string", "description": "Optional customer provided name", "example": "Fire risk for Lot2"}, "ordered-at": {"type": "string", "description": "DateTime order was placed", "example": "1996-12-19T16:39:57-08:00", "format": "date-time"}, "parameters": {"type": "array", "items": {"$ref": "#/components/schemas/ParameterT"}, "description": "Service parameters", "example": [{"name": "region", "value": "Upper Valley"}, {"name": "threshold", "value": "10"}]}, "products": {"$ref": "#/components/schemas/PartialProductListT"}, "service": {"type": "string", "description": "Reference to service requested", "example": "urn:ivcap:service:123e4567-e89b-12d3-a456-426614174000", "format": "uri"}, "started-at": {"type": "string", "description": "DateTime order processing started", "example": "1996-12-19T16:39:57-08:00", "format": "date-time"}, "status": {"type": "string", "description": "Order status", "example": "pending", "enum": ["unknown", "pending", "scheduled", "executing", "succeeded", "failed", "error"]}, "tags": {"type": "array", "items": {"type": "string", "example": "Aut et voluptas."}, "description": "Optional customer provided tags", "example": ["tag1", "tag2"]}}, "example": {"account": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "finished-at": "1996-12-19T16:39:57-08:00", "id": "urn:ivcap:order:123e4567-e89b-12d3-a456-426614174000", "links": [{"href": "https://api.ivcap.net/1/....", "rel": "self", "type": "application/json"}, {"href": "https://api.ivcap.net/1/openapi/openapi3.json#/components/schemas/user", "rel": "describedBy", "type": "application/json"}], "name": "Fire risk for Lot2", "ordered-at": "1996-12-19T16:39:57-08:00", "parameters": [{"name": "region", "value": "Upper Valley"}, {"name": "threshold", "value": "10"}], "products": {"items": [{"data-href": "https:/.../1/artifacts/0000-00001220/blob", "href": "https:/.../1/artifacts/0000-00001220", "mime-type": "image/geo+tiff", "name": "fire risk map", "size": 1234963}], "links": [{"href": "https://api.ivcap.net/1/....", "rel": "next"}]}, "service": "urn:ivcap:service:123e4567-e89b-12d3-a456-426614174000", "started-at": "1996-12-19T16:39:57-08:00", "status": "failed", "tags": ["tag1", "tag2"]}, "required": ["links", "id", "status", "products", "service", "account", "parameters"]}, "OrderTopResultItem": {"type": "object", "properties": {"container": {"type": "string", "description": "container", "example": "Nihil doloremque eveniet tenetur quasi cupiditate accusamus."}, "cpu": {"type": "string", "description": "cpu", "example": "Est tempore iusto asperiores ratione dolore."}, "ephemeral-storage": {"type": "string", "description": "ephemeral-storage", "example": "Explicabo officiis vel."}, "memory": {"type": "string", "description": "memory", "example": "Ut nisi optio dolorem."}, "storage": {"type": "string", "description": "storage", "example": "Atque reiciendis perferendis qui."}}, "example": {"container": "In asperiores voluptatem ut deserunt.", "cpu": "Voluptatibus optio quibusdam harum dignissimos.", "ephemeral-storage": "Ipsa eum.", "memory": "Earum dolores unde qui.", "storage": "Veniam non eaque."}, "required": ["container", "cpu", "memory", "storage", "ephemeral-storage"]}, "OrderTopResultItemCollection": {"type": "array", "items": {"$ref": "#/components/schemas/OrderTopResultItem"}, "example": [{"container": "Quia itaque tempora.", "cpu": "Est soluta ut assumenda.", "ephemeral-storage": "Accusamus ea et recusandae.", "memory": "Non dolorum nihil esse officia a.", "storage": "Officiis et ea saepe."}, {"container": "Quia itaque tempora.", "cpu": "Est soluta ut assumenda.", "ephemeral-storage": "Accusamus ea et recusandae.", "memory": "Non dolorum nihil esse officia a.", "storage": "Officiis et ea saepe."}, {"container": "Quia itaque tempora.", "cpu": "Est soluta ut assumenda.", "ephemeral-storage": "Accusamus ea et recusandae.", "memory": "Non dolorum nihil esse officia a.", "storage": "Officiis et ea saepe."}, {"container": "Quia itaque tempora.", "cpu": "Est soluta ut assumenda.", "ephemeral-storage": "Accusamus ea et recusandae.", "memory": "Non dolorum nihil esse officia a.", "storage": "Officiis et ea saepe."}]}, "ParameterDefT": {"type": "object", "properties": {"constant": {"type": "boolean", "example": true}, "default": {"type": "string", "example": "Magni nihil ut rerum omnis."}, "description": {"type": "string", "example": "Est qui libero voluptatem."}, "label": {"type": "string", "example": "Inventore quas voluptas consequatur sint nihil."}, "name": {"type": "string", "example": "Inventore corporis."}, "optional": {"type": "boolean", "example": true}, "options": {"type": "array", "items": {"$ref": "#/components/schemas/ParameterOptT"}, "example": [{"description": "Possimus eum quam est.", "value": "Nostrum et temporibus et autem voluptate."}, {"description": "Possimus eum quam est.", "value": "Nostrum et temporibus et autem voluptate."}]}, "type": {"type": "string", "example": "Voluptas saepe."}, "unary": {"type": "boolean", "example": false}, "unit": {"type": "string", "example": "Et modi non non iure officia aut."}}, "example": {"constant": true, "default": "Odio aut est debitis ipsam quia.", "description": "Officiis iste omnis corrupti eligendi.", "label": "Omnis animi.", "name": "Ipsa voluptas quia.", "optional": false, "options": [{"description": "Possimus eum quam est.", "value": "Nostrum et temporibus et autem voluptate."}, {"description": "Possimus eum quam est.", "value": "Nostrum et temporibus et autem voluptate."}, {"description": "Possimus eum quam est.", "value": "Nostrum et temporibus et autem voluptate."}, {"description": "Possimus eum quam est.", "value": "Nostrum et temporibus et autem voluptate."}], "type": "Non molestiae et quis et ut necessitatibus.", "unary": false, "unit": "Quis accusantium laboriosam in et."}}, "ParameterOptT": {"type": "object", "properties": {"description": {"type": "string", "example": "Laudantium perspiciatis aut dolorum libero ducimus at."}, "value": {"type": "string", "example": "Cupiditate enim harum perferendis et qui modi."}}, "example": {"description": "Qui voluptas unde hic qui quis.", "value": "Magni accusamus doloremque autem omnis et."}}, "ParameterT": {"type": "object", "properties": {"name": {"type": "string", "example": "Quis quaerat."}, "value": {"type": "string", "example": "Quas qui illo dolores inventore odit."}}, "example": {"name": "Architecto quis tenetur.", "value": "Illum assumenda explicabo aut quo et porro."}}, "PartialProductListT": {"type": "object", "properties": {"items": {"type": "array", "items": {"$ref": "#/components/schemas/ProductListItemT"}, "description": "(Partial) list of products delivered by this order", "example": [{"data-href": "https:/.../1/artifacts/0000-00001220/blob", "href": "https:/.../1/artifacts/0000-00001220", "mime-type": "image/geo+tiff", "name": "fire risk map", "size": 1234963}]}, "links": {"type": "array", "items": {"$ref": "#/components/schemas/LinkT"}, "description": "Links to more products, if there are any", "example": [{"href": "https://api.ivcap.net/1/....", "rel": "next"}]}}, "example": {"items": [{"data-href": "https:/.../1/artifacts/0000-00001220/blob", "href": "https:/.../1/artifacts/0000-00001220", "mime-type": "image/geo+tiff", "name": "fire risk map", "size": 1234963}], "links": [{"href": "https://api.ivcap.net/1/....", "rel": "next"}]}, "required": ["items", "links"]}, "ProductListItemT": {"type": "object", "properties": {"data-href": {"type": "string", "example": "https://api.ivcap.net/1/artifacts/.../data"}, "href": {"type": "string", "example": "https://api.ivcap.net/1/artifacts/..."}, "id": {"type": "string", "example": "Mollitia ab reprehenderit possimus."}, "mime-type": {"type": "string", "example": "Ipsam soluta similique libero."}, "name": {"type": "string", "example": "Quos quia facilis autem."}, "size": {"type": "integer", "example": 3798438297852750275, "format": "int64"}, "status": {"type": "string", "example": "Reprehenderit explicabo quaerat."}}, "example": {"data-href": "https://api.ivcap.net/1/artifacts/.../data", "href": "https://api.ivcap.net/1/artifacts/...", "id": "Qui consectetur.", "mime-type": "Sed qui suscipit ullam et commodi eos.", "name": "Porro veritatis laborum ut.", "size": 7859975263657553595, "status": "Assumenda tenetur voluptates."}, "required": ["id", "status", "href"]}, "ReferenceT": {"type": "object", "properties": {"title": {"type": "string", "description": "Title of reference document", "example": "Cumque voluptatem."}, "uri": {"type": "string", "description": "Link to document", "example": "http://wunsch.biz/andrew", "format": "uri"}}, "example": {"title": "Magni et dolore qui dolores est dolorum.", "uri": "http://pagac.name/jordon"}}, "ResourceMemoryT": {"type": "object", "properties": {"limit": {"type": "string", "description": "minimal requirements [system limit]", "example": "At aut sed consequatur dolor."}, "request": {"type": "string", "description": "minimal requirements [0]", "example": "Labore omnis modi exercitationem natus quaerat."}}, "description": "See https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#resource-units-in-kubernetes for units", "example": {"limit": "Et laboriosam id.", "request": "Nihil expedita voluptatum."}}, "ResourceNotFoundT": {"type": "object", "properties": {"id": {"type": "string", "description": "ID of missing resource", "example": "cayp:type:123e4567-e89b-12d3-a456-426614174000", "format": "uri"}, "message": {"type": "string", "description": "Message of error", "example": "Resource 123...00 not found"}}, "description": "aspects not found", "example": {"id": "cayp:type:123e4567-e89b-12d3-a456-426614174000", "message": "Resource 123...00 not found"}, "required": ["message", "id"]}, "ServiceDefinitionT": {"type": "object", "properties": {"banner": {"type": "string", "description": "Link to banner image optionally used for this service", "example": "http://volkman.info/ebony", "format": "uri"}, "description": {"type": "string", "description": "More detailed description of the service", "example": "This service ..."}, "name": {"type": "string", "description": "Optional provider provided name", "example": "Fire risk for Lot2"}, "parameters": {"type": "array", "items": {"$ref": "#/components/schemas/ParameterDefT"}, "description": "Service parameter definitions", "example": [{"description": "The name of the region as according to ...", "label": "Region Name", "name": "region", "type": "string"}, {"label": "Rainfall/month threshold", "name": "threshold", "type": "float", "unit": "m"}]}, "policy": {"type": "string", "description": "Reference to policy used", "example": "urn:ivcap:policy:123e4567-e89b-12d3-a456-426614174000", "format": "uri"}, "references": {"type": "array", "items": {"$ref": "#/components/schemas/ReferenceT"}, "description": "Reference to account revenues for this service should be credited to", "example": [{"title": "Quos ab et sed aperiam a.", "uri": "http://dietrich.org/jeremie"}, {"title": "Quos ab et sed aperiam a.", "uri": "http://dietrich.org/jeremie"}]}, "tags": {"type": "array", "items": {"type": "string", "example": "Quaerat et at delectus."}, "description": "Optional provider provided tags", "example": ["tag1", "tag2"]}, "workflow": {"$ref": "#/components/schemas/WorkflowT"}}, "example": {"banner": "http://blick.info/yazmin", "description": "This service ...", "name": "Fire risk for Lot2", "parameters": [{"description": "The name of the region as according to ...", "label": "Region Name", "name": "region", "type": "string"}, {"label": "Rainfall/month threshold", "name": "threshold", "type": "float", "unit": "m"}], "policy": "urn:ivcap:policy:123e4567-e89b-12d3-a456-426614174000", "references": [{"title": "Quos ab et sed aperiam a.", "uri": "http://dietrich.org/jeremie"}, {"title": "Quos ab et sed aperiam a.", "uri": "http://dietrich.org/jeremie"}], "tags": ["tag1", "tag2"], "workflow": {"argo": "Voluptas doloribus optio.", "basic": {"command": ["/bin/sh", "-c", "echo $PATH"], "cpu": {"limit": "100m", "request": "10m"}, "ephemeral-storage": {"limit": "4Gi", "request": "2Gi"}, "gpu-number": 2, "gpu-type": "nvidia-tesla-t4", "image": "alpine", "memory": {"limit": "100Mi", "request": "10Mi"}, "volume-mounts": [{"mount-path": "Nemo occaecati amet et consectetur.", "name": "Nisi dolorum corporis eum et voluptas vitae.", "read-only": true}, {"mount-path": "Nemo occaecati amet et consectetur.", "name": "Nisi dolorum corporis eum et voluptas vitae.", "read-only": true}, {"mount-path": "Nemo occaecati amet et consectetur.", "name": "Nisi dolorum corporis eum et voluptas vitae.", "read-only": true}, {"mount-path": "Nemo occaecati amet et consectetur.", "name": "Nisi dolorum corporis eum et voluptas vitae.", "read-only": true}], "volumes": [{"name": "Velit qui omnis.", "volume-source": "{\"emptyDir\":{\"medium\" : \"Memory\"}}"}, {"name": "Velit qui omnis.", "volume-source": "{\"emptyDir\":{\"medium\" : \"Memory\"}}"}, {"name": "Velit qui omnis.", "volume-source": "{\"emptyDir\":{\"medium\" : \"Memory\"}}"}, {"name": "Velit qui omnis.", "volume-source": "{\"emptyDir\":{\"medium\" : \"Memory\"}}"}]}, "opts": "Incidunt nihil molestias ut.", "type": "basic"}}, "required": ["description", "workflow", "parameters"]}, "ServiceListItem": {"type": "object", "properties": {"account": {"type": "string", "description": "Reference to billable account", "example": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "format": "uri"}, "description": {"type": "string", "description": "Optional description of the service", "example": "Some lengthy description of fire risk"}, "href": {"type": "string", "example": "https://api.ivcap.net/1/services/..."}, "id": {"type": "string", "description": "ID", "example": "urn:ivcap:service:123e4567-e89b-12d3-a456-426614174000", "format": "uuid"}, "name": {"type": "string", "description": "Optional customer provided name", "example": "Fire risk for region"}}, "example": {"account": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "description": "Some lengthy description of fire risk", "href": "https://api.ivcap.net/1/services/...", "id": "urn:ivcap:service:123e4567-e89b-12d3-a456-426614174000", "name": "Fire risk for region"}, "required": ["id", "account", "href"]}, "ServiceListRT": {"type": "object", "properties": {"at-time": {"type": "string", "description": "Time at which this list was valid", "example": "1996-12-19T16:39:57-08:00", "format": "date-time"}, "items": {"type": "array", "items": {"$ref": "#/components/schemas/ServiceListItem"}, "description": "Services", "example": [{"account": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "description": "Some lengthy description of fire risk", "href": "https://api.ivcap.net/1/services/...", "id": "urn:ivcap:service:123e4567-e89b-12d3-a456-426614174000", "name": "Fire risk for region"}, {"account": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "description": "Some lengthy description of fire risk", "href": "https://api.ivcap.net/1/services/...", "id": "urn:ivcap:service:123e4567-e89b-12d3-a456-426614174000", "name": "Fire risk for region"}, {"account": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "description": "Some lengthy description of fire risk", "href": "https://api.ivcap.net/1/services/...", "id": "urn:ivcap:service:123e4567-e89b-12d3-a456-426614174000", "name": "Fire risk for region"}]}, "links": {"type": "array", "items": {"$ref": "#/components/schemas/LinkT"}, "example": [{"href": "https://api.ivcap.net/1/....", "rel": "self", "type": "application/json"}, {"href": "https://api.ivcap.net/1/....", "rel": "first", "type": "application/json"}, {"href": "https://api.ivcap.net/1/....", "rel": "next", "type": "application/json"}, {"href": "https://api.ivcap.net/1/openapi/openapi3.json#/components/schemas/user", "rel": "describedBy", "type": "application/openapi3+json"}]}}, "example": {"at-time": "1996-12-19T16:39:57-08:00", "items": [{"account": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "description": "Some lengthy description of fire risk", "href": "https://api.ivcap.net/1/services/...", "id": "urn:ivcap:service:123e4567-e89b-12d3-a456-426614174000", "name": "Fire risk for region"}, {"account": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "description": "Some lengthy description of fire risk", "href": "https://api.ivcap.net/1/services/...", "id": "urn:ivcap:service:123e4567-e89b-12d3-a456-426614174000", "name": "Fire risk for region"}, {"account": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "description": "Some lengthy description of fire risk", "href": "https://api.ivcap.net/1/services/...", "id": "urn:ivcap:service:123e4567-e89b-12d3-a456-426614174000", "name": "Fire risk for region"}], "links": [{"href": "https://api.ivcap.net/1/....", "rel": "self", "type": "application/json"}, {"href": "https://api.ivcap.net/1/....", "rel": "first", "type": "application/json"}, {"href": "https://api.ivcap.net/1/....", "rel": "next", "type": "application/json"}, {"href": "https://api.ivcap.net/1/openapi/openapi3.json#/components/schemas/user", "rel": "describedBy", "type": "application/openapi3+json"}]}, "required": ["items", "at-time", "links"]}, "ServiceStatusRT": {"type": "object", "properties": {"account": {"type": "string", "description": "Reference to billable account", "example": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "format": "uri"}, "description": {"type": "string", "description": "More detailed description of the service", "example": "This service ..."}, "id": {"type": "string", "description": "ID", "example": "urn:ivcap:service:123e4567-e89b-12d3-a456-426614174000", "format": "uuid"}, "links": {"type": "array", "items": {"$ref": "#/components/schemas/LinkT"}, "example": [{"href": "https://api.ivcap.net/1/....", "rel": "self", "type": "application/json"}, {"href": "https://api.ivcap.net/1/openapi/openapi3.json#/components/schemas/user", "rel": "describedBy", "type": "application/json"}]}, "name": {"type": "string", "description": "Optional provider provided name", "example": "Fire risk for Lot2"}, "parameters": {"type": "array", "items": {"$ref": "#/components/schemas/ParameterDefT"}, "description": "Service parameter definitions", "example": [{"description": "The name of the region as according to ...", "label": "Region Name", "name": "region", "type": "string"}, {"label": "Rainfall/month threshold", "name": "threshold", "type": "float", "unit": "m"}]}, "status": {"type": "string", "description": "Service status", "example": "inactive", "enum": ["active", "inactive", "error"]}, "tags": {"type": "array", "items": {"type": "string", "example": "Fugiat explicabo pariatur."}, "description": "Optional provider provided tags", "example": ["tag1", "tag2"]}}, "example": {"account": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "description": "This service ...", "id": "urn:ivcap:service:123e4567-e89b-12d3-a456-426614174000", "links": [{"href": "https://api.ivcap.net/1/....", "rel": "self", "type": "application/json"}, {"href": "https://api.ivcap.net/1/openapi/openapi3.json#/components/schemas/user", "rel": "describedBy", "type": "application/json"}], "name": "Fire risk for Lot2", "parameters": [{"description": "The name of the region as according to ...", "label": "Region Name", "name": "region", "type": "string"}, {"label": "Rainfall/month threshold", "name": "threshold", "type": "float", "unit": "m"}], "status": "inactive", "tags": ["tag1", "tag2"]}, "required": ["links", "id", "status", "account", "parameters"]}, "VolumeMountT": {"type": "object", "properties": {"mount-path": {"type": "string", "description": "Path within the container at which the volume should be mounted", "example": "Officia eum exercitationem officiis asperiores quaerat."}, "name": {"type": "string", "description": "Name of the volume", "example": "Et assumenda consequatur."}, "read-only": {"type": "boolean", "description": "Mount read-only if true", "example": false}}, "example": {"mount-path": "Facilis sit quas est dignissimos.", "name": "Et nam.", "read-only": true}}, "VolumeT": {"type": "object", "properties": {"name": {"type": "string", "description": "Name of the volume", "example": "Nostrum est dicta quos inventore."}, "volume-source": {"type": "string", "description": "json string of volume source represents the location and type of the mounted volume", "example": "{\"emptyDir\":{\"medium\" : \"Memory\"}}"}}, "example": {"name": "Qui quia aut sit est magni.", "volume-source": "{\"emptyDir\":{\"medium\" : \"Memory\"}}"}}, "WorkflowT": {"type": "object", "properties": {"argo": {"type": "string", "description": "Defines the workflow using argo's WF schema", "example": "Explicabo repellat rerum ut.", "format": "binary"}, "basic": {"$ref": "#/components/schemas/BasicWorkflowOptsT"}, "opts": {"type": "string", "description": "Type specific options - left for backward compatibility, if possible use type specific elements", "example": "Alias repellat consequatur sunt.", "format": "binary"}, "type": {"type": "string", "description": "Type of workflow", "example": "basic"}}, "description": "Defines the workflow to use to execute this service. Currently supported 'types' are 'basic'\n\tand 'argo'. In case of 'basic', use the 'basic' element for further parameters. In the current implementation\n\t'opts' is expected to contain the same schema as 'basic'", "example": {"argo": "Accusantium illum est veniam.", "basic": {"command": ["/bin/sh", "-c", "echo $PATH"], "cpu": {"limit": "100m", "request": "10m"}, "ephemeral-storage": {"limit": "4Gi", "request": "2Gi"}, "gpu-number": 2, "gpu-type": "nvidia-tesla-t4", "image": "alpine", "memory": {"limit": "100Mi", "request": "10Mi"}, "volume-mounts": [{"mount-path": "Nemo occaecati amet et consectetur.", "name": "Nisi dolorum corporis eum et voluptas vitae.", "read-only": true}, {"mount-path": "Nemo occaecati amet et consectetur.", "name": "Nisi dolorum corporis eum et voluptas vitae.", "read-only": true}, {"mount-path": "Nemo occaecati amet et consectetur.", "name": "Nisi dolorum corporis eum et voluptas vitae.", "read-only": true}, {"mount-path": "Nemo occaecati amet et consectetur.", "name": "Nisi dolorum corporis eum et voluptas vitae.", "read-only": true}], "volumes": [{"name": "Velit qui omnis.", "volume-source": "{\"emptyDir\":{\"medium\" : \"Memory\"}}"}, {"name": "Velit qui omnis.", "volume-source": "{\"emptyDir\":{\"medium\" : \"Memory\"}}"}, {"name": "Velit qui omnis.", "volume-source": "{\"emptyDir\":{\"medium\" : \"Memory\"}}"}, {"name": "Velit qui omnis.", "volume-source": "{\"emptyDir\":{\"medium\" : \"Memory\"}}"}]}, "opts": "Et sit voluptas cumque voluptatibus.", "type": "basic"}, "required": ["type"]}}, "securitySchemes": {"jwt_header_Authorization": {"type": "http", "description": "Secures endpoint by requiring a valid JWT token", "scheme": "bearer"}}}, "tags": [{"name": "openapi", "description": "The openapi service serves the OpenAPI definition."}, {"name": "aspect", "description": "Manages the life cycle of aspect(s) attached to some entity."}, {"name": "artifact", "description": "Manage the life cycle of an artifact stored by this deployment."}, {"name": "metadata", "description": "Manages the life cycle of metadata attached to an entity."}, {"name": "order", "description": "Manage the life cycle of an order for CRE services."}, {"name": "service", "description": "Manage the life cycle of a service offered on the CRE marketplace."}]}
