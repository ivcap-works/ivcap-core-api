{"openapi": "3.0.3", "info": {"title": "IVCAP", "description": "\n**IVCAP** is for **service providers** to **offer** analytics **services**\nand for **consumers** to **order** customised **products** produced by said services.\n\n### Typical Workflow\n\n1. Obtain an token from the ID Providers listed in the document returned\nby [/1/authinfo.yaml](/1/authinfo.yaml). The token needs to be added\nas a bearer token via the\n<code>Authorization</code> header to every request to this service.\n1. <a href=\"#get-/1/services\">List</a> all available service.\n1. Select appropriate service and retrieve details, like parameters via\n<a href=\"#get-/1/services/-id-\">Read Service</a>.\n1. Create the appropriate json request and POST it to\n<a href=\"#post-/1/orders\">Create Order</a>. (see the example in the\nservice description.)\n1. The reply from the above POST operation contains a link (<code>links/self</code>) to the\nnewly create order record accessible via <a href=\"#get-/1/orders/-id-\">Read Order</a>.\n1. Progress of the order fulfilment can be tracked via repeated calls to\n<a href=\"#get-/1/orders/-id-\">Read Order</a> and the returned <code>status</code>.\n1. Any information products created in the context of an order will be listed under <code>producs</code>\nwhich also include a link to the respective <a href=\"#get-/1/artifacts/-id-\">Read Artifact</a>.\n1. The <a href=\"#get-/1/artifacts/-id-\">Read Artifact</a> service will return more details for\neach artifact, including a <code>data</code> link through which the artifact content can be downloaded. (The\ndownload link is also included in the <code>products</code> list returned by\nthe <a href=\"#get-/1/orders/-id-\">Read Order</a> service ).\n\nPlease note that all schemas in this API are following the [{json:api}](https://jsonapi.org/) specs\nwherever appropriate.\n\n### High-level Architecture\n\nOn receiving an order through this **API**, the internal *Order Dispatcher* is\ncreating a *workflow*, dispatching that to the\n[Argo workflow engine](https://argoproj.github.io/argo-workflows/)\nand create appropriate records in [Magda](https://magda.io/).\nAs the execution of the workflow progresses, appropriate updates are posted to the order record in Magda,\nsuch as data accessed or produced. In addition, any information products created will be\nstored via [Minio](https://min.io/) in a deployment specific object store\nand made accessible through the *Artifact* service.\n\t", "version": "0.35"}, "servers": [{"url": "http://localhost:8088", "description": "This endpoint hosts all the IVCAP services."}], "paths": {"/1/artifacts": {"get": {"tags": ["artifact"], "summary": "list artifact", "description": "list artifacts", "operationId": "artifact#list", "parameters": [{"name": "limit", "in": "query", "description": "The 'limit' query option sets the maximum number of items\n\t\t\tto be included in the result.", "allowEmptyValue": true, "schema": {"type": "integer", "description": "The 'limit' query option sets the maximum number of items\n\t\t\tto be included in the result.", "default": 10, "example": 10, "format": "int64", "minimum": 1, "maximum": 50}, "example": 10}, {"name": "page", "in": "query", "description": "The content of 'page' is returned in the 'links' part of a previous query and\n\t\t\twill when set, ALL other parameters, except for 'limit' are ignored.", "allowEmptyValue": true, "schema": {"type": "string", "description": "The content of 'page' is returned in the 'links' part of a previous query and\n\t\t\twill when set, ALL other parameters, except for 'limit' are ignored.", "example": "gdsgQwhdgd"}, "example": "gdsgQwhdgd"}, {"name": "filter", "in": "query", "description": "The 'filter' system query option allows clients to filter a collection of\n\t\t\t\tresources that are addressed by a request URL. The expression specified with 'filter'\n\t\t\t\tis evaluated for each resource in the collection, and only items where the expression\n\t\t\t\tevaluates to true are included in the response.", "allowEmptyValue": true, "schema": {"type": "string", "description": "The 'filter' system query option allows clients to filter a collection of\n\t\t\t\tresources that are addressed by a request URL. The expression specified with 'filter'\n\t\t\t\tis evaluated for each resource in the collection, and only items where the expression\n\t\t\t\tevaluates to true are included in the response.", "example": "name ~= 'Scott%'"}, "example": "name ~= 'Scott%'"}, {"name": "order-by", "in": "query", "description": "The 'orderby' query option allows clients to request resources in either\n\t\t\tascending order using asc or descending order using desc. If asc or desc not specified,\n\t\t\tthen the resources will be ordered in ascending order. The request below orders Trips on\n\t\t\tproperty EndsAt in descending order.", "allowEmptyValue": true, "schema": {"type": "string", "description": "The 'orderby' query option allows clients to request resources in either\n\t\t\tascending order using asc or descending order using desc. If asc or desc not specified,\n\t\t\tthen the resources will be ordered in ascending order. The request below orders Trips on\n\t\t\tproperty EndsAt in descending order.", "example": "orderby=EndsAt"}, "example": "orderby=EndsAt"}, {"name": "order-desc", "in": "query", "description": "When set order result in descending order. Ascending order is the lt.", "allowEmptyValue": true, "schema": {"type": "boolean", "description": "When set order result in descending order. Ascending order is the lt.", "default": false, "example": true}, "example": false}, {"name": "at-time", "in": "query", "description": "Return the state of the respective resources at that time [now]", "allowEmptyValue": true, "schema": {"type": "string", "description": "Return the state of the respective resources at that time [now]", "example": "1996-12-19T16:39:57-08:00", "format": "date-time"}, "example": "1996-12-19T16:39:57-08:00"}], "responses": {"200": {"description": "OK response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ArtifactListRT"}, "example": {"at-time": "1996-12-19T16:39:57-08:00", "items": [{"href": "https://api.ivcap.net/1/orders/...", "id": "urn:ivcap:artifact:123e4567-e89b-12d3-a456-426614174000", "mime-type": "image/jpeg", "name": "Fire risk for Lot2", "size": 19000, "status": "ready"}, {"href": "https://api.ivcap.net/1/orders/...", "id": "urn:ivcap:artifact:123e4567-e89b-12d3-a456-426614174000", "mime-type": "image/jpeg", "name": "Fire risk for Lot2", "size": 19000, "status": "ready"}], "links": [{"href": "https://api.ivcap.net/1/....", "rel": "self", "type": "application/json"}, {"href": "https://api.ivcap.net/1/....", "rel": "first", "type": "application/json"}, {"href": "https://api.ivcap.net/1/....", "rel": "next", "type": "application/json"}, {"href": "https://api.ivcap.net/1/openapi/openapi3.json#/components/schemas/user", "rel": "describedBy", "type": "application/openapi3+json"}]}}}}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}, "example": {"id": "123e4567-e89b-12d3-a456-426614174000", "message": "Sed laborum voluptatum amet earum."}}}}, "422": {"description": "invalid-parameter: Request contained semantically wrong parameter value", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidParameterValue"}, "example": {"message": "Minus dolores nemo reiciendis voluptates eum.", "name": "Sapiente provident.", "value": "Optio ex tempore corrupti sapiente aut voluptatibus."}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}, "example": {"message": "Labore eum maxime est ut esse."}}}}}, "security": [{"jwt_header_Authorization": ["consumer:read"]}]}, "post": {"tags": ["artifact"], "summary": "upload artifact", "description": "Upload content and create a artifacts.", "operationId": "artifact#upload", "parameters": [{"name": "Content-Type", "in": "header", "description": "Content-Type header, MUST define type of uploaded content.", "allowEmptyValue": true, "schema": {"type": "string", "description": "Content-Type header, MUST define type of uploaded content.", "example": "application/x-netcdf4"}, "example": "application/x-netcdf4"}, {"name": "Content-Encoding", "in": "header", "description": "Content-Encoding header, MAY define encoding of content.", "allowEmptyValue": true, "schema": {"type": "string", "description": "Content-Encoding header, MAY define encoding of content.", "example": "gzip"}, "example": "gzip"}, {"name": "Content-Length", "in": "header", "description": "Content-Length header, MAY define size of expected upload.", "allowEmptyValue": true, "schema": {"type": "integer", "description": "Content-Length header, MAY define size of expected upload.", "example": 2376, "format": "int64"}, "example": 2376}, {"name": "X-Name", "in": "header", "description": "X-Name header, MAY define a more human friendly name. Reusing a name will NOT override an existing artifact with the same name", "allowEmptyValue": true, "schema": {"type": "string", "description": "X-Name header, MAY define a more human friendly name. Reusing a name will NOT override an existing artifact with the same name", "example": "sample-12"}, "example": "sample-12"}, {"name": "X-Collection", "in": "header", "description": "X-Collection header, MAY define an collection name as a simple way of grouping artifacts", "allowEmptyValue": true, "schema": {"type": "string", "description": "X-Collection header, MAY define an collection name as a simple way of grouping artifacts", "example": "urn:projectX:collection:field-trip-jun-22"}, "example": "urn:projectX:collection:field-trip-jun-22"}, {"name": "X-Policy", "in": "header", "description": "X-Policy header, MAY define a specific policy to control access to this artifact", "allowEmptyValue": true, "schema": {"type": "string", "description": "X-Policy header, MAY define a specific policy to control access to this artifact", "example": "urn:ivcap:policy:ivcap.open.metadata"}, "example": "urn:ivcap:policy:ivcap.open.metadata"}, {"name": "X-Content-Type", "in": "header", "description": "X-Content-Type header, used for initial, empty content creation requests.", "allowEmptyValue": true, "schema": {"type": "string", "description": "X-Content-Type header, used for initial, empty content creation requests.", "example": "application/x-netcdf4"}, "example": "application/x-netcdf4"}, {"name": "X-Content-Length", "in": "header", "description": "X-Content-Length header, used for initial, empty content creation requests.", "allowEmptyValue": true, "schema": {"type": "integer", "description": "X-Content-Length header, used for initial, empty content creation requests.", "example": 2376, "format": "int64"}, "example": 2376}, {"name": "Upload-Length", "in": "header", "description": "Upload-Length header, sets the expected content size part of the TUS protocol.", "allowEmptyValue": true, "schema": {"type": "integer", "description": "Upload-Length header, sets the expected content size part of the TUS protocol.", "example": 2376, "format": "int64"}, "example": 2376}, {"name": "Tus-Resumable", "in": "header", "description": "Tus-Resumable header, specifies TUS protocol version.", "allowEmptyValue": true, "schema": {"type": "string", "description": "Tus-Resumable header, specifies TUS protocol version.", "example": "1.0.0"}, "example": "1.0.0"}], "responses": {"201": {"description": "Created response.", "headers": {"Location": {"description": "link back to record", "schema": {"type": "string", "description": "link back to record", "example": "Amet sint omnis."}, "example": "Architecto veniam doloribus facere quae."}, "Tus-Resumable": {"description": "indicate version of TUS supported", "schema": {"type": "string", "description": "indicate version of TUS supported", "example": "Et odit sint quo."}, "example": "Sit totam qui voluptatum."}, "Upload-Offset": {"description": "TUS offset for partially uploaded content", "schema": {"type": "integer", "description": "TUS offset for partially uploaded content", "example": 5718551705817200262, "format": "int64"}, "example": 4863953899616591092}}, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ArtifactStatusRT"}, "example": {"account": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "cache-of": "Assumenda ratione impedit provident possimus.", "created-at": "1996-12-19T16:39:57-08:00", "data-href": "https://api.ivcap.net/1/artifacts/.../blob", "etag": "Deleniti cumque et quas.", "id": "urn:ivcap:Artifact ID:123e4567-e89b-12d3-a456-426614174000", "last-modified-at": "1996-12-19T16:39:57-08:00", "links": [{"href": "https://api.ivcap.net/1/....", "rel": "self", "type": "application/json"}, {"href": "https://api.ivcap.net/1/openapi/openapi3.json#/components/schemas/user", "rel": "describedBy", "type": "application/json"}], "mime-type": "Quia harum distinctio possimus at quam aut.", "name": "Fire risk per LGA", "policy": "urn:ivcap:policy:123e4567-e89b-12d3-a456-426614174000", "size": 227710162647282295, "status": "pending"}}}}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}, "example": {"id": "123e4567-e89b-12d3-a456-426614174000", "message": "Repellendus magni sequi inventore exercitationem."}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}, "example": {"message": "Voluptate consequuntur exercitationem quae."}}}}}, "security": [{"jwt_header_Authorization": ["consumer:write"]}]}}, "/1/artifacts/{id}": {"get": {"tags": ["artifact"], "summary": "read artifact", "description": "Show artifacts by ID", "operationId": "artifact#read", "parameters": [{"name": "id", "in": "path", "description": "ID of artifacts to show", "required": true, "schema": {"type": "string", "description": "ID of artifacts to show", "example": "urn:ivcap:artifacts"}, "example": "urn:ivcap:artifacts"}], "responses": {"200": {"description": "OK response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ArtifactStatusRT"}, "example": {"account": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "cache-of": "Placeat sit.", "created-at": "1996-12-19T16:39:57-08:00", "data-href": "https://api.ivcap.net/1/artifacts/.../blob", "etag": "Nemo aut atque quam sequi expedita dicta.", "id": "urn:ivcap:Artifact ID:123e4567-e89b-12d3-a456-426614174000", "last-modified-at": "1996-12-19T16:39:57-08:00", "links": [{"href": "https://api.ivcap.net/1/....", "rel": "self", "type": "application/json"}, {"href": "https://api.ivcap.net/1/openapi/openapi3.json#/components/schemas/user", "rel": "describedBy", "type": "application/json"}], "mime-type": "Molestiae molestiae voluptas enim blanditiis.", "name": "Fire risk per LGA", "policy": "urn:ivcap:policy:123e4567-e89b-12d3-a456-426614174000", "size": 1729662567921980441, "status": "partial"}}}}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}, "example": {"id": "123e4567-e89b-12d3-a456-426614174000", "message": "Sed qui quidem architecto dolore inventore consequuntur."}}}}, "404": {"description": "not-found: artifacts not found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ResourceNotFoundT"}, "example": {"id": "cayp:type:123e4567-e89b-12d3-a456-426614174000", "message": "Resource 123...00 not found"}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}, "example": {"message": "Rerum aut."}}}}}, "security": [{"jwt_header_Authorization": ["consumer:read"]}]}}, "/1/aspects": {"get": {"tags": ["aspect"], "summary": "list aspect", "description": "Return a list of aspect aspects.", "operationId": "aspect#list", "parameters": [{"name": "entity", "in": "query", "description": "Optional entity for which to request aspects", "allowEmptyValue": true, "schema": {"type": "string", "description": "Optional entity for which to request aspects", "example": "urn:blue:image.collA#12", "format": "uri"}, "example": "urn:blue:image.collA#12"}, {"name": "schema", "in": "query", "description": "Schema prefix using '%' as wildcard indicator", "allowEmptyValue": true, "schema": {"type": "string", "description": "Schema prefix using '%' as wildcard indicator", "example": "urn:blue:schema:image%"}, "example": "urn:blue:schema:image%"}, {"name": "content-path", "in": "query", "description": "To learn more about the supported format, see\n\t\t\t\t\thttps://www.postgresql.org/docs/current/datatype-json.html#DATATYPE-JSONPATH", "allowEmptyValue": true, "schema": {"type": "string", "description": "To learn more about the supported format, see\n\t\t\t\t\thttps://www.postgresql.org/docs/current/datatype-json.html#DATATYPE-JSONPATH", "example": "$.images[*] ? (@.size > 10000)"}, "example": "$.images[*] ? (@.size > 10000)"}, {"name": "at-time", "in": "query", "description": "Return aspect which where valid at that time [now]", "allowEmptyValue": true, "schema": {"type": "string", "description": "Return aspect which where valid at that time [now]", "example": "1996-12-19T16:39:57-08:00", "format": "date-time"}, "example": "1996-12-19T16:39:57-08:00"}, {"name": "limit", "in": "query", "description": "The 'limit' system query option requests the number of items in the queried\n\t\t\t\tcollection to be included in the result.", "allowEmptyValue": true, "schema": {"type": "integer", "description": "The 'limit' system query option requests the number of items in the queried\n\t\t\t\tcollection to be included in the result.", "default": 10, "example": 10, "format": "int64", "minimum": 1, "maximum": 50}, "example": 10}, {"name": "filter", "in": "query", "description": "The 'filter' system query option allows clients to filter a collection of\n\t\t\t\tresources that are addressed by a request URL. The expression specified with 'filter'\n\t\t\t\tis evaluated for each resource in the collection, and only items where the expression\n\t\t\t\tevaluates to true are included in the response.", "allowEmptyValue": true, "schema": {"type": "string", "description": "The 'filter' system query option allows clients to filter a collection of\n\t\t\t\tresources that are addressed by a request URL. The expression specified with 'filter'\n\t\t\t\tis evaluated for each resource in the collection, and only items where the expression\n\t\t\t\tevaluates to true are included in the response.", "default": "", "example": "FirstName eq 'Scott'"}, "example": "FirstName eq 'Scott'"}, {"name": "order-by", "in": "query", "description": "Optional comma-separated list of attributes to sort the list by.\n* entity\n* schema\n* content\n* policy\n* account\n* created_by\n* retracted_by\n* replaces\n* valid_from\n* valid_to\n", "allowEmptyValue": true, "schema": {"type": "string", "description": "Optional comma-separated list of attributes to sort the list by.\n* entity\n* schema\n* content\n* policy\n* account\n* created_by\n* retracted_by\n* replaces\n* valid_from\n* valid_to\n", "default": "valid_from", "example": "entity,created-at"}, "example": "entity,created-at"}, {"name": "order-direction", "in": "query", "description": "Set the sort direction 'ASC', 'DESC' for each order-by element.", "allowEmptyValue": true, "schema": {"type": "string", "description": "Set the sort direction 'ASC', 'DESC' for each order-by element.", "default": "DESC", "example": "Est iure sunt voluptas eius sed officiis."}, "example": "Omnis quas ullam blanditiis accusamus sint corrupti."}, {"name": "include-content", "in": "query", "description": "When set, also include aspect content in list.", "allowEmptyValue": true, "schema": {"type": "boolean", "description": "When set, also include aspect content in list.", "example": false}, "example": true}, {"name": "page", "in": "query", "description": "The content of '$page' is returned in the 'links' part of a previous query and\n\t\t\t\twill when set, ALL other parameters, except for 'limit' are ignored.", "allowEmptyValue": true, "schema": {"type": "string", "description": "The content of '$page' is returned in the 'links' part of a previous query and\n\t\t\t\twill when set, ALL other parameters, except for 'limit' are ignored.", "example": "gdsgQwhdgd"}, "example": "gdsgQwhdgd"}], "responses": {"200": {"description": "OK response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AspectListRT"}, "example": {"aspect-path": "Aspernatur cumque est.", "at-time": "1996-12-19T16:39:57-08:00", "entity": "urn:blue:image.collA.12", "items": [{"content": "{...}", "content-type": "application/json", "entity": "urn:blue:transect.1", "id": "urn:ivcap:aspect:123e4567-e89b-12d3-a456-426614174000", "schema": "urn:blue:schema.image", "valid-from": "1996-12-19T16:39:57-08:00", "valid-to": "1996-12-19T16:39:57-08:00"}, {"content": "{...}", "content-type": "application/json", "entity": "urn:blue:transect.1", "id": "urn:ivcap:aspect:123e4567-e89b-12d3-a456-426614174000", "schema": "urn:blue:schema.image", "valid-from": "1996-12-19T16:39:57-08:00", "valid-to": "1996-12-19T16:39:57-08:00"}], "links": [{"href": "https://api.ivcap.net/1/....", "rel": "self", "type": "application/json"}, {"href": "https://api.ivcap.net/1/....", "rel": "first", "type": "application/json"}, {"href": "https://api.ivcap.net/1/....", "rel": "next", "type": "application/json"}, {"href": "https://api.ivcap.net/1/openapi/openapi3.json#/components/schemas/user", "rel": "describedBy", "type": "application/openapi3+json"}], "schema": "urn:blue:image,urn:blue:location"}}}}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}, "example": {"id": "123e4567-e89b-12d3-a456-426614174000", "message": "Omnis excepturi velit."}}}}, "415": {"description": "unsupported-content-type: Format not supported by this method on the target resource", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}, "example": {"message": "Quidem expedita."}}}}, "422": {"description": "invalid-parameter: Request contained semantically wrong parameter value", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidParameterValue"}, "example": {"message": "Ipsa velit nobis sapiente.", "name": "Voluptas est.", "value": "In ut ipsam."}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}, "example": {"message": "Dolorum omnis cum."}}}}}, "security": [{"jwt_header_Authorization": ["consumer:read"]}]}, "post": {"tags": ["aspect"], "summary": "create aspect", "description": "Attach new aspect to an entity.", "operationId": "aspect#create", "parameters": [{"name": "entity", "in": "query", "description": "Entity to which attach aspect", "allowEmptyValue": true, "required": true, "schema": {"type": "string", "description": "Entity to which attach aspect", "example": "urn:some_ns:entity#123"}, "example": "urn:some_ns:entity#123"}, {"name": "schema", "in": "query", "description": "Schema of the aspect in payload", "allowEmptyValue": true, "required": true, "schema": {"type": "string", "description": "Schema of the aspect in payload", "example": "urn:some_ns:schema:some_schema.1"}, "example": "urn:some_ns:schema:some_schema.1"}, {"name": "policy", "in": "query", "description": "Policy guiding visibility and actions performed", "allowEmptyValue": true, "schema": {"type": "string", "description": "Policy guiding visibility and actions performed", "example": "urn:ivcap:policy:some_policy.1"}, "example": "urn:ivcap:policy:some_policy.1"}, {"name": "Content-Type", "in": "header", "description": "Content-Type header, MUST be of application/json.", "allowEmptyValue": true, "required": true, "schema": {"type": "string", "description": "Content-Type header, MUST be of application/json.", "example": "application/json"}, "example": "application/json"}], "requestBody": {"description": "Aspect content", "required": true, "content": {"application/json": {"schema": {"type": "string", "description": "Aspect content", "example": "{\"$schema\": ...}", "format": "binary"}, "example": "{\"$schema\": ...}"}}}, "responses": {"200": {"description": "OK response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AspectIDRT"}, "example": {"id": "urn:ivcap:aspect:123e4567-e89b-12d3-a456-426614174000"}}}}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}, "example": {"id": "123e4567-e89b-12d3-a456-426614174000", "message": "Voluptatem at."}}}}, "422": {"description": "invalid-parameter: Request contained semantically wrong parameter value", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidParameterValue"}, "example": {"message": "Modi voluptas voluptates quaerat molestias ipsum.", "name": "Sunt est quaerat voluptatum.", "value": "Vel deleniti fugit."}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}, "example": {"message": "Aut aut eligendi soluta dolorum."}}}}}, "security": [{"jwt_header_Authorization": ["consumer:write"]}]}, "put": {"tags": ["aspect"], "summary": "update aspect", "description": "A convenience method which will create a new aspect, but will also\n\t\tretract a potentially existing aspect for the same entity with the same schema.", "operationId": "aspect#update", "parameters": [{"name": "entity", "in": "query", "description": "Entity to which attach aspect", "allowEmptyValue": true, "required": true, "schema": {"type": "string", "description": "Entity to which attach aspect", "example": "urn:some_ns:schema:some_schema.1"}, "example": "urn:some_ns:schema:some_schema.1"}, {"name": "schema", "in": "query", "description": "Schema of aspect", "allowEmptyValue": true, "required": true, "schema": {"type": "string", "description": "Schema of aspect", "example": "urn:url:....", "format": "uri"}, "example": "urn:url:...."}, {"name": "Content-Type", "in": "header", "description": "Content-Type header, MUST be of application/json.", "allowEmptyValue": true, "required": true, "schema": {"type": "string", "description": "Content-Type header, MUST be of application/json.", "example": "application/json"}, "example": "application/json"}], "requestBody": {"description": "Aspect content", "required": true, "content": {"application/json": {"schema": {"type": "string", "description": "Aspect content", "example": "{\"$schema\": ...}", "format": "binary"}, "example": "{\"$schema\": ...}"}}}, "responses": {"200": {"description": "OK response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AspectIDRT"}, "example": {"id": "urn:ivcap:aspect:123e4567-e89b-12d3-a456-426614174000"}}}}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}, "example": {"id": "123e4567-e89b-12d3-a456-426614174000", "message": "Est in."}}}}, "422": {"description": "invalid-parameter: Request contained semantically wrong parameter value", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidParameterValue"}, "example": {"message": "Quaerat quia maiores sunt.", "name": "Officiis enim quam blanditiis soluta.", "value": "Vel atque necessitatibus veniam."}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}, "example": {"message": "Aut totam modi optio eius blanditiis."}}}}}, "security": [{"jwt_header_Authorization": ["consumer:write"]}]}}, "/1/aspects/{id}": {"delete": {"tags": ["aspect"], "summary": "retract aspect", "description": "Retract a previously created statement.", "operationId": "aspect#retract", "parameters": [{"name": "id", "in": "path", "description": "Aspect ID to restract", "required": true, "schema": {"type": "string", "description": "Aspect ID to restract", "example": "urn:ivcap:aspect#53cbb715-4ffd-4158-9e55-5d0ae69605a4", "format": "uri"}, "example": "urn:ivcap:aspect#53cbb715-4ffd-4158-9e55-5d0ae69605a4"}], "responses": {"204": {"description": "No Content response."}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}, "example": {"id": "123e4567-e89b-12d3-a456-426614174000", "message": "Voluptatem harum ea et dicta laboriosam velit."}}}}, "422": {"description": "invalid-parameter: Request contained semantically wrong parameter value", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidParameterValue"}, "example": {"message": "Impedit eum eum.", "name": "Officia minima aperiam consequatur.", "value": "Ut dolores deleniti nulla itaque."}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}, "example": {"message": "Assumenda hic dolorum vero."}}}}}, "security": [{"jwt_header_Authorization": ["consumer:write"]}]}, "get": {"tags": ["aspect"], "summary": "read aspect", "description": "Show aspects by ID", "operationId": "aspect#read", "parameters": [{"name": "id", "in": "path", "description": "ID of aspects to show", "required": true, "schema": {"type": "string", "description": "ID of aspects to show", "example": "urn:ivcap:aspects"}, "example": "urn:ivcap:aspects"}], "responses": {"200": {"description": "OK response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AspectRT"}, "example": {"asserter": "urn:ivcap:principal:123e4567-e89b-12d3-a456-426614174000", "content": "{...}", "content-type": "application/json", "entity": "urn:blue:transect.1", "id": "urn:ivcap:record:123e4567-e89b-12d3-a456-426614174000", "links": [{"href": "https://api.ivcap.net/1/....", "rel": "self", "type": "application/json"}, {"href": "https://api.ivcap.net/1/openapi/openapi3.json#/components/schemas/user", "rel": "describedBy", "type": "application/json"}], "retracter": "urn:ivcap:principal:123e4567-e89b-12d3-a456-426614174000", "schema": "urn:blue:schema.image", "valid-from": "1996-12-19T16:39:57-08:00", "valid-to": "1996-12-19T16:39:57-08:00"}}}}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}, "example": {"id": "123e4567-e89b-12d3-a456-426614174000", "message": "Vel amet molestiae aut."}}}}, "404": {"description": "not-found: aspects not found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ResourceNotFoundT"}, "example": {"id": "cayp:type:123e4567-e89b-12d3-a456-426614174000", "message": "Resource 123...00 not found"}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}, "example": {"message": "Illo suscipit fuga dolorem rerum."}}}}}, "security": [{"jwt_header_Authorization": ["consumer:read"]}]}}, "/1/metadata": {"get": {"tags": ["metadata"], "summary": "list metadata", "description": "Return a list of metadata records.", "operationId": "metadata#list", "parameters": [{"name": "entity-id", "in": "query", "description": "Entity for which to request metadata", "allowEmptyValue": true, "schema": {"type": "string", "description": "Entity for which to request metadata", "example": "urn:blue:image.collA.12", "format": "uri"}, "example": "urn:blue:image.collA.12"}, {"name": "schema", "in": "query", "description": "Schema prefix using '%' as wildcard indicator", "allowEmptyValue": true, "schema": {"type": "string", "description": "Schema prefix using '%' as wildcard indicator", "example": "urn:blue:image%"}, "example": "urn:blue:image%"}, {"name": "aspect-path", "in": "query", "description": "To learn more about the supported format, see\n\t\t\t\t\thttps://www.postgresql.org/docs/current/datatype-json.html#DATATYPE-JSONPATH", "allowEmptyValue": true, "schema": {"type": "string", "description": "To learn more about the supported format, see\n\t\t\t\t\thttps://www.postgresql.org/docs/current/datatype-json.html#DATATYPE-JSONPATH", "example": "$.images[*] ? (@.size > 10000)"}, "example": "$.images[*] ? (@.size > 10000)"}, {"name": "at-time", "in": "query", "description": "Return metadata which where valid at that time [now]", "allowEmptyValue": true, "schema": {"type": "string", "description": "Return metadata which where valid at that time [now]", "example": "1996-12-19T16:39:57-08:00", "format": "date-time"}, "example": "1996-12-19T16:39:57-08:00"}, {"name": "limit", "in": "query", "description": "The 'limit' system query option requests the number of items in the queried\n\t\t\t\tcollection to be included in the result.", "allowEmptyValue": true, "schema": {"type": "integer", "description": "The 'limit' system query option requests the number of items in the queried\n\t\t\t\tcollection to be included in the result.", "default": 10, "example": 10, "format": "int64", "minimum": 1, "maximum": 50}, "example": 10}, {"name": "filter", "in": "query", "description": "The 'filter' system query option allows clients to filter a collection of\n\t\t\t\tresources that are addressed by a request URL. The expression specified with 'filter'\n\t\t\t\tis evaluated for each resource in the collection, and only items where the expression\n\t\t\t\tevaluates to true are included in the response.", "allowEmptyValue": true, "schema": {"type": "string", "description": "The 'filter' system query option allows clients to filter a collection of\n\t\t\t\tresources that are addressed by a request URL. The expression specified with 'filter'\n\t\t\t\tis evaluated for each resource in the collection, and only items where the expression\n\t\t\t\tevaluates to true are included in the response.", "default": "", "example": "name~='Scott'"}, "example": "name~='Scott'"}, {"name": "order-by", "in": "query", "description": "The 'orderby' query option allows clients to request resources in either\n\t\t\t\tascending order using asc or descending order using desc. If asc or desc not specified,\n\t\t\t\tthen the resources will be ordered in ascending order. The request below orders Trips on\n\t\t\t\tproperty EndsAt in descending order.", "allowEmptyValue": true, "schema": {"type": "string", "description": "The 'orderby' query option allows clients to request resources in either\n\t\t\t\tascending order using asc or descending order using desc. If asc or desc not specified,\n\t\t\t\tthen the resources will be ordered in ascending order. The request below orders Trips on\n\t\t\t\tproperty EndsAt in descending order.", "default": "", "example": "name"}, "example": "name"}, {"name": "order-desc", "in": "query", "description": "When set order result in descending order. Ascending order is the default.", "allowEmptyValue": true, "schema": {"type": "boolean", "description": "When set order result in descending order. Ascending order is the default.", "example": true}, "example": false}, {"name": "include-content", "in": "query", "description": "When set, also include aspect content in list.", "allowEmptyValue": true, "schema": {"type": "boolean", "description": "When set, also include aspect content in list.", "default": true, "example": true}, "example": false}, {"name": "page", "in": "query", "description": "The content of '$page' is returned in the 'links' part of a previous query and\n\t\t\t\twill when set, ALL other parameters, except for 'limit' are ignored.", "allowEmptyValue": true, "schema": {"type": "string", "description": "The content of '$page' is returned in the 'links' part of a previous query and\n\t\t\t\twill when set, ALL other parameters, except for 'limit' are ignored.", "example": "gdsgQwhdgd"}, "example": "gdsgQwhdgd"}], "responses": {"200": {"description": "OK response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ListMetaRT"}, "example": {"aspect-path": "Nemo est dolore repellat.", "at-time": "1996-12-19T16:39:57-08:00", "entity": "urn:blue:image.collA.12", "items": [{"aspect": "{...}", "aspect-context": "{...}", "entity": "urn:blue:transect.1", "id": "urn:ivcap:metadata:123e4567-e89b-12d3-a456-426614174000", "schema": "urn:blue:schema.image"}, {"aspect": "{...}", "aspect-context": "{...}", "entity": "urn:blue:transect.1", "id": "urn:ivcap:metadata:123e4567-e89b-12d3-a456-426614174000", "schema": "urn:blue:schema.image"}, {"aspect": "{...}", "aspect-context": "{...}", "entity": "urn:blue:transect.1", "id": "urn:ivcap:metadata:123e4567-e89b-12d3-a456-426614174000", "schema": "urn:blue:schema.image"}], "links": [{"href": "https://api.ivcap.net/1/....", "rel": "self", "type": "application/json"}, {"href": "https://api.ivcap.net/1/....", "rel": "first", "type": "application/json"}, {"href": "https://api.ivcap.net/1/....", "rel": "next", "type": "application/json"}, {"href": "https://api.ivcap.net/1/openapi/openapi3.json#/components/schemas/user", "rel": "describedBy", "type": "application/openapi3+json"}], "schema": "urn:blue:image,urn:blue:location"}}}}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}, "example": {"id": "123e4567-e89b-12d3-a456-426614174000", "message": "Rerum ut."}}}}, "422": {"description": "invalid-parameter: Request contained semantically wrong parameter value", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidParameterValue"}, "example": {"message": "Expedita magni sapiente.", "name": "Dolor aut quia fugiat quis.", "value": "Eveniet accusamus omnis praesentium placeat sit dolores."}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}, "example": {"message": "Repudiandae unde ut."}}}}}, "security": [{"jwt_header_Authorization": ["consumer:read"]}]}, "post": {"tags": ["metadata"], "summary": "add metadata", "description": "Attach new metadata to an entity.", "operationId": "metadata#add", "parameters": [{"name": "entity-id", "in": "query", "description": "Entity to which attach metadata", "allowEmptyValue": true, "required": true, "schema": {"type": "string", "description": "Entity to which attach metadata", "example": "http://prosacco.com/keegan_ruecker", "format": "uri"}, "example": "http://priceaufderhar.com/coby"}, {"name": "schema", "in": "query", "description": "Schema of metadata", "allowEmptyValue": true, "required": true, "schema": {"type": "string", "description": "Schema of metadata", "example": "http://jacobi.name/christa_halvorson", "format": "uri"}, "example": "http://bechtelarkautzer.info/darian"}, {"name": "policy-id", "in": "query", "description": "Policy guiding visibility and actions performed", "allowEmptyValue": true, "schema": {"type": "string", "description": "Policy guiding visibility and actions performed", "example": "http://mcglynn.com/valentina", "format": "uri"}, "example": "http://flatleymueller.name/minnie"}, {"name": "Content-Type", "in": "header", "description": "Content-Type header, MUST be of application/json.", "allowEmptyValue": true, "required": true, "schema": {"type": "string", "description": "Content-Type header, MUST be of application/json.", "example": "application/json"}, "example": "application/json"}], "requestBody": {"description": "Aspect content", "required": true, "content": {"application/json": {"schema": {"type": "string", "description": "Aspect content", "example": "{\"$schema\": ...}", "format": "binary"}, "example": "{\"$schema\": ...}"}}}, "responses": {"200": {"description": "OK response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AddMetaRT"}, "example": {"record-id": "urn:ivcap:record.123e4567-e89b-12d3-a456-426614174000"}}}}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}, "example": {"id": "123e4567-e89b-12d3-a456-426614174000", "message": "Eligendi et provident."}}}}, "422": {"description": "invalid-parameter: Request contained semantically wrong parameter value", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidParameterValue"}, "example": {"message": "Distinctio soluta ipsa.", "name": "Recusandae voluptas facilis ut maxime distinctio minima.", "value": "Ut et temporibus magnam qui velit ea."}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}, "example": {"message": "Ipsum cumque."}}}}}, "security": [{"jwt_header_Authorization": ["consumer:write"]}]}}, "/1/metadata/{id}": {"delete": {"tags": ["metadata"], "summary": "revoke metadata", "description": "Retract a previously created statement.", "operationId": "metadata#revoke", "parameters": [{"name": "id", "in": "path", "description": "Record ID to restract", "required": true, "schema": {"type": "string", "description": "Record ID to restract", "example": "urn:ivcap:record.53cbb715-4ffd-4158-9e55-5d0ae69605a4", "format": "uri"}, "example": "urn:ivcap:record.53cbb715-4ffd-4158-9e55-5d0ae69605a4"}], "responses": {"204": {"description": "No Content response."}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}, "example": {"id": "123e4567-e89b-12d3-a456-426614174000", "message": "Illo accusamus."}}}}, "422": {"description": "invalid-parameter: Request contained semantically wrong parameter value", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidParameterValue"}, "example": {"message": "Et minima dolore sed.", "name": "Quod nulla ea ut amet ut.", "value": "Rem perferendis eos architecto repellat corrupti doloribus."}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}, "example": {"message": "Quo commodi sapiente cum odit."}}}}}, "security": [{"jwt_header_Authorization": ["consumer:write"]}]}, "get": {"tags": ["metadata"], "summary": "read metadata", "description": "Show metadata by ID", "operationId": "metadata#read", "parameters": [{"name": "id", "in": "path", "description": "ID of metadata to show", "required": true, "schema": {"type": "string", "description": "ID of metadata to show", "example": "urn:ivcap:metadata"}, "example": "urn:ivcap:metadata"}], "responses": {"200": {"description": "OK response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/MetadataRecordRT"}, "example": {"aspect": "{...}", "asserter": "urn:ivcap:principal:123e4567-e89b-12d3-a456-426614174000", "entity": "urn:blue:transect.1", "id": "urn:ivcap:record:123e4567-e89b-12d3-a456-426614174000", "links": [{"href": "https://api.ivcap.net/1/....", "rel": "self", "type": "application/json"}, {"href": "https://api.ivcap.net/1/openapi/openapi3.json#/components/schemas/user", "rel": "describedBy", "type": "application/json"}], "revoker": "urn:ivcap:principal:123e4567-e89b-12d3-a456-426614174000", "schema": "urn:blue:schema.image", "valid-from": "1996-12-19T16:39:57-08:00", "valid-to": "1996-12-19T16:39:57-08:00"}}}}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}, "example": {"id": "123e4567-e89b-12d3-a456-426614174000", "message": "Ullam quis possimus mollitia veniam provident consequatur."}}}}, "404": {"description": "not-found: metadata not found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ResourceNotFoundT"}, "example": {"id": "cayp:type:123e4567-e89b-12d3-a456-426614174000", "message": "Resource 123...00 not found"}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}, "example": {"message": "Perspiciatis sit."}}}}}, "security": [{"jwt_header_Authorization": ["consumer:read"]}]}, "put": {"tags": ["metadata"], "summary": "update_record metadata", "description": "Revoke this record and create a new one with the information provided.\n\t\t\tFor any field not provided, the value from the current record is used.", "operationId": "metadata#update_record", "parameters": [{"name": "entity-id", "in": "query", "description": "Entity to which attach metadata", "allowEmptyValue": true, "schema": {"type": "string", "description": "Entity to which attach metadata", "example": "urn:url:....", "format": "uri"}, "example": "urn:url:...."}, {"name": "schema", "in": "query", "description": "Schema of metadata", "allowEmptyValue": true, "schema": {"type": "string", "description": "Schema of metadata", "example": "urn:url:....", "format": "uri"}, "example": "urn:url:...."}, {"name": "policy-id", "in": "query", "description": "Policy guiding visibility and actions performed", "allowEmptyValue": true, "schema": {"type": "string", "description": "Policy guiding visibility and actions performed", "example": "http://crona.info/chet_conroy", "format": "uri"}, "example": "http://riceswaniawski.com/albert"}, {"name": "id", "in": "path", "description": "Record ID to update", "required": true, "schema": {"type": "string", "description": "Record ID to update", "example": "urn:ivcap:record.53cbb715-4ffd-4158-9e55-5d0ae69605a4", "format": "uri"}, "example": "urn:ivcap:record.53cbb715-4ffd-4158-9e55-5d0ae69605a4"}, {"name": "Content-Type", "in": "header", "description": "Content-Type header, MUST be of application/json.", "allowEmptyValue": true, "schema": {"type": "string", "description": "Content-Type header, MUST be of application/json.", "example": "application/json"}, "example": "application/json"}], "requestBody": {"description": "Aspect content", "required": true, "content": {"application/json": {"schema": {"type": "string", "description": "Aspect content", "example": "{\"$schema\": ...}", "format": "binary"}, "example": "{\"$schema\": ...}"}}}, "responses": {"200": {"description": "OK response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AddMetaRT"}, "example": {"record-id": "urn:ivcap:record.123e4567-e89b-12d3-a456-426614174000"}}}}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}, "example": {"id": "123e4567-e89b-12d3-a456-426614174000", "message": "Nam esse dolores sit."}}}}, "422": {"description": "invalid-parameter: Request contained semantically wrong parameter value", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidParameterValue"}, "example": {"message": "Quia ducimus consequuntur.", "name": "Explicabo rerum aut.", "value": "Alias non expedita aut quisquam ipsam odio."}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}, "example": {"message": "Nihil odio et."}}}}}, "security": [{"jwt_header_Authorization": ["consumer:write"]}]}}, "/1/openapi/openapi3.json": {"get": {"tags": ["openapi"], "summary": "Download /public/openapi3.json", "description": "JSON document containing the API swagger definition", "operationId": "openapi#/1/openapi/openapi3.json", "responses": {"200": {"description": "File downloaded"}}}}, "/1/orders": {"get": {"tags": ["order"], "summary": "list order", "description": "list orders", "operationId": "order#list", "parameters": [{"name": "limit", "in": "query", "description": "The 'limit' query option sets the maximum number of items\n\t\t\tto be included in the result.", "allowEmptyValue": true, "schema": {"type": "integer", "description": "The 'limit' query option sets the maximum number of items\n\t\t\tto be included in the result.", "default": 10, "example": 10, "format": "int64", "minimum": 1, "maximum": 50}, "example": 10}, {"name": "page", "in": "query", "description": "The content of 'page' is returned in the 'links' part of a previous query and\n\t\t\twill when set, ALL other parameters, except for 'limit' are ignored.", "allowEmptyValue": true, "schema": {"type": "string", "description": "The content of 'page' is returned in the 'links' part of a previous query and\n\t\t\twill when set, ALL other parameters, except for 'limit' are ignored.", "example": "gdsgQwhdgd"}, "example": "gdsgQwhdgd"}, {"name": "filter", "in": "query", "description": "The 'filter' system query option allows clients to filter a collection of\n\t\t\t\tresources that are addressed by a request URL. The expression specified with 'filter'\n\t\t\t\tis evaluated for each resource in the collection, and only items where the expression\n\t\t\t\tevaluates to true are included in the response.", "allowEmptyValue": true, "schema": {"type": "string", "description": "The 'filter' system query option allows clients to filter a collection of\n\t\t\t\tresources that are addressed by a request URL. The expression specified with 'filter'\n\t\t\t\tis evaluated for each resource in the collection, and only items where the expression\n\t\t\t\tevaluates to true are included in the response.", "example": "name ~= 'Scott%'"}, "example": "name ~= 'Scott%'"}, {"name": "order-by", "in": "query", "description": "The 'orderby' query option allows clients to request resources in either\n\t\t\tascending order using asc or descending order using desc. If asc or desc not specified,\n\t\t\tthen the resources will be ordered in ascending order. The request below orders Trips on\n\t\t\tproperty EndsAt in descending order.", "allowEmptyValue": true, "schema": {"type": "string", "description": "The 'orderby' query option allows clients to request resources in either\n\t\t\tascending order using asc or descending order using desc. If asc or desc not specified,\n\t\t\tthen the resources will be ordered in ascending order. The request below orders Trips on\n\t\t\tproperty EndsAt in descending order.", "example": "orderby=EndsAt"}, "example": "orderby=EndsAt"}, {"name": "order-desc", "in": "query", "description": "When set order result in descending order. Ascending order is the lt.", "allowEmptyValue": true, "schema": {"type": "boolean", "description": "When set order result in descending order. Ascending order is the lt.", "default": false, "example": false}, "example": false}, {"name": "at-time", "in": "query", "description": "Return the state of the respective resources at that time [now]", "allowEmptyValue": true, "schema": {"type": "string", "description": "Return the state of the respective resources at that time [now]", "example": "1996-12-19T16:39:57-08:00", "format": "date-time"}, "example": "1996-12-19T16:39:57-08:00"}], "responses": {"200": {"description": "OK response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/OrderListRT"}, "example": {"at-time": "1996-12-19T16:39:57-08:00", "items": [{"account": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "finished-at": "1996-12-19T16:39:57-08:00", "href": "https://api.ivcap.net/1/orders/...", "id": "urn:ivcap:order:123e4567-e89b-12d3-a456-426614174000", "name": "Fire risk for Lot2", "ordered-at": "1996-12-19T16:39:57-08:00", "service": "urn:ivcap:service:123e4567-e89b-12d3-a456-426614174000", "started-at": "1996-12-19T16:39:57-08:00", "status": "pending"}, {"account": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "finished-at": "1996-12-19T16:39:57-08:00", "href": "https://api.ivcap.net/1/orders/...", "id": "urn:ivcap:order:123e4567-e89b-12d3-a456-426614174000", "name": "Fire risk for Lot2", "ordered-at": "1996-12-19T16:39:57-08:00", "service": "urn:ivcap:service:123e4567-e89b-12d3-a456-426614174000", "started-at": "1996-12-19T16:39:57-08:00", "status": "pending"}, {"account": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "finished-at": "1996-12-19T16:39:57-08:00", "href": "https://api.ivcap.net/1/orders/...", "id": "urn:ivcap:order:123e4567-e89b-12d3-a456-426614174000", "name": "Fire risk for Lot2", "ordered-at": "1996-12-19T16:39:57-08:00", "service": "urn:ivcap:service:123e4567-e89b-12d3-a456-426614174000", "started-at": "1996-12-19T16:39:57-08:00", "status": "pending"}, {"account": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "finished-at": "1996-12-19T16:39:57-08:00", "href": "https://api.ivcap.net/1/orders/...", "id": "urn:ivcap:order:123e4567-e89b-12d3-a456-426614174000", "name": "Fire risk for Lot2", "ordered-at": "1996-12-19T16:39:57-08:00", "service": "urn:ivcap:service:123e4567-e89b-12d3-a456-426614174000", "started-at": "1996-12-19T16:39:57-08:00", "status": "pending"}], "links": [{"href": "https://api.ivcap.net/1/....", "rel": "self", "type": "application/json"}, {"href": "https://api.ivcap.net/1/....", "rel": "first", "type": "application/json"}, {"href": "https://api.ivcap.net/1/....", "rel": "next", "type": "application/json"}, {"href": "https://api.ivcap.net/1/openapi/openapi3.json#/components/schemas/user", "rel": "describedBy", "type": "application/openapi3+json"}]}}}}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}, "example": {"id": "123e4567-e89b-12d3-a456-426614174000", "message": "Enim nisi qui."}}}}, "422": {"description": "invalid-parameter: Request contained semantically wrong parameter value", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidParameterValue"}, "example": {"message": "Quis sit aliquam vel molestias inventore aut.", "name": "Tempora assumenda.", "value": "Iste sit sint minima est."}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}, "example": {"message": "Aperiam quo fugiat non qui."}}}}}, "security": [{"jwt_header_Authorization": ["consumer:read"]}]}, "post": {"tags": ["order"], "summary": "create order", "description": "Create a new orders and return its status.", "operationId": "order#create", "requestBody": {"description": "New orders description", "required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/OrderRequestT"}, "example": {"name": "Fire risk for Lot2", "parameters": [{"name": "region", "value": "Upper Valley"}, {"name": "threshold", "value": "10"}], "policy": "urn:ivcap:policy:123e4567-e89b-12d3-a456-426614174000", "service": "urn:ivcap:service:123e4567-e89b-12d3-a456-426614174000", "tags": ["tag1", "tag2"]}}}}, "responses": {"200": {"description": "OK response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/OrderStatusRT"}, "example": {"account": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "finished-at": "1996-12-19T16:39:57-08:00", "id": "urn:ivcap:order:123e4567-e89b-12d3-a456-426614174000", "links": [{"href": "https://api.ivcap.net/1/....", "rel": "self", "type": "application/json"}, {"href": "https://api.ivcap.net/1/openapi/openapi3.json#/components/schemas/user", "rel": "describedBy", "type": "application/json"}], "name": "Fire risk for Lot2", "ordered-at": "1996-12-19T16:39:57-08:00", "parameters": [{"name": "region", "value": "Upper Valley"}, {"name": "threshold", "value": "10"}], "products": {"items": [{"data-href": "https:/.../1/artifacts/0000-00001220/blob", "href": "https:/.../1/artifacts/0000-00001220", "mime-type": "image/geo+tiff", "name": "fire risk map", "size": 1234963}], "links": [{"href": "https://api.ivcap.net/1/....", "rel": "next"}]}, "service": "urn:ivcap:service:123e4567-e89b-12d3-a456-426614174000", "started-at": "1996-12-19T16:39:57-08:00", "status": "failed", "tags": ["tag1", "tag2"]}}}}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}, "example": {"id": "123e4567-e89b-12d3-a456-426614174000", "message": "Saepe debitis est necessitatibus perferendis."}}}}, "404": {"description": "not-found:  not found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ResourceNotFoundT"}, "example": {"id": "cayp:type:123e4567-e89b-12d3-a456-426614174000", "message": "Resource 123...00 not found"}}}}, "422": {"description": "invalid-parameter: Request contained semantically wrong parameter value", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidParameterValue"}, "example": {"message": "Quia ut pariatur.", "name": "Distinctio voluptatem explicabo aut.", "value": "Et alias."}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}, "example": {"message": "Omnis voluptas sapiente laboriosam sint sit."}}}}, "503": {"description": "not-available: service currently not available"}}, "security": [{"jwt_header_Authorization": ["consumer:write"]}]}}, "/1/orders/{id}": {"get": {"tags": ["order"], "summary": "read order", "description": "Show orders by ID", "operationId": "order#read", "parameters": [{"name": "id", "in": "path", "description": "ID of orders to show", "required": true, "schema": {"type": "string", "description": "ID of orders to show", "example": "urn:ivcap:orders"}, "example": "urn:ivcap:orders"}], "responses": {"200": {"description": "OK response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/OrderStatusRT"}, "example": {"account": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "finished-at": "1996-12-19T16:39:57-08:00", "id": "urn:ivcap:order:123e4567-e89b-12d3-a456-426614174000", "links": [{"href": "https://api.ivcap.net/1/....", "rel": "self", "type": "application/json"}, {"href": "https://api.ivcap.net/1/openapi/openapi3.json#/components/schemas/user", "rel": "describedBy", "type": "application/json"}], "name": "Fire risk for Lot2", "ordered-at": "1996-12-19T16:39:57-08:00", "parameters": [{"name": "region", "value": "Upper Valley"}, {"name": "threshold", "value": "10"}], "products": {"items": [{"data-href": "https:/.../1/artifacts/0000-00001220/blob", "href": "https:/.../1/artifacts/0000-00001220", "mime-type": "image/geo+tiff", "name": "fire risk map", "size": 1234963}], "links": [{"href": "https://api.ivcap.net/1/....", "rel": "next"}]}, "service": "urn:ivcap:service:123e4567-e89b-12d3-a456-426614174000", "started-at": "1996-12-19T16:39:57-08:00", "status": "succeeded", "tags": ["tag1", "tag2"]}}}}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}, "example": {"id": "123e4567-e89b-12d3-a456-426614174000", "message": "Odit aut quod nihil aperiam."}}}}, "404": {"description": "not-found: orders not found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ResourceNotFoundT"}, "example": {"id": "cayp:type:123e4567-e89b-12d3-a456-426614174000", "message": "Resource 123...00 not found"}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}, "example": {"message": "Ut enim ut fugit possimus pariatur."}}}}}, "security": [{"jwt_header_Authorization": ["consumer:read"]}]}}, "/1/orders/{orderID}/logs": {"get": {"tags": ["order"], "summary": "logs order", "description": "download order logs", "operationId": "order#logs", "parameters": [{"name": "orderID", "in": "path", "description": "Reference to order requested", "required": true, "schema": {"type": "string", "description": "Reference to order requested", "example": "urn:ivcap:order:123e4567-e89b-12d3-a456-426614174000", "format": "uri"}, "example": "urn:ivcap:order:123e4567-e89b-12d3-a456-426614174000"}, {"name": "from", "in": "query", "description": "From unix time, seconds since 1970-01-01", "allowEmptyValue": true, "schema": {"type": "integer", "description": "From unix time, seconds since 1970-01-01", "example": 1257894000, "format": "int64"}, "example": 1257894000}, {"name": "to", "in": "query", "description": "To unix time, seconds since 1970-01-01", "allowEmptyValue": true, "schema": {"type": "integer", "description": "To unix time, seconds since 1970-01-01", "example": 1257894000, "format": "int64"}, "example": 1257894000}], "responses": {"200": {"description": "OK response.", "content": {"application/json": {"schema": {"type": "string", "format": "binary"}}}}, "400": {"description": "invalid-credential: Provided credential is not valid", "content": {"application/json": {"schema": {"type": "string", "format": "binary"}}}}, "401": {"description": "not-authorized: unauthorized access request", "content": {"application/json": {"schema": {"type": "string", "format": "binary"}}}}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}, "example": {"id": "123e4567-e89b-12d3-a456-426614174000", "message": "Voluptas molestiae ut officiis."}}}}, "404": {"description": "not-found:  not found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ResourceNotFoundT"}, "example": {"id": "cayp:type:123e4567-e89b-12d3-a456-426614174000", "message": "Resource 123...00 not found"}}}}, "422": {"description": "invalid-parameter: Request contained semantically wrong parameter value", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidParameterValue"}, "example": {"message": "Autem deserunt sit architecto qui quidem.", "name": "Quae provident dolor amet nulla.", "value": "Reprehenderit molestiae cupiditate voluptas et voluptatibus illum."}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}, "example": {"message": "Corporis autem odit ut unde fuga."}}}}}, "security": [{"jwt_header_Authorization": ["consumer:read"]}]}}, "/1/orders/{orderID}/metadata": {"get": {"tags": ["order"], "summary": "metadata order", "description": "list metadata created by an order", "operationId": "order#metadata", "parameters": [{"name": "orderID", "in": "path", "description": "Reference to order requested", "required": true, "schema": {"type": "string", "description": "Reference to order requested", "example": "urn:ivcap:order:123e4567-e89b-12d3-a456-426614174000"}, "example": "urn:ivcap:order:123e4567-e89b-12d3-a456-426614174000"}, {"name": "order-by", "in": "query", "description": "The 'orderby' query option allows clients to request resources in either\n\t\t\tascending order using asc or descending order using desc. If asc or desc not specified,\n\t\t\tthen the resources will be ordered in ascending order. The request below orders Trips on\n\t\t\tproperty EndsAt in descending order.", "allowEmptyValue": true, "schema": {"type": "string", "description": "The 'orderby' query option allows clients to request resources in either\n\t\t\tascending order using asc or descending order using desc. If asc or desc not specified,\n\t\t\tthen the resources will be ordered in ascending order. The request below orders Trips on\n\t\t\tproperty EndsAt in descending order.", "example": "orderby=EndsAt"}, "example": "orderby=EndsAt"}, {"name": "order-desc", "in": "query", "description": "When set order result in descending order. Ascending order is the lt.", "allowEmptyValue": true, "schema": {"type": "boolean", "description": "When set order result in descending order. Ascending order is the lt.", "default": false, "example": true}, "example": false}, {"name": "limit", "in": "query", "description": "The 'limit' query option sets the maximum number of items\n\t\t\tto be included in the result.", "allowEmptyValue": true, "schema": {"type": "integer", "description": "The 'limit' query option sets the maximum number of items\n\t\t\tto be included in the result.", "default": 10, "example": 10, "format": "int64", "minimum": 1, "maximum": 50}, "example": 10}, {"name": "page", "in": "query", "description": "The content of 'page' is returned in the 'links' part of a previous query and\n\t\t\twill when set, ALL other parameters, except for 'limit' are ignored.", "allowEmptyValue": true, "schema": {"type": "string", "description": "The content of 'page' is returned in the 'links' part of a previous query and\n\t\t\twill when set, ALL other parameters, except for 'limit' are ignored.", "example": "gdsgQwhdgd"}, "example": "gdsgQwhdgd"}], "responses": {"200": {"description": "OK response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/PartialMetaListT"}, "example": {"items": [{"data-href": "https:/.../1/artifacts/0000-00001220/blob", "href": "https:/.../1/artifacts/0000-00001220", "mime-type": "image/geo+tiff", "name": "fire risk map", "size": 1234963}], "links": [{"href": "https://api.ivcap.net/1/....", "rel": "next"}]}}}}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}, "example": {"id": "123e4567-e89b-12d3-a456-426614174000", "message": "Iure soluta."}}}}, "404": {"description": "not-found:  not found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ResourceNotFoundT"}, "example": {"id": "cayp:type:123e4567-e89b-12d3-a456-426614174000", "message": "Resource 123...00 not found"}}}}, "422": {"description": "invalid-parameter: Request contained semantically wrong parameter value", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidParameterValue"}, "example": {"message": "Rem incidunt dolorum vitae magni.", "name": "Dolore et soluta.", "value": "Vero est consectetur."}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}, "example": {"message": "Beatae qui repellendus molestias culpa aut."}}}}}, "security": [{"jwt_header_Authorization": ["consumer:read"]}]}}, "/1/orders/{orderID}/products": {"get": {"tags": ["order"], "summary": "products order", "description": "list products created by an order", "operationId": "order#products", "parameters": [{"name": "orderID", "in": "path", "description": "Reference to order requested", "required": true, "schema": {"type": "string", "description": "Reference to order requested", "example": "urn:ivcap:order:123e4567-e89b-12d3-a456-426614174000"}, "example": "urn:ivcap:order:123e4567-e89b-12d3-a456-426614174000"}, {"name": "order-by", "in": "query", "description": "The 'orderby' query option allows clients to request resources in either\n\t\t\tascending order using asc or descending order using desc. If asc or desc not specified,\n\t\t\tthen the resources will be ordered in ascending order. The request below orders Trips on\n\t\t\tproperty EndsAt in descending order.", "allowEmptyValue": true, "schema": {"type": "string", "description": "The 'orderby' query option allows clients to request resources in either\n\t\t\tascending order using asc or descending order using desc. If asc or desc not specified,\n\t\t\tthen the resources will be ordered in ascending order. The request below orders Trips on\n\t\t\tproperty EndsAt in descending order.", "example": "orderby=EndsAt"}, "example": "orderby=EndsAt"}, {"name": "order-desc", "in": "query", "description": "When set order result in descending order. Ascending order is the lt.", "allowEmptyValue": true, "schema": {"type": "boolean", "description": "When set order result in descending order. Ascending order is the lt.", "default": false, "example": true}, "example": true}, {"name": "limit", "in": "query", "description": "The 'limit' query option sets the maximum number of items\n\t\t\tto be included in the result.", "allowEmptyValue": true, "schema": {"type": "integer", "description": "The 'limit' query option sets the maximum number of items\n\t\t\tto be included in the result.", "default": 10, "example": 10, "format": "int64", "minimum": 1, "maximum": 50}, "example": 10}, {"name": "page", "in": "query", "description": "The content of 'page' is returned in the 'links' part of a previous query and\n\t\t\twill when set, ALL other parameters, except for 'limit' are ignored.", "allowEmptyValue": true, "schema": {"type": "string", "description": "The content of 'page' is returned in the 'links' part of a previous query and\n\t\t\twill when set, ALL other parameters, except for 'limit' are ignored.", "example": "gdsgQwhdgd"}, "example": "gdsgQwhdgd"}], "responses": {"200": {"description": "OK response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/PartialProductListT"}, "example": {"items": [{"data-href": "https:/.../1/artifacts/0000-00001220/blob", "href": "https:/.../1/artifacts/0000-00001220", "mime-type": "image/geo+tiff", "name": "fire risk map", "size": 1234963}], "links": [{"href": "https://api.ivcap.net/1/....", "rel": "next"}]}}}}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}, "example": {"id": "123e4567-e89b-12d3-a456-426614174000", "message": "Magni corrupti reiciendis est incidunt sed rerum."}}}}, "404": {"description": "not-found:  not found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ResourceNotFoundT"}, "example": {"id": "cayp:type:123e4567-e89b-12d3-a456-426614174000", "message": "Resource 123...00 not found"}}}}, "422": {"description": "invalid-parameter: Request contained semantically wrong parameter value", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidParameterValue"}, "example": {"message": "Ea minus.", "name": "Consequatur sed.", "value": "Ut soluta qui."}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}, "example": {"message": "Quidem est ipsa."}}}}}, "security": [{"jwt_header_Authorization": ["consumer:read"]}]}}, "/1/orders/{orderID}/top": {"get": {"tags": ["order"], "summary": "top order", "description": "top order resources", "operationId": "order#top", "parameters": [{"name": "orderID", "in": "path", "description": "Reference to order requested", "required": true, "schema": {"type": "string", "description": "Reference to order requested", "example": "urn:ivcap:order:123e4567-e89b-12d3-a456-426614174000", "format": "uri"}, "example": "urn:ivcap:order:123e4567-e89b-12d3-a456-426614174000"}], "responses": {"200": {"description": "OK response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/OrderTopResultItemCollection"}, "example": [{"container": "Tempora quisquam est soluta.", "cpu": "Assumenda dolorem non dolorum nihil esse.", "ephemeral-storage": "Quo ut rem exercitationem.", "memory": "A fuga officiis et.", "storage": "Saepe distinctio accusamus ea et recusandae repudiandae."}, {"container": "Tempora quisquam est soluta.", "cpu": "Assumenda dolorem non dolorum nihil esse.", "ephemeral-storage": "Quo ut rem exercitationem.", "memory": "A fuga officiis et.", "storage": "Saepe distinctio accusamus ea et recusandae repudiandae."}]}}}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}, "example": {"id": "123e4567-e89b-12d3-a456-426614174000", "message": "Dicta eos officiis architecto vel iste doloremque."}}}}, "404": {"description": "not-found:  not found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ResourceNotFoundT"}, "example": {"id": "cayp:type:123e4567-e89b-12d3-a456-426614174000", "message": "Resource 123...00 not found"}}}}, "422": {"description": "invalid-parameter: Request contained semantically wrong parameter value", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidParameterValue"}, "example": {"message": "Quae nemo numquam.", "name": "Eum commodi repellat omnis.", "value": "Quia nobis itaque porro ipsum."}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}, "example": {"message": "Similique iste saepe repellendus."}}}}}, "security": [{"jwt_header_Authorization": ["consumer:read"]}]}}, "/1/queues": {"get": {"tags": ["queue"], "summary": "list queue", "description": "list queues", "operationId": "queue#list", "parameters": [{"name": "limit", "in": "query", "description": "The 'limit' query option sets the maximum number of items\n\t\t\tto be included in the result.", "allowEmptyValue": true, "schema": {"type": "integer", "description": "The 'limit' query option sets the maximum number of items\n\t\t\tto be included in the result.", "default": 10, "example": 10, "format": "int64", "minimum": 1, "maximum": 50}, "example": 10}, {"name": "page", "in": "query", "description": "The content of 'page' is returned in the 'links' part of a previous query and\n\t\t\twill when set, ALL other parameters, except for 'limit' are ignored.", "allowEmptyValue": true, "schema": {"type": "string", "description": "The content of 'page' is returned in the 'links' part of a previous query and\n\t\t\twill when set, ALL other parameters, except for 'limit' are ignored.", "example": "gdsgQwhdgd"}, "example": "gdsgQwhdgd"}, {"name": "filter", "in": "query", "description": "The 'filter' system query option allows clients to filter a collection of\n\t\t\t\tresources that are addressed by a request URL. The expression specified with 'filter'\n\t\t\t\tis evaluated for each resource in the collection, and only items where the expression\n\t\t\t\tevaluates to true are included in the response.", "allowEmptyValue": true, "schema": {"type": "string", "description": "The 'filter' system query option allows clients to filter a collection of\n\t\t\t\tresources that are addressed by a request URL. The expression specified with 'filter'\n\t\t\t\tis evaluated for each resource in the collection, and only items where the expression\n\t\t\t\tevaluates to true are included in the response.", "example": "name ~= 'Scott%'"}, "example": "name ~= 'Scott%'"}, {"name": "order-by", "in": "query", "description": "The 'orderby' query option allows clients to request resources in either\n\t\t\tascending order using asc or descending order using desc. If asc or desc not specified,\n\t\t\tthen the resources will be ordered in ascending order. The request below orders Trips on\n\t\t\tproperty EndsAt in descending order.", "allowEmptyValue": true, "schema": {"type": "string", "description": "The 'orderby' query option allows clients to request resources in either\n\t\t\tascending order using asc or descending order using desc. If asc or desc not specified,\n\t\t\tthen the resources will be ordered in ascending order. The request below orders Trips on\n\t\t\tproperty EndsAt in descending order.", "example": "orderby=EndsAt"}, "example": "orderby=EndsAt"}, {"name": "order-desc", "in": "query", "description": "When set order result in descending order. Ascending order is the lt.", "allowEmptyValue": true, "schema": {"type": "boolean", "description": "When set order result in descending order. Ascending order is the lt.", "default": false, "example": true}, "example": false}, {"name": "at-time", "in": "query", "description": "Return the state of the respective resources at that time [now]", "allowEmptyValue": true, "schema": {"type": "string", "description": "Return the state of the respective resources at that time [now]", "example": "1996-12-19T16:39:57-08:00", "format": "date-time"}, "example": "1996-12-19T16:39:57-08:00"}], "responses": {"200": {"description": "OK response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/QueueListResult"}, "example": {"at-time": "1996-12-19T16:39:57-08:00", "items": [{"account": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "description": "Events for the event service", "href": "https://api.ivcap.net/1/services/...", "id": "urn:ivcap:service:123e4567-e89b-12d3-a456-426614174000", "name": "events"}, {"account": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "description": "Events for the event service", "href": "https://api.ivcap.net/1/services/...", "id": "urn:ivcap:service:123e4567-e89b-12d3-a456-426614174000", "name": "events"}], "links": [{"href": "https://api.ivcap.net/1/....", "rel": "self", "type": "application/json"}, {"href": "https://api.ivcap.net/1/....", "rel": "first", "type": "application/json"}, {"href": "https://api.ivcap.net/1/....", "rel": "next", "type": "application/json"}, {"href": "https://api.ivcap.net/1/openapi/openapi3.json#/components/schemas/user", "rel": "describedBy", "type": "application/openapi3+json"}]}}}}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}, "example": {"id": "123e4567-e89b-12d3-a456-426614174000", "message": "Sed sit expedita enim et ullam quis."}}}}, "422": {"description": "invalid-parameter: Request contained semantically wrong parameter value", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidParameterValue"}, "example": {"message": "Eum et voluptas vitae qui.", "name": "Nemo occaecati amet et consectetur.", "value": "Voluptas doloribus optio."}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}, "example": {"message": "Veritatis dolorum."}}}}}, "security": [{"jwt_header_Authorization": ["consumer:read"]}]}, "post": {"tags": ["queue"], "summary": "create queue", "description": "Create a new queues and return its status.", "operationId": "queue#create", "requestBody": {"description": "New queues description", "required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/PayloadForCreateEndpoint"}, "example": {"name": "Fire risk for Lot2", "parameters": [{"name": "region", "value": "Upper Valley"}, {"name": "threshold", "value": "10"}], "policy": "urn:ivcap:policy:123e4567-e89b-12d3-a456-426614174000", "service": "urn:ivcap:service:123e4567-e89b-12d3-a456-426614174000", "tags": ["tag1", "tag2"]}}}}, "responses": {"201": {"description": "Created response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Createqueueresponse"}, "example": {"account": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "created-at": "1996-12-19T16:39:57-08:00", "description": "Events for the event service", "id": "urn:ivcap:queue:123e4567-e89b-12d3-a456-426614174000", "name": "events"}}}}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}, "example": {"id": "123e4567-e89b-12d3-a456-426614174000", "message": "Est hic."}}}}, "404": {"description": "not-found:  not found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ResourceNotFoundT"}, "example": {"id": "cayp:type:123e4567-e89b-12d3-a456-426614174000", "message": "Resource 123...00 not found"}}}}, "409": {"description": "already-created: Resource already exists", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ResourceNotFoundT"}, "example": {"id": "cayp:type:123e4567-e89b-12d3-a456-426614174000", "message": "Resource 123...00 already exists"}}}}, "422": {"description": "invalid-parameter: Request contained semantically wrong parameter value", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidParameterValue"}, "example": {"message": "Consequatur unde neque cumque.", "name": "Officiis eligendi pariatur.", "value": "Est et quod porro quaerat deleniti aut."}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}, "example": {"message": "Error fugit quos ab et sed."}}}}}, "security": [{"jwt_header_Authorization": ["consumer:write"]}]}}, "/1/queues/{id}": {"delete": {"tags": ["queue"], "summary": "delete queue", "description": "Delete an existing queues.", "operationId": "queue#delete", "parameters": [{"name": "id", "in": "path", "description": "ID of queues to update", "required": true, "schema": {"type": "string", "description": "ID of queues to update", "example": "Eos mollitia ab ut ullam."}, "example": "Nihil quis commodi."}], "responses": {"204": {"description": "No Content response."}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}, "example": {"id": "123e4567-e89b-12d3-a456-426614174000", "message": "Vel et voluptas voluptatem ea."}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}, "example": {"message": "Et ut et."}}}}}, "security": [{"jwt_header_Authorization": ["consumer:write"]}]}, "get": {"tags": ["queue"], "summary": "read queue", "description": "Show queues by ID", "operationId": "queue#read", "parameters": [{"name": "id", "in": "path", "description": "ID of queues to show", "required": true, "schema": {"type": "string", "description": "ID of queues to show", "example": "urn:ivcap:queues"}, "example": "urn:ivcap:queues"}], "responses": {"200": {"description": "OK response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Readqueueresponse"}, "example": {"bytes": 8214803843331994561, "consumer-count": 6146480368388201192, "created-at": "1996-12-19T16:39:57-08:00", "description": "Events for the event service", "first-seq": 16067911948527975578, "first-time": "1996-12-19T16:39:57-08:00", "last-seq": 10274963808374938914, "last-time": "1996-12-19T16:39:57-08:00", "name": "events", "total-messages": 8852402284879605881}}}}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}, "example": {"id": "123e4567-e89b-12d3-a456-426614174000", "message": "Ullam ipsum et perferendis deleniti."}}}}, "404": {"description": "not-found: queues not found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ResourceNotFoundT"}, "example": {"id": "cayp:type:123e4567-e89b-12d3-a456-426614174000", "message": "Resource 123...00 not found"}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}, "example": {"message": "Eius voluptatibus tempore assumenda et qui accusantium."}}}}}, "security": [{"jwt_header_Authorization": ["consumer:read"]}]}}, "/1/queues/{id}/messages": {"get": {"tags": ["queue"], "summary": "dequeue queue", "description": "Read a message from a specific queues.", "operationId": "queue#dequeue", "parameters": [{"name": "id", "in": "path", "description": "queue", "required": true, "schema": {"type": "string", "description": "queue", "example": "urn:ivcap:queue:123e4567-e89b-12d3-a456-426614174000", "format": "uri"}, "example": "urn:ivcap:queue:123e4567-e89b-12d3-a456-426614174000"}, {"name": "batch", "in": "query", "description": "Number of messages to dequeue", "allowEmptyValue": true, "schema": {"type": "integer", "description": "Number of messages to dequeue", "example": 3, "format": "int64"}, "example": 3}], "responses": {"200": {"description": "OK response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/MessageStatusList"}, "example": {"at-time": "1996-12-19T16:39:57-08:00", "items": [{"data": {"content": "ewogICAgIm1lc3NhZ2UiOiAiTmV2ZXIgZ29ubmEgZ2l2ZSB5b3UgdXAsIG5ldmVyIGdvbm5hIGxldCB5b3UgZG93bi4uLiIsCiAgICAibGluayI6ICJodHRwczovL3d3dy55b3V0dWJlLmNvbS93YXRjaD92PWRRdzR3OVdnWGNRIgp9Cg==", "content-type": "application/json", "schema": "urn:ivcap:schema:message:queue.1"}, "sequence": 14544394773804368698}, {"data": {"content": "ewogICAgIm1lc3NhZ2UiOiAiTmV2ZXIgZ29ubmEgZ2l2ZSB5b3UgdXAsIG5ldmVyIGdvbm5hIGxldCB5b3UgZG93bi4uLiIsCiAgICAibGluayI6ICJodHRwczovL3d3dy55b3V0dWJlLmNvbS93YXRjaD92PWRRdzR3OVdnWGNRIgp9Cg==", "content-type": "application/json", "schema": "urn:ivcap:schema:message:queue.1"}, "sequence": 14544394773804368698}]}}}}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}, "example": {"id": "123e4567-e89b-12d3-a456-426614174000", "message": "Suscipit atque exercitationem nobis."}}}}, "422": {"description": "invalid-parameter: Request contained semantically wrong parameter value", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidParameterValue"}, "example": {"message": "Numquam repudiandae est laudantium odio exercitationem.", "name": "Odit et doloremque esse dolorem laudantium.", "value": "Laboriosam dolores incidunt."}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}, "example": {"message": "Voluptate quia nihil facilis alias."}}}}, "503": {"description": "not-available: service currently not available"}}, "security": [{"jwt_header_Authorization": ["consumer:read"]}]}, "post": {"tags": ["queue"], "summary": "enqueue queue", "description": "Send a message to a specific queues.", "operationId": "queue#enqueue", "parameters": [{"name": "id", "in": "path", "description": "queue", "required": true, "schema": {"type": "string", "description": "queue", "example": "urn:ivcap:queue:123e4567-e89b-12d3-a456-426614174000", "format": "uri"}, "example": "urn:ivcap:queue:123e4567-e89b-12d3-a456-426614174000"}], "requestBody": {"description": "Messages to queue", "required": true, "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/QueueMessage"}, "description": "Messages to queue", "example": [{"content": "ewogICAgIm1lc3NhZ2UiOiAiTmV2ZXIgZ29ubmEgZ2l2ZSB5b3UgdXAsIG5ldmVyIGdvbm5hIGxldCB5b3UgZG93bi4uLiIsCiAgICAibGluayI6ICJodHRwczovL3d3dy55b3V0dWJlLmNvbS93YXRjaD92PWRRdzR3OVdnWGNRIgp9Cg==", "content-type": "application/json", "schema": "urn:ivcap:schema:message:queue.1"}, {"content": "ewogICAgInF1ZXN0aW9uIjogIldoeSBkbyBwcm9ncmFtbWVycyBwcmVmZXIgZGFyayBtb2RlPyIsCiAgICAiYW5zd2VyIjogIkJlY2F1c2UgbGlnaHQgYXR0cmFjdHMgYnVncyEiCn0K", "content-type": "application/json", "schema": "urn:ivcap:schema:message:queue.1"}, {"content": "ewogICAgInF1ZXN0aW9uIjogIldoYXQgc2NyZWFtcyBgSSBhbSBpbnNlY3VyZWAiLAogICAgImFuc3dlciI6ICJodHRwIgp9Cg==", "content-type": "application/json", "schema": "urn:ivcap:schema:message:queue.1"}]}, "example": [{"content": "ewogICAgIm1lc3NhZ2UiOiAiTmV2ZXIgZ29ubmEgZ2l2ZSB5b3UgdXAsIG5ldmVyIGdvbm5hIGxldCB5b3UgZG93bi4uLiIsCiAgICAibGluayI6ICJodHRwczovL3d3dy55b3V0dWJlLmNvbS93YXRjaD92PWRRdzR3OVdnWGNRIgp9Cg==", "content-type": "application/json", "schema": "urn:ivcap:schema:message:queue.1"}, {"content": "ewogICAgInF1ZXN0aW9uIjogIldoeSBkbyBwcm9ncmFtbWVycyBwcmVmZXIgZGFyayBtb2RlPyIsCiAgICAiYW5zd2VyIjogIkJlY2F1c2UgbGlnaHQgYXR0cmFjdHMgYnVncyEiCn0K", "content-type": "application/json", "schema": "urn:ivcap:schema:message:queue.1"}, {"content": "ewogICAgInF1ZXN0aW9uIjogIldoYXQgc2NyZWFtcyBgSSBhbSBpbnNlY3VyZWAiLAogICAgImFuc3dlciI6ICJodHRwIgp9Cg==", "content-type": "application/json", "schema": "urn:ivcap:schema:message:queue.1"}]}}}, "responses": {"200": {"description": "OK response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/MessageStatusList"}, "example": {"at-time": "1996-12-19T16:39:57-08:00", "items": [{"data": {"content": "ewogICAgIm1lc3NhZ2UiOiAiTmV2ZXIgZ29ubmEgZ2l2ZSB5b3UgdXAsIG5ldmVyIGdvbm5hIGxldCB5b3UgZG93bi4uLiIsCiAgICAibGluayI6ICJodHRwczovL3d3dy55b3V0dWJlLmNvbS93YXRjaD92PWRRdzR3OVdnWGNRIgp9Cg==", "content-type": "application/json", "schema": "urn:ivcap:schema:message:queue.1"}, "sequence": 14544394773804368698}, {"data": {"content": "ewogICAgIm1lc3NhZ2UiOiAiTmV2ZXIgZ29ubmEgZ2l2ZSB5b3UgdXAsIG5ldmVyIGdvbm5hIGxldCB5b3UgZG93bi4uLiIsCiAgICAibGluayI6ICJodHRwczovL3d3dy55b3V0dWJlLmNvbS93YXRjaD92PWRRdzR3OVdnWGNRIgp9Cg==", "content-type": "application/json", "schema": "urn:ivcap:schema:message:queue.1"}, "sequence": 14544394773804368698}, {"data": {"content": "ewogICAgIm1lc3NhZ2UiOiAiTmV2ZXIgZ29ubmEgZ2l2ZSB5b3UgdXAsIG5ldmVyIGdvbm5hIGxldCB5b3UgZG93bi4uLiIsCiAgICAibGluayI6ICJodHRwczovL3d3dy55b3V0dWJlLmNvbS93YXRjaD92PWRRdzR3OVdnWGNRIgp9Cg==", "content-type": "application/json", "schema": "urn:ivcap:schema:message:queue.1"}, "sequence": 14544394773804368698}]}}}}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}, "example": {"id": "123e4567-e89b-12d3-a456-426614174000", "message": "Nihil molestias ut at eligendi."}}}}, "422": {"description": "invalid-parameter: Request contained semantically wrong parameter value", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidParameterValue"}, "example": {"message": "Praesentium autem quis sit inventore et.", "name": "Eum nam laudantium laboriosam eum accusamus sequi.", "value": "Maxime magnam blanditiis."}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}, "example": {"message": "Fugiat repudiandae mollitia aliquam labore."}}}}, "503": {"description": "not-available: service currently not available"}}, "security": [{"jwt_header_Authorization": ["consumer:write"]}]}}, "/1/services": {"get": {"tags": ["service"], "summary": "list service", "description": "list services", "operationId": "service#list", "parameters": [{"name": "limit", "in": "query", "description": "The 'limit' query option sets the maximum number of items\n\t\t\tto be included in the result.", "allowEmptyValue": true, "schema": {"type": "integer", "description": "The 'limit' query option sets the maximum number of items\n\t\t\tto be included in the result.", "default": 10, "example": 10, "format": "int64", "minimum": 1, "maximum": 50}, "example": 10}, {"name": "page", "in": "query", "description": "The content of 'page' is returned in the 'links' part of a previous query and\n\t\t\twill when set, ALL other parameters, except for 'limit' are ignored.", "allowEmptyValue": true, "schema": {"type": "string", "description": "The content of 'page' is returned in the 'links' part of a previous query and\n\t\t\twill when set, ALL other parameters, except for 'limit' are ignored.", "example": "gdsgQwhdgd"}, "example": "gdsgQwhdgd"}, {"name": "filter", "in": "query", "description": "The 'filter' system query option allows clients to filter a collection of\n\t\t\t\tresources that are addressed by a request URL. The expression specified with 'filter'\n\t\t\t\tis evaluated for each resource in the collection, and only items where the expression\n\t\t\t\tevaluates to true are included in the response.", "allowEmptyValue": true, "schema": {"type": "string", "description": "The 'filter' system query option allows clients to filter a collection of\n\t\t\t\tresources that are addressed by a request URL. The expression specified with 'filter'\n\t\t\t\tis evaluated for each resource in the collection, and only items where the expression\n\t\t\t\tevaluates to true are included in the response.", "example": "name ~= 'Scott%'"}, "example": "name ~= 'Scott%'"}, {"name": "order-by", "in": "query", "description": "The 'orderby' query option allows clients to request resources in either\n\t\t\tascending order using asc or descending order using desc. If asc or desc not specified,\n\t\t\tthen the resources will be ordered in ascending order. The request below orders Trips on\n\t\t\tproperty EndsAt in descending order.", "allowEmptyValue": true, "schema": {"type": "string", "description": "The 'orderby' query option allows clients to request resources in either\n\t\t\tascending order using asc or descending order using desc. If asc or desc not specified,\n\t\t\tthen the resources will be ordered in ascending order. The request below orders Trips on\n\t\t\tproperty EndsAt in descending order.", "example": "orderby=EndsAt"}, "example": "orderby=EndsAt"}, {"name": "order-desc", "in": "query", "description": "When set order result in descending order. Ascending order is the lt.", "allowEmptyValue": true, "schema": {"type": "boolean", "description": "When set order result in descending order. Ascending order is the lt.", "default": false, "example": false}, "example": false}, {"name": "at-time", "in": "query", "description": "Return the state of the respective resources at that time [now]", "allowEmptyValue": true, "schema": {"type": "string", "description": "Return the state of the respective resources at that time [now]", "example": "1996-12-19T16:39:57-08:00", "format": "date-time"}, "example": "1996-12-19T16:39:57-08:00"}], "responses": {"200": {"description": "OK response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ServiceListRT"}, "example": {"at-time": "1996-12-19T16:39:57-08:00", "items": [{"account": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "description": "Some lengthy description of fire risk", "href": "https://api.ivcap.net/1/services/...", "id": "urn:ivcap:service:123e4567-e89b-12d3-a456-426614174000", "name": "Fire risk for region"}, {"account": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "description": "Some lengthy description of fire risk", "href": "https://api.ivcap.net/1/services/...", "id": "urn:ivcap:service:123e4567-e89b-12d3-a456-426614174000", "name": "Fire risk for region"}, {"account": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "description": "Some lengthy description of fire risk", "href": "https://api.ivcap.net/1/services/...", "id": "urn:ivcap:service:123e4567-e89b-12d3-a456-426614174000", "name": "Fire risk for region"}], "links": [{"href": "https://api.ivcap.net/1/....", "rel": "self", "type": "application/json"}, {"href": "https://api.ivcap.net/1/....", "rel": "first", "type": "application/json"}, {"href": "https://api.ivcap.net/1/....", "rel": "next", "type": "application/json"}, {"href": "https://api.ivcap.net/1/openapi/openapi3.json#/components/schemas/user", "rel": "describedBy", "type": "application/openapi3+json"}]}}}}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}, "example": {"id": "123e4567-e89b-12d3-a456-426614174000", "message": "Nostrum ex."}}}}, "422": {"description": "invalid-parameter: Request contained semantically wrong parameter value", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidParameterValue"}, "example": {"message": "Est iusto eum rerum dolores sed.", "name": "Quaerat nulla iure illum eum.", "value": "Temporibus eum quo corporis qui molestiae."}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}, "example": {"message": "Laborum qui."}}}}}, "security": [{"jwt_header_Authorization": ["consumer:read"]}]}, "post": {"tags": ["service"], "summary": "create_service service", "description": "Create a new services and return its status.", "operationId": "service#create_service", "requestBody": {"description": "New services description", "required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ServiceDefinitionT"}, "example": {"banner": "http://cartwright.org/lavinia_marquardt", "description": "This service ...", "name": "Fire risk for Lot2", "parameters": [{"description": "The name of the region as according to ...", "label": "Region Name", "name": "region", "type": "string"}, {"label": "Rainfall/month threshold", "name": "threshold", "type": "float", "unit": "m"}], "policy": "urn:ivcap:policy:123e4567-e89b-12d3-a456-426614174000", "references": [{"title": "Dignissimos fuga facere minus aliquid qui magnam.", "uri": "http://mcglynn.info/yvette.pouros"}, {"title": "Dignissimos fuga facere minus aliquid qui magnam.", "uri": "http://mcglynn.info/yvette.pouros"}], "tags": ["tag1", "tag2"], "workflow": {"argo": "Natus officia quae sed blanditiis vero.", "basic": {"command": ["/bin/sh", "-c", "echo $PATH"], "cpu": {"limit": "100m", "request": "10m"}, "ephemeral-storage": {"limit": "4Gi", "request": "2Gi"}, "gpu-number": 2, "gpu-type": "nvidia-tesla-t4", "image": "alpine", "memory": {"limit": "100Mi", "request": "10Mi"}}, "opts": "Aut consequuntur occaecati sint et dolor.", "type": "basic"}}}}}, "responses": {"201": {"description": "Created response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ServiceStatusRT"}, "example": {"account": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "description": "This service ...", "id": "urn:ivcap:service:123e4567-e89b-12d3-a456-426614174000", "links": [{"href": "https://api.ivcap.net/1/....", "rel": "self", "type": "application/json"}, {"href": "https://api.ivcap.net/1/openapi/openapi3.json#/components/schemas/user", "rel": "describedBy", "type": "application/json"}], "name": "Fire risk for Lot2", "parameters": [{"description": "The name of the region as according to ...", "label": "Region Name", "name": "region", "type": "string"}, {"label": "Rainfall/month threshold", "name": "threshold", "type": "float", "unit": "m"}], "status": "error", "tags": ["tag1", "tag2"]}}}}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}, "example": {"id": "123e4567-e89b-12d3-a456-426614174000", "message": "Corporis temporibus nostrum et temporibus et."}}}}, "404": {"description": "not-found:  not found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ResourceNotFoundT"}, "example": {"id": "cayp:type:123e4567-e89b-12d3-a456-426614174000", "message": "Resource 123...00 not found"}}}}, "409": {"description": "already-created: Resource already exists", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ResourceNotFoundT"}, "example": {"id": "cayp:type:123e4567-e89b-12d3-a456-426614174000", "message": "Resource 123...00 already exists"}}}}, "422": {"description": "invalid-parameter: Request contained semantically wrong parameter value", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidParameterValue"}, "example": {"message": "Ea est quaerat.", "name": "Aut modi autem dolore eos rerum.", "value": "Optio voluptatem cupiditate est omnis quo aut."}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}, "example": {"message": "Voluptate quidem possimus eum quam est consequatur."}}}}}, "security": [{"jwt_header_Authorization": ["consumer:write"]}]}}, "/1/services/{id}": {"delete": {"tags": ["service"], "summary": "delete service", "description": "Delete an existing services.", "operationId": "service#delete", "parameters": [{"name": "id", "in": "path", "description": "ID of services to update", "required": true, "schema": {"type": "string", "description": "ID of services to update", "example": "Vitae qui blanditiis."}, "example": "Odio et aliquam vero enim accusantium."}], "responses": {"204": {"description": "No Content response."}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}, "example": {"id": "123e4567-e89b-12d3-a456-426614174000", "message": "Nam natus voluptas facere."}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}, "example": {"message": "Quia saepe eaque fugit."}}}}}, "security": [{"jwt_header_Authorization": ["consumer:write"]}]}, "get": {"tags": ["service"], "summary": "read service", "description": "Show services by ID", "operationId": "service#read", "parameters": [{"name": "id", "in": "path", "description": "ID of services to show", "required": true, "schema": {"type": "string", "description": "ID of services to show", "example": "urn:ivcap:services"}, "example": "urn:ivcap:services"}], "responses": {"200": {"description": "OK response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ServiceStatusRT"}, "example": {"account": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "description": "This service ...", "id": "urn:ivcap:service:123e4567-e89b-12d3-a456-426614174000", "links": [{"href": "https://api.ivcap.net/1/....", "rel": "self", "type": "application/json"}, {"href": "https://api.ivcap.net/1/openapi/openapi3.json#/components/schemas/user", "rel": "describedBy", "type": "application/json"}], "name": "Fire risk for Lot2", "parameters": [{"description": "The name of the region as according to ...", "label": "Region Name", "name": "region", "type": "string"}, {"label": "Rainfall/month threshold", "name": "threshold", "type": "float", "unit": "m"}], "status": "error", "tags": ["tag1", "tag2"]}}}}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}, "example": {"id": "123e4567-e89b-12d3-a456-426614174000", "message": "Repellendus reiciendis nulla et enim blanditiis et."}}}}, "404": {"description": "not-found: services not found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ResourceNotFoundT"}, "example": {"id": "cayp:type:123e4567-e89b-12d3-a456-426614174000", "message": "Resource 123...00 not found"}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}, "example": {"message": "Saepe minima non qui quos."}}}}}, "security": [{"jwt_header_Authorization": ["consumer:read"]}]}, "put": {"tags": ["service"], "summary": "update service", "description": "Update an existing services and return its status.", "operationId": "service#update", "parameters": [{"name": "force-create", "in": "query", "description": "Create if not already exist", "allowEmptyValue": true, "schema": {"type": "boolean", "description": "Create if not already exist", "example": true}, "example": false}, {"name": "id", "in": "path", "description": "ID of services to update", "required": true, "schema": {"type": "string", "description": "ID of services to update", "example": "Totam qui."}, "example": "Accusantium deserunt et dolorum."}], "requestBody": {"description": "Updated services description", "required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ServiceDefinitionT"}, "example": {"banner": "http://quigley.net/hollie", "description": "This service ...", "name": "Fire risk for Lot2", "parameters": [{"description": "The name of the region as according to ...", "label": "Region Name", "name": "region", "type": "string"}, {"label": "Rainfall/month threshold", "name": "threshold", "type": "float", "unit": "m"}], "policy": "urn:ivcap:policy:123e4567-e89b-12d3-a456-426614174000", "references": [{"title": "Dignissimos fuga facere minus aliquid qui magnam.", "uri": "http://mcglynn.info/yvette.pouros"}, {"title": "Dignissimos fuga facere minus aliquid qui magnam.", "uri": "http://mcglynn.info/yvette.pouros"}, {"title": "Dignissimos fuga facere minus aliquid qui magnam.", "uri": "http://mcglynn.info/yvette.pouros"}, {"title": "Dignissimos fuga facere minus aliquid qui magnam.", "uri": "http://mcglynn.info/yvette.pouros"}], "tags": ["tag1", "tag2"], "workflow": {"argo": "Natus officia quae sed blanditiis vero.", "basic": {"command": ["/bin/sh", "-c", "echo $PATH"], "cpu": {"limit": "100m", "request": "10m"}, "ephemeral-storage": {"limit": "4Gi", "request": "2Gi"}, "gpu-number": 2, "gpu-type": "nvidia-tesla-t4", "image": "alpine", "memory": {"limit": "100Mi", "request": "10Mi"}}, "opts": "Aut consequuntur occaecati sint et dolor.", "type": "basic"}}}}}, "responses": {"200": {"description": "OK response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ServiceStatusRT"}, "example": {"account": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "description": "This service ...", "id": "urn:ivcap:service:123e4567-e89b-12d3-a456-426614174000", "links": [{"href": "https://api.ivcap.net/1/....", "rel": "self", "type": "application/json"}, {"href": "https://api.ivcap.net/1/openapi/openapi3.json#/components/schemas/user", "rel": "describedBy", "type": "application/json"}], "name": "Fire risk for Lot2", "parameters": [{"description": "The name of the region as according to ...", "label": "Region Name", "name": "region", "type": "string"}, {"label": "Rainfall/month threshold", "name": "threshold", "type": "float", "unit": "m"}], "status": "active", "tags": ["tag1", "tag2"]}}}}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}, "example": {"id": "123e4567-e89b-12d3-a456-426614174000", "message": "Laboriosam ut nihil repudiandae."}}}}, "404": {"description": "not-found:  not found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ResourceNotFoundT"}, "example": {"id": "cayp:type:123e4567-e89b-12d3-a456-426614174000", "message": "Resource 123...00 not found"}}}}, "422": {"description": "invalid-parameter: Request contained semantically wrong parameter value", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidParameterValue"}, "example": {"message": "Ea consequatur occaecati nulla nesciunt laudantium ex.", "name": "Error consequatur dolore error exercitationem ea.", "value": "Cumque sequi ut."}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}, "example": {"message": "Accusamus nesciunt."}}}}}, "security": [{"jwt_header_Authorization": ["consumer:write"]}]}}}, "components": {"schemas": {"AddMetaRT": {"type": "object", "properties": {"record-id": {"type": "string", "description": "Reference to record created", "example": "urn:ivcap:record.123e4567-e89b-12d3-a456-426614174000", "format": "uri"}}, "example": {"record-id": "urn:ivcap:record.123e4567-e89b-12d3-a456-426614174000"}, "required": ["record-id"]}, "ArtifactListItem": {"type": "object", "properties": {"href": {"type": "string", "example": "https://api.ivcap.net/1/orders/..."}, "id": {"type": "string", "description": "ID", "example": "urn:ivcap:artifact:123e4567-e89b-12d3-a456-426614174000", "format": "uuid"}, "mime-type": {"type": "string", "description": "Mime (content) type of artifact", "example": "image/jpeg"}, "name": {"type": "string", "description": "Optional name", "example": "Fire risk for Lot2"}, "size": {"type": "integer", "description": "Size of artifact in bytes", "example": 19000, "format": "int64"}, "status": {"type": "string", "description": "Artifact status", "example": "ready", "enum": ["pending", "partial", "ready", "error", "unknown"]}}, "example": {"href": "https://api.ivcap.net/1/orders/...", "id": "urn:ivcap:artifact:123e4567-e89b-12d3-a456-426614174000", "mime-type": "image/jpeg", "name": "Fire risk for Lot2", "size": 19000, "status": "ready"}, "required": ["id", "status", "href"]}, "ArtifactListRT": {"type": "object", "properties": {"at-time": {"type": "string", "description": "Time at which this list was valid", "example": "1996-12-19T16:39:57-08:00", "format": "date-time"}, "items": {"type": "array", "items": {"$ref": "#/components/schemas/ArtifactListItem"}, "description": "Artifacts", "example": [{"href": "https://api.ivcap.net/1/orders/...", "id": "urn:ivcap:artifact:123e4567-e89b-12d3-a456-426614174000", "mime-type": "image/jpeg", "name": "Fire risk for Lot2", "size": 19000, "status": "ready"}, {"href": "https://api.ivcap.net/1/orders/...", "id": "urn:ivcap:artifact:123e4567-e89b-12d3-a456-426614174000", "mime-type": "image/jpeg", "name": "Fire risk for Lot2", "size": 19000, "status": "ready"}, {"href": "https://api.ivcap.net/1/orders/...", "id": "urn:ivcap:artifact:123e4567-e89b-12d3-a456-426614174000", "mime-type": "image/jpeg", "name": "Fire risk for Lot2", "size": 19000, "status": "ready"}]}, "links": {"type": "array", "items": {"$ref": "#/components/schemas/LinkT"}, "example": [{"href": "https://api.ivcap.net/1/....", "rel": "self", "type": "application/json"}, {"href": "https://api.ivcap.net/1/....", "rel": "first", "type": "application/json"}, {"href": "https://api.ivcap.net/1/....", "rel": "next", "type": "application/json"}, {"href": "https://api.ivcap.net/1/openapi/openapi3.json#/components/schemas/user", "rel": "describedBy", "type": "application/openapi3+json"}]}}, "example": {"at-time": "1996-12-19T16:39:57-08:00", "items": [{"href": "https://api.ivcap.net/1/orders/...", "id": "urn:ivcap:artifact:123e4567-e89b-12d3-a456-426614174000", "mime-type": "image/jpeg", "name": "Fire risk for Lot2", "size": 19000, "status": "ready"}, {"href": "https://api.ivcap.net/1/orders/...", "id": "urn:ivcap:artifact:123e4567-e89b-12d3-a456-426614174000", "mime-type": "image/jpeg", "name": "Fire risk for Lot2", "size": 19000, "status": "ready"}, {"href": "https://api.ivcap.net/1/orders/...", "id": "urn:ivcap:artifact:123e4567-e89b-12d3-a456-426614174000", "mime-type": "image/jpeg", "name": "Fire risk for Lot2", "size": 19000, "status": "ready"}], "links": [{"href": "https://api.ivcap.net/1/....", "rel": "self", "type": "application/json"}, {"href": "https://api.ivcap.net/1/....", "rel": "first", "type": "application/json"}, {"href": "https://api.ivcap.net/1/....", "rel": "next", "type": "application/json"}, {"href": "https://api.ivcap.net/1/openapi/openapi3.json#/components/schemas/user", "rel": "describedBy", "type": "application/openapi3+json"}]}, "required": ["items", "links"]}, "ArtifactStatusRT": {"type": "object", "properties": {"account": {"type": "string", "description": "Reference to billable account", "example": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "format": "uri"}, "cache-of": {"type": "string", "description": "URL of object this artifact is caching", "example": "Ut autem ullam."}, "created-at": {"type": "string", "description": "DateTime artifact was created", "example": "1996-12-19T16:39:57-08:00", "format": "date-time"}, "data-href": {"type": "string", "example": "https://api.ivcap.net/1/artifacts/.../blob"}, "etag": {"type": "string", "description": "ETAG of artifact", "example": "Deleniti consequatur voluptate."}, "id": {"type": "string", "description": "Artifact ID", "example": "urn:ivcap:Artifact ID:123e4567-e89b-12d3-a456-426614174000", "format": "uri"}, "last-modified-at": {"type": "string", "description": "DateTime artifact was last modified", "example": "1996-12-19T16:39:57-08:00", "format": "date-time"}, "links": {"type": "array", "items": {"$ref": "#/components/schemas/LinkT"}, "example": [{"href": "https://api.ivcap.net/1/....", "rel": "self", "type": "application/json"}, {"href": "https://api.ivcap.net/1/openapi/openapi3.json#/components/schemas/user", "rel": "describedBy", "type": "application/json"}]}, "mime-type": {"type": "string", "description": "Mime-type of data", "example": "Aliquam dolor in necessitatibus nulla omnis."}, "name": {"type": "string", "description": "Optional name", "example": "Fire risk per LGA"}, "policy": {"type": "string", "description": "Reference to policy used", "example": "urn:ivcap:policy:123e4567-e89b-12d3-a456-426614174000", "format": "uri"}, "size": {"type": "integer", "description": "Size of data", "example": 1453534250464581982, "format": "int64"}, "status": {"type": "string", "description": "Artifact status", "example": "partial", "enum": ["pending", "partial", "ready", "error", "unknown"]}}, "example": {"account": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "cache-of": "Voluptatem porro omnis dolores ipsa aut.", "created-at": "1996-12-19T16:39:57-08:00", "data-href": "https://api.ivcap.net/1/artifacts/.../blob", "etag": "Molestiae facilis eos adipisci corporis adipisci.", "id": "urn:ivcap:Artifact ID:123e4567-e89b-12d3-a456-426614174000", "last-modified-at": "1996-12-19T16:39:57-08:00", "links": [{"href": "https://api.ivcap.net/1/....", "rel": "self", "type": "application/json"}, {"href": "https://api.ivcap.net/1/openapi/openapi3.json#/components/schemas/user", "rel": "describedBy", "type": "application/json"}], "mime-type": "Aut dolor placeat qui porro non rerum.", "name": "Fire risk per LGA", "policy": "urn:ivcap:policy:123e4567-e89b-12d3-a456-426614174000", "size": 3895494580941686056, "status": "unknown"}, "required": ["links", "id", "status"]}, "AspectIDRT": {"type": "object", "properties": {"id": {"type": "string", "description": "ID", "example": "urn:ivcap:aspect:123e4567-e89b-12d3-a456-426614174000", "format": "uuid"}}, "example": {"id": "urn:ivcap:aspect:123e4567-e89b-12d3-a456-426614174000"}, "required": ["id"]}, "AspectListItemRT": {"type": "object", "properties": {"content": {"type": "string", "description": "Attached aspect aspect", "example": "{...}", "format": "binary"}, "content-type": {"type": "string", "description": "Content-Type header, MUST be of application/json.", "example": "application/json"}, "entity": {"type": "string", "description": "Entity URN", "example": "urn:blue:transect.1", "format": "uri"}, "id": {"type": "string", "description": "ID", "example": "urn:ivcap:aspect:123e4567-e89b-12d3-a456-426614174000", "format": "uuid"}, "schema": {"type": "string", "description": "Schema URN", "example": "urn:blue:schema.image", "format": "uri"}, "valid-from": {"type": "string", "description": "Time this assertion became valid", "example": "1996-12-19T16:39:57-08:00", "format": "date-time"}, "valid-to": {"type": "string", "description": "Time this assertion became valid", "example": "1996-12-19T16:39:57-08:00", "format": "date-time"}}, "example": {"content": "{...}", "content-type": "application/json", "entity": "urn:blue:transect.1", "id": "urn:ivcap:aspect:123e4567-e89b-12d3-a456-426614174000", "schema": "urn:blue:schema.image", "valid-from": "1996-12-19T16:39:57-08:00", "valid-to": "1996-12-19T16:39:57-08:00"}, "required": ["id", "entity", "schema", "content-type"]}, "AspectListRT": {"type": "object", "properties": {"aspect-path": {"type": "string", "description": "Optional json path to further filter on returned list", "example": "Rerum voluptatum quidem optio."}, "at-time": {"type": "string", "description": "Time at which this list was valid", "example": "1996-12-19T16:39:57-08:00", "format": "date-time"}, "entity": {"type": "string", "description": "Entity for which to request aspect", "example": "urn:blue:image.collA.12", "format": "uri"}, "items": {"type": "array", "items": {"$ref": "#/components/schemas/AspectListItemRT"}, "description": "List of aspect descriptions", "example": [{"content": "{...}", "content-type": "application/json", "entity": "urn:blue:transect.1", "id": "urn:ivcap:aspect:123e4567-e89b-12d3-a456-426614174000", "schema": "urn:blue:schema.image", "valid-from": "1996-12-19T16:39:57-08:00", "valid-to": "1996-12-19T16:39:57-08:00"}, {"content": "{...}", "content-type": "application/json", "entity": "urn:blue:transect.1", "id": "urn:ivcap:aspect:123e4567-e89b-12d3-a456-426614174000", "schema": "urn:blue:schema.image", "valid-from": "1996-12-19T16:39:57-08:00", "valid-to": "1996-12-19T16:39:57-08:00"}, {"content": "{...}", "content-type": "application/json", "entity": "urn:blue:transect.1", "id": "urn:ivcap:aspect:123e4567-e89b-12d3-a456-426614174000", "schema": "urn:blue:schema.image", "valid-from": "1996-12-19T16:39:57-08:00", "valid-to": "1996-12-19T16:39:57-08:00"}, {"content": "{...}", "content-type": "application/json", "entity": "urn:blue:transect.1", "id": "urn:ivcap:aspect:123e4567-e89b-12d3-a456-426614174000", "schema": "urn:blue:schema.image", "valid-from": "1996-12-19T16:39:57-08:00", "valid-to": "1996-12-19T16:39:57-08:00"}]}, "links": {"type": "array", "items": {"$ref": "#/components/schemas/LinkT"}, "example": [{"href": "https://api.ivcap.net/1/....", "rel": "self", "type": "application/json"}, {"href": "https://api.ivcap.net/1/....", "rel": "first", "type": "application/json"}, {"href": "https://api.ivcap.net/1/....", "rel": "next", "type": "application/json"}, {"href": "https://api.ivcap.net/1/openapi/openapi3.json#/components/schemas/user", "rel": "describedBy", "type": "application/openapi3+json"}]}, "schema": {"type": "string", "description": "Optional schema to filter on", "example": "urn:blue:image,urn:blue:location", "format": "uri"}}, "example": {"aspect-path": "Cumque itaque hic.", "at-time": "1996-12-19T16:39:57-08:00", "entity": "urn:blue:image.collA.12", "items": [{"content": "{...}", "content-type": "application/json", "entity": "urn:blue:transect.1", "id": "urn:ivcap:aspect:123e4567-e89b-12d3-a456-426614174000", "schema": "urn:blue:schema.image", "valid-from": "1996-12-19T16:39:57-08:00", "valid-to": "1996-12-19T16:39:57-08:00"}, {"content": "{...}", "content-type": "application/json", "entity": "urn:blue:transect.1", "id": "urn:ivcap:aspect:123e4567-e89b-12d3-a456-426614174000", "schema": "urn:blue:schema.image", "valid-from": "1996-12-19T16:39:57-08:00", "valid-to": "1996-12-19T16:39:57-08:00"}, {"content": "{...}", "content-type": "application/json", "entity": "urn:blue:transect.1", "id": "urn:ivcap:aspect:123e4567-e89b-12d3-a456-426614174000", "schema": "urn:blue:schema.image", "valid-from": "1996-12-19T16:39:57-08:00", "valid-to": "1996-12-19T16:39:57-08:00"}, {"content": "{...}", "content-type": "application/json", "entity": "urn:blue:transect.1", "id": "urn:ivcap:aspect:123e4567-e89b-12d3-a456-426614174000", "schema": "urn:blue:schema.image", "valid-from": "1996-12-19T16:39:57-08:00", "valid-to": "1996-12-19T16:39:57-08:00"}], "links": [{"href": "https://api.ivcap.net/1/....", "rel": "self", "type": "application/json"}, {"href": "https://api.ivcap.net/1/....", "rel": "first", "type": "application/json"}, {"href": "https://api.ivcap.net/1/....", "rel": "next", "type": "application/json"}, {"href": "https://api.ivcap.net/1/openapi/openapi3.json#/components/schemas/user", "rel": "describedBy", "type": "application/openapi3+json"}], "schema": "urn:blue:image,urn:blue:location"}, "required": ["items", "at-time", "links"]}, "AspectRT": {"type": "object", "properties": {"asserter": {"type": "string", "description": "Entity asserting this metadata record at 'valid-from'", "example": "urn:ivcap:principal:123e4567-e89b-12d3-a456-426614174000", "format": "uri"}, "content": {"type": "string", "description": "Description of aspect encoded as 'content-type'", "example": "{...}", "format": "binary"}, "content-type": {"type": "string", "description": "Content-Type header, MUST be of application/json.", "example": "application/json"}, "entity": {"type": "string", "description": "Entity URN", "example": "urn:blue:transect.1", "format": "uri"}, "id": {"type": "string", "description": "ID", "example": "urn:ivcap:record:123e4567-e89b-12d3-a456-426614174000", "format": "uuid"}, "links": {"type": "array", "items": {"$ref": "#/components/schemas/LinkT"}, "example": [{"href": "https://api.ivcap.net/1/....", "rel": "self", "type": "application/json"}, {"href": "https://api.ivcap.net/1/openapi/openapi3.json#/components/schemas/user", "rel": "describedBy", "type": "application/json"}]}, "retracter": {"type": "string", "description": "Entity retracting this record at 'valid-to'", "example": "urn:ivcap:principal:123e4567-e89b-12d3-a456-426614174000", "format": "uri"}, "schema": {"type": "string", "description": "Schema URN", "example": "urn:blue:schema.image", "format": "uri"}, "valid-from": {"type": "string", "description": "Time this record was asserted", "example": "1996-12-19T16:39:57-08:00", "format": "date-time"}, "valid-to": {"type": "string", "description": "Time this record was retracted", "example": "1996-12-19T16:39:57-08:00", "format": "date-time"}}, "example": {"asserter": "urn:ivcap:principal:123e4567-e89b-12d3-a456-426614174000", "content": "{...}", "content-type": "application/json", "entity": "urn:blue:transect.1", "id": "urn:ivcap:record:123e4567-e89b-12d3-a456-426614174000", "links": [{"href": "https://api.ivcap.net/1/....", "rel": "self", "type": "application/json"}, {"href": "https://api.ivcap.net/1/openapi/openapi3.json#/components/schemas/user", "rel": "describedBy", "type": "application/json"}], "retracter": "urn:ivcap:principal:123e4567-e89b-12d3-a456-426614174000", "schema": "urn:blue:schema.image", "valid-from": "1996-12-19T16:39:57-08:00", "valid-to": "1996-12-19T16:39:57-08:00"}, "required": ["links", "id", "entity", "schema", "content", "content-type", "valid-from", "asserter"]}, "BasicWorkflowOptsT": {"type": "object", "properties": {"command": {"type": "array", "items": {"type": "string", "example": "Voluptates modi id nihil recusandae."}, "description": "Command to start the container - needed for some container runtimes", "example": ["/bin/sh", "-c", "echo $PATH"]}, "cpu": {"$ref": "#/components/schemas/ResourceMemoryT"}, "ephemeral-storage": {"$ref": "#/components/schemas/ResourceMemoryT"}, "gpu-number": {"type": "integer", "description": "Defines number of required gpu", "example": 2, "format": "int64"}, "gpu-type": {"type": "string", "description": "Defines required gpu type", "example": "nvidia-tesla-t4"}, "image": {"type": "string", "description": "container image name", "example": "alpine"}, "memory": {"$ref": "#/components/schemas/ResourceMemoryT"}}, "example": {"command": ["/bin/sh", "-c", "echo $PATH"], "cpu": {"limit": "100m", "request": "10m"}, "ephemeral-storage": {"limit": "4Gi", "request": "2Gi"}, "gpu-number": 2, "gpu-type": "nvidia-tesla-t4", "image": "alpine", "memory": {"limit": "100Mi", "request": "10Mi"}}, "required": ["image", "command"]}, "Createqueueresponse": {"type": "object", "properties": {"account": {"type": "string", "description": "Reference to billable account", "example": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "format": "uri"}, "created-at": {"type": "string", "description": "Timestamp when the queue was created", "example": "1996-12-19T16:39:57-08:00", "format": "date-time"}, "description": {"type": "string", "description": "Description of the created queue.", "example": "Events for the event service"}, "id": {"type": "string", "description": "queue", "example": "urn:ivcap:queue:123e4567-e89b-12d3-a456-426614174000", "format": "uri"}, "name": {"type": "string", "description": "Name of the created queue.", "example": "events"}}, "example": {"account": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "created-at": "1996-12-19T16:39:57-08:00", "description": "Events for the event service", "id": "urn:ivcap:queue:123e4567-e89b-12d3-a456-426614174000", "name": "events"}, "required": ["id", "name", "created-at"]}, "InvalidParameterValue": {"type": "object", "properties": {"message": {"type": "string", "description": "message describing expected type or pattern.", "example": "Eum facilis atque."}, "name": {"type": "string", "description": "name of parameter.", "example": "Culpa voluptas et nobis dolore eaque."}, "value": {"type": "string", "description": "provided parameter value.", "example": "Iure facere aut vero soluta ad nesciunt."}}, "description": "Invalide parameter value", "example": {"message": "Voluptas totam et aliquid.", "name": "Est fugit corporis.", "value": "Facilis ut doloremque quam voluptate."}, "required": ["name", "message"]}, "InvalidScopesT": {"type": "object", "properties": {"id": {"type": "string", "description": "ID of involved resource", "example": "123e4567-e89b-12d3-a456-426614174000", "format": "uuid"}, "message": {"type": "string", "description": "Message of error", "default": "Not authorized to perform this action", "example": "Accusamus ullam ipsum."}}, "description": "Token scopes are invalid", "example": {"id": "123e4567-e89b-12d3-a456-426614174000", "message": "Cumque possimus temporibus cum nobis."}, "required": ["message"]}, "LinkT": {"type": "object", "properties": {"href": {"type": "string", "description": "web link", "example": "https://acme.com/.."}, "rel": {"type": "string", "description": "relation type", "example": "self, describedBy, next, first"}, "type": {"type": "string", "description": "mime type", "example": "application/json"}}, "example": {"href": "https://acme.com/..", "rel": "self, describedBy, next, first", "type": "application/json"}, "required": ["rel", "type", "href"]}, "ListMetaRT": {"type": "object", "properties": {"aspect-path": {"type": "string", "description": "Optional json path to further filter on returned list", "example": "Autem deserunt cumque et est qui maxime."}, "at-time": {"type": "string", "description": "Time at which this list was valid", "example": "1996-12-19T16:39:57-08:00", "format": "date-time"}, "entity": {"type": "string", "description": "Entity for which to request metadata", "example": "urn:blue:image.collA.12", "format": "uri"}, "items": {"type": "array", "items": {"$ref": "#/components/schemas/MetadataListItemRT"}, "description": "List of metadata records", "example": [{"aspect": "{...}", "aspect-context": "{...}", "entity": "urn:blue:transect.1", "id": "urn:ivcap:metadata:123e4567-e89b-12d3-a456-426614174000", "schema": "urn:blue:schema.image"}, {"aspect": "{...}", "aspect-context": "{...}", "entity": "urn:blue:transect.1", "id": "urn:ivcap:metadata:123e4567-e89b-12d3-a456-426614174000", "schema": "urn:blue:schema.image"}, {"aspect": "{...}", "aspect-context": "{...}", "entity": "urn:blue:transect.1", "id": "urn:ivcap:metadata:123e4567-e89b-12d3-a456-426614174000", "schema": "urn:blue:schema.image"}]}, "links": {"type": "array", "items": {"$ref": "#/components/schemas/LinkT"}, "example": [{"href": "https://api.ivcap.net/1/....", "rel": "self", "type": "application/json"}, {"href": "https://api.ivcap.net/1/....", "rel": "first", "type": "application/json"}, {"href": "https://api.ivcap.net/1/....", "rel": "next", "type": "application/json"}, {"href": "https://api.ivcap.net/1/openapi/openapi3.json#/components/schemas/user", "rel": "describedBy", "type": "application/openapi3+json"}]}, "schema": {"type": "string", "description": "Optional schema to filter on", "example": "urn:blue:image,urn:blue:location", "format": "uri"}}, "example": {"aspect-path": "Similique facilis saepe vel est.", "at-time": "1996-12-19T16:39:57-08:00", "entity": "urn:blue:image.collA.12", "items": [{"aspect": "{...}", "aspect-context": "{...}", "entity": "urn:blue:transect.1", "id": "urn:ivcap:metadata:123e4567-e89b-12d3-a456-426614174000", "schema": "urn:blue:schema.image"}, {"aspect": "{...}", "aspect-context": "{...}", "entity": "urn:blue:transect.1", "id": "urn:ivcap:metadata:123e4567-e89b-12d3-a456-426614174000", "schema": "urn:blue:schema.image"}], "links": [{"href": "https://api.ivcap.net/1/....", "rel": "self", "type": "application/json"}, {"href": "https://api.ivcap.net/1/....", "rel": "first", "type": "application/json"}, {"href": "https://api.ivcap.net/1/....", "rel": "next", "type": "application/json"}, {"href": "https://api.ivcap.net/1/openapi/openapi3.json#/components/schemas/user", "rel": "describedBy", "type": "application/openapi3+json"}], "schema": "urn:blue:image,urn:blue:location"}, "required": ["items", "links"]}, "MessageStatusList": {"type": "object", "properties": {"at-time": {"type": "string", "description": "Time at which this list was valid", "example": "1996-12-19T16:39:57-08:00", "format": "date-time"}, "items": {"type": "array", "items": {"$ref": "#/components/schemas/Messagestatus"}, "description": "Message status", "example": [{"data": {"content": "ewogICAgIm1lc3NhZ2UiOiAiTmV2ZXIgZ29ubmEgZ2l2ZSB5b3UgdXAsIG5ldmVyIGdvbm5hIGxldCB5b3UgZG93bi4uLiIsCiAgICAibGluayI6ICJodHRwczovL3d3dy55b3V0dWJlLmNvbS93YXRjaD92PWRRdzR3OVdnWGNRIgp9Cg==", "content-type": "application/json", "schema": "urn:ivcap:schema:message:queue.1"}, "sequence": 14544394773804368698}, {"data": {"content": "ewogICAgIm1lc3NhZ2UiOiAiTmV2ZXIgZ29ubmEgZ2l2ZSB5b3UgdXAsIG5ldmVyIGdvbm5hIGxldCB5b3UgZG93bi4uLiIsCiAgICAibGluayI6ICJodHRwczovL3d3dy55b3V0dWJlLmNvbS93YXRjaD92PWRRdzR3OVdnWGNRIgp9Cg==", "content-type": "application/json", "schema": "urn:ivcap:schema:message:queue.1"}, "sequence": 14544394773804368698}, {"data": {"content": "ewogICAgIm1lc3NhZ2UiOiAiTmV2ZXIgZ29ubmEgZ2l2ZSB5b3UgdXAsIG5ldmVyIGdvbm5hIGxldCB5b3UgZG93bi4uLiIsCiAgICAibGluayI6ICJodHRwczovL3d3dy55b3V0dWJlLmNvbS93YXRjaD92PWRRdzR3OVdnWGNRIgp9Cg==", "content-type": "application/json", "schema": "urn:ivcap:schema:message:queue.1"}, "sequence": 14544394773804368698}, {"data": {"content": "ewogICAgIm1lc3NhZ2UiOiAiTmV2ZXIgZ29ubmEgZ2l2ZSB5b3UgdXAsIG5ldmVyIGdvbm5hIGxldCB5b3UgZG93bi4uLiIsCiAgICAibGluayI6ICJodHRwczovL3d3dy55b3V0dWJlLmNvbS93YXRjaD92PWRRdzR3OVdnWGNRIgp9Cg==", "content-type": "application/json", "schema": "urn:ivcap:schema:message:queue.1"}, "sequence": 14544394773804368698}]}}, "example": {"at-time": "1996-12-19T16:39:57-08:00", "items": [{"data": {"content": "ewogICAgIm1lc3NhZ2UiOiAiTmV2ZXIgZ29ubmEgZ2l2ZSB5b3UgdXAsIG5ldmVyIGdvbm5hIGxldCB5b3UgZG93bi4uLiIsCiAgICAibGluayI6ICJodHRwczovL3d3dy55b3V0dWJlLmNvbS93YXRjaD92PWRRdzR3OVdnWGNRIgp9Cg==", "content-type": "application/json", "schema": "urn:ivcap:schema:message:queue.1"}, "sequence": 14544394773804368698}, {"data": {"content": "ewogICAgIm1lc3NhZ2UiOiAiTmV2ZXIgZ29ubmEgZ2l2ZSB5b3UgdXAsIG5ldmVyIGdvbm5hIGxldCB5b3UgZG93bi4uLiIsCiAgICAibGluayI6ICJodHRwczovL3d3dy55b3V0dWJlLmNvbS93YXRjaD92PWRRdzR3OVdnWGNRIgp9Cg==", "content-type": "application/json", "schema": "urn:ivcap:schema:message:queue.1"}, "sequence": 14544394773804368698}]}, "required": ["items"]}, "Messagestatus": {"type": "object", "properties": {"data": {"$ref": "#/components/schemas/QueueMessage"}, "sequence": {"type": "integer", "description": "Sequence number", "example": 15670515626406857043}}, "example": {"data": {"content": "ewogICAgIm1lc3NhZ2UiOiAiTmV2ZXIgZ29ubmEgZ2l2ZSB5b3UgdXAsIG5ldmVyIGdvbm5hIGxldCB5b3UgZG93bi4uLiIsCiAgICAibGluayI6ICJodHRwczovL3d3dy55b3V0dWJlLmNvbS93YXRjaD92PWRRdzR3OVdnWGNRIgp9Cg==", "content-type": "application/json", "schema": "urn:ivcap:schema:message:queue.1"}, "sequence": 8193441769216178613}}, "MetadataListItemRT": {"type": "object", "properties": {"aspect": {"type": "object", "description": "Attached metadata aspect", "example": "{...}"}, "aspect-context": {"type": "string", "description": "If aspectPath was defined, this is what matched the query", "example": "{...}"}, "entity": {"type": "string", "description": "Entity ID", "example": "urn:blue:transect.1", "format": "uri"}, "id": {"type": "string", "description": "ID", "example": "urn:ivcap:metadata:123e4567-e89b-12d3-a456-426614174000", "format": "uuid"}, "schema": {"type": "string", "description": "Schema ID", "example": "urn:blue:schema.image", "format": "uri"}}, "example": {"aspect": "{...}", "aspect-context": "{...}", "entity": "urn:blue:transect.1", "id": "urn:ivcap:metadata:123e4567-e89b-12d3-a456-426614174000", "schema": "urn:blue:schema.image"}, "required": ["id", "entity", "schema"]}, "MetadataRecordRT": {"type": "object", "properties": {"aspect": {"type": "string", "description": "Attached metadata aspect", "example": "{...}", "format": "binary"}, "asserter": {"type": "string", "description": "Entity asserting this metadata record at 'valid-from'", "example": "urn:ivcap:principal:123e4567-e89b-12d3-a456-426614174000", "format": "uri"}, "entity": {"type": "string", "description": "Entity ID", "example": "urn:blue:transect.1", "format": "uri"}, "id": {"type": "string", "description": "ID", "example": "urn:ivcap:record:123e4567-e89b-12d3-a456-426614174000", "format": "uuid"}, "links": {"type": "array", "items": {"$ref": "#/components/schemas/LinkT"}, "example": [{"href": "https://api.ivcap.net/1/....", "rel": "self", "type": "application/json"}, {"href": "https://api.ivcap.net/1/openapi/openapi3.json#/components/schemas/user", "rel": "describedBy", "type": "application/json"}]}, "revoker": {"type": "string", "description": "Entity revoking this record at 'valid-to'", "example": "urn:ivcap:principal:123e4567-e89b-12d3-a456-426614174000", "format": "uri"}, "schema": {"type": "string", "description": "Schema ID", "example": "urn:blue:schema.image", "format": "uri"}, "valid-from": {"type": "string", "description": "Time this record was asserted", "example": "1996-12-19T16:39:57-08:00", "format": "date-time"}, "valid-to": {"type": "string", "description": "Time this record was retracted", "example": "1996-12-19T16:39:57-08:00", "format": "date-time"}}, "example": {"aspect": "{...}", "asserter": "urn:ivcap:principal:123e4567-e89b-12d3-a456-426614174000", "entity": "urn:blue:transect.1", "id": "urn:ivcap:record:123e4567-e89b-12d3-a456-426614174000", "links": [{"href": "https://api.ivcap.net/1/....", "rel": "self", "type": "application/json"}, {"href": "https://api.ivcap.net/1/openapi/openapi3.json#/components/schemas/user", "rel": "describedBy", "type": "application/json"}], "revoker": "urn:ivcap:principal:123e4567-e89b-12d3-a456-426614174000", "schema": "urn:blue:schema.image", "valid-from": "1996-12-19T16:39:57-08:00", "valid-to": "1996-12-19T16:39:57-08:00"}, "required": ["links", "id", "entity", "schema", "aspect", "valid-from", "asserter"]}, "NotImplementedT": {"type": "object", "properties": {"message": {"type": "string", "description": "Information message", "default": "Method not implemented", "example": "Doloremque odio eum."}}, "description": "Method is not yet implemented", "example": {"message": "Deserunt dicta minus animi."}, "required": ["message"]}, "OrderListItem": {"type": "object", "properties": {"account": {"type": "string", "description": "Reference to billable account", "example": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "format": "uri"}, "finished-at": {"type": "string", "description": "DateTime order processing finished", "example": "1996-12-19T16:39:57-08:00", "format": "date-time"}, "href": {"type": "string", "example": "https://api.ivcap.net/1/orders/..."}, "id": {"type": "string", "description": "ID", "example": "urn:ivcap:order:123e4567-e89b-12d3-a456-426614174000", "format": "uuid"}, "name": {"type": "string", "description": "Optional customer provided name", "example": "Fire risk for Lot2"}, "ordered-at": {"type": "string", "description": "DateTime order was placed", "example": "1996-12-19T16:39:57-08:00", "format": "date-time"}, "service": {"type": "string", "description": "Reference to service requested", "example": "urn:ivcap:service:123e4567-e89b-12d3-a456-426614174000", "format": "uri"}, "started-at": {"type": "string", "description": "DateTime order processing started", "example": "1996-12-19T16:39:57-08:00", "format": "date-time"}, "status": {"type": "string", "description": "Order status", "example": "executing", "enum": ["unknown", "pending", "scheduled", "executing", "succeeded", "failed", "error"]}}, "example": {"account": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "finished-at": "1996-12-19T16:39:57-08:00", "href": "https://api.ivcap.net/1/orders/...", "id": "urn:ivcap:order:123e4567-e89b-12d3-a456-426614174000", "name": "Fire risk for Lot2", "ordered-at": "1996-12-19T16:39:57-08:00", "service": "urn:ivcap:service:123e4567-e89b-12d3-a456-426614174000", "started-at": "1996-12-19T16:39:57-08:00", "status": "succeeded"}, "required": ["id", "status", "service", "account", "href"]}, "OrderListRT": {"type": "object", "properties": {"at-time": {"type": "string", "description": "Time at which this list was valid", "example": "1996-12-19T16:39:57-08:00", "format": "date-time"}, "items": {"type": "array", "items": {"$ref": "#/components/schemas/OrderListItem"}, "description": "Orders", "example": [{"account": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "finished-at": "1996-12-19T16:39:57-08:00", "href": "https://api.ivcap.net/1/orders/...", "id": "urn:ivcap:order:123e4567-e89b-12d3-a456-426614174000", "name": "Fire risk for Lot2", "ordered-at": "1996-12-19T16:39:57-08:00", "service": "urn:ivcap:service:123e4567-e89b-12d3-a456-426614174000", "started-at": "1996-12-19T16:39:57-08:00", "status": "pending"}, {"account": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "finished-at": "1996-12-19T16:39:57-08:00", "href": "https://api.ivcap.net/1/orders/...", "id": "urn:ivcap:order:123e4567-e89b-12d3-a456-426614174000", "name": "Fire risk for Lot2", "ordered-at": "1996-12-19T16:39:57-08:00", "service": "urn:ivcap:service:123e4567-e89b-12d3-a456-426614174000", "started-at": "1996-12-19T16:39:57-08:00", "status": "pending"}, {"account": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "finished-at": "1996-12-19T16:39:57-08:00", "href": "https://api.ivcap.net/1/orders/...", "id": "urn:ivcap:order:123e4567-e89b-12d3-a456-426614174000", "name": "Fire risk for Lot2", "ordered-at": "1996-12-19T16:39:57-08:00", "service": "urn:ivcap:service:123e4567-e89b-12d3-a456-426614174000", "started-at": "1996-12-19T16:39:57-08:00", "status": "pending"}, {"account": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "finished-at": "1996-12-19T16:39:57-08:00", "href": "https://api.ivcap.net/1/orders/...", "id": "urn:ivcap:order:123e4567-e89b-12d3-a456-426614174000", "name": "Fire risk for Lot2", "ordered-at": "1996-12-19T16:39:57-08:00", "service": "urn:ivcap:service:123e4567-e89b-12d3-a456-426614174000", "started-at": "1996-12-19T16:39:57-08:00", "status": "pending"}]}, "links": {"type": "array", "items": {"$ref": "#/components/schemas/LinkT"}, "example": [{"href": "https://api.ivcap.net/1/....", "rel": "self", "type": "application/json"}, {"href": "https://api.ivcap.net/1/....", "rel": "first", "type": "application/json"}, {"href": "https://api.ivcap.net/1/....", "rel": "next", "type": "application/json"}, {"href": "https://api.ivcap.net/1/openapi/openapi3.json#/components/schemas/user", "rel": "describedBy", "type": "application/openapi3+json"}]}}, "example": {"at-time": "1996-12-19T16:39:57-08:00", "items": [{"account": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "finished-at": "1996-12-19T16:39:57-08:00", "href": "https://api.ivcap.net/1/orders/...", "id": "urn:ivcap:order:123e4567-e89b-12d3-a456-426614174000", "name": "Fire risk for Lot2", "ordered-at": "1996-12-19T16:39:57-08:00", "service": "urn:ivcap:service:123e4567-e89b-12d3-a456-426614174000", "started-at": "1996-12-19T16:39:57-08:00", "status": "pending"}, {"account": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "finished-at": "1996-12-19T16:39:57-08:00", "href": "https://api.ivcap.net/1/orders/...", "id": "urn:ivcap:order:123e4567-e89b-12d3-a456-426614174000", "name": "Fire risk for Lot2", "ordered-at": "1996-12-19T16:39:57-08:00", "service": "urn:ivcap:service:123e4567-e89b-12d3-a456-426614174000", "started-at": "1996-12-19T16:39:57-08:00", "status": "pending"}], "links": [{"href": "https://api.ivcap.net/1/....", "rel": "self", "type": "application/json"}, {"href": "https://api.ivcap.net/1/....", "rel": "first", "type": "application/json"}, {"href": "https://api.ivcap.net/1/....", "rel": "next", "type": "application/json"}, {"href": "https://api.ivcap.net/1/openapi/openapi3.json#/components/schemas/user", "rel": "describedBy", "type": "application/openapi3+json"}]}, "required": ["items", "at-time", "links"]}, "OrderMetadataListItemRT": {"type": "object", "properties": {"content-type": {"type": "string", "description": "type of metadata content", "example": "{...}"}, "href": {"type": "string", "description": "reference to content of metadata", "example": "{...}"}, "id": {"type": "string", "description": "ID", "example": "urn:ivcap:aspect ID:123e4567-e89b-12d3-a456-426614174000", "format": "uuid"}, "schema": {"type": "string", "description": "Schema ID", "example": "urn:blue:schema.image", "format": "uri"}}, "example": {"content-type": "{...}", "href": "{...}", "id": "urn:ivcap:aspect ID:123e4567-e89b-12d3-a456-426614174000", "schema": "urn:blue:schema.image"}, "required": ["id", "schema", "href", "content-type"]}, "OrderRequestT": {"type": "object", "properties": {"name": {"type": "string", "description": "Optional customer provided name", "example": "Fire risk for Lot2"}, "parameters": {"type": "array", "items": {"$ref": "#/components/schemas/ParameterT"}, "description": "Service parameters", "example": [{"name": "region", "value": "Upper Valley"}, {"name": "threshold", "value": "10"}]}, "policy": {"type": "string", "description": "Reference to policy used", "example": "urn:ivcap:policy:123e4567-e89b-12d3-a456-426614174000", "format": "uri"}, "service": {"type": "string", "description": "Reference to service requested", "example": "urn:ivcap:service:123e4567-e89b-12d3-a456-426614174000", "format": "uri"}, "tags": {"type": "array", "items": {"type": "string", "example": "Totam qui quidem voluptatem aspernatur laudantium voluptas."}, "description": "Optional customer provided tags", "example": ["tag1", "tag2"]}}, "example": {"name": "Fire risk for Lot2", "parameters": [{"name": "region", "value": "Upper Valley"}, {"name": "threshold", "value": "10"}], "policy": "urn:ivcap:policy:123e4567-e89b-12d3-a456-426614174000", "service": "urn:ivcap:service:123e4567-e89b-12d3-a456-426614174000", "tags": ["tag1", "tag2"]}, "required": ["service", "parameters"]}, "OrderStatusRT": {"type": "object", "properties": {"account": {"type": "string", "description": "Reference to billable account", "example": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "format": "uri"}, "finished-at": {"type": "string", "description": "DateTime order processing finished", "example": "1996-12-19T16:39:57-08:00", "format": "date-time"}, "id": {"type": "string", "description": "ID", "example": "urn:ivcap:order:123e4567-e89b-12d3-a456-426614174000", "format": "uuid"}, "links": {"type": "array", "items": {"$ref": "#/components/schemas/LinkT"}, "example": [{"href": "https://api.ivcap.net/1/....", "rel": "self", "type": "application/json"}, {"href": "https://api.ivcap.net/1/openapi/openapi3.json#/components/schemas/user", "rel": "describedBy", "type": "application/json"}]}, "name": {"type": "string", "description": "Optional customer provided name", "example": "Fire risk for Lot2"}, "ordered-at": {"type": "string", "description": "DateTime order was placed", "example": "1996-12-19T16:39:57-08:00", "format": "date-time"}, "parameters": {"type": "array", "items": {"$ref": "#/components/schemas/ParameterT"}, "description": "Service parameters", "example": [{"name": "region", "value": "Upper Valley"}, {"name": "threshold", "value": "10"}]}, "products": {"$ref": "#/components/schemas/PartialProductListT"}, "service": {"type": "string", "description": "Reference to service requested", "example": "urn:ivcap:service:123e4567-e89b-12d3-a456-426614174000", "format": "uri"}, "started-at": {"type": "string", "description": "DateTime order processing started", "example": "1996-12-19T16:39:57-08:00", "format": "date-time"}, "status": {"type": "string", "description": "Order status", "example": "scheduled", "enum": ["unknown", "pending", "scheduled", "executing", "succeeded", "failed", "error"]}, "tags": {"type": "array", "items": {"type": "string", "example": "Enim rerum."}, "description": "Optional customer provided tags", "example": ["tag1", "tag2"]}}, "example": {"account": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "finished-at": "1996-12-19T16:39:57-08:00", "id": "urn:ivcap:order:123e4567-e89b-12d3-a456-426614174000", "links": [{"href": "https://api.ivcap.net/1/....", "rel": "self", "type": "application/json"}, {"href": "https://api.ivcap.net/1/openapi/openapi3.json#/components/schemas/user", "rel": "describedBy", "type": "application/json"}], "name": "Fire risk for Lot2", "ordered-at": "1996-12-19T16:39:57-08:00", "parameters": [{"name": "region", "value": "Upper Valley"}, {"name": "threshold", "value": "10"}], "products": {"items": [{"data-href": "https:/.../1/artifacts/0000-00001220/blob", "href": "https:/.../1/artifacts/0000-00001220", "mime-type": "image/geo+tiff", "name": "fire risk map", "size": 1234963}], "links": [{"href": "https://api.ivcap.net/1/....", "rel": "next"}]}, "service": "urn:ivcap:service:123e4567-e89b-12d3-a456-426614174000", "started-at": "1996-12-19T16:39:57-08:00", "status": "succeeded", "tags": ["tag1", "tag2"]}, "required": ["links", "id", "status", "products", "service", "account", "parameters"]}, "OrderTopResultItem": {"type": "object", "properties": {"container": {"type": "string", "description": "container", "example": "Rem est corrupti id repellendus."}, "cpu": {"type": "string", "description": "cpu", "example": "Harum minima perspiciatis delectus nihil."}, "ephemeral-storage": {"type": "string", "description": "ephemeral-storage", "example": "Atque ut temporibus."}, "memory": {"type": "string", "description": "memory", "example": "Deserunt omnis ducimus fugit voluptate."}, "storage": {"type": "string", "description": "storage", "example": "Est qui porro est deserunt commodi consequatur."}}, "example": {"container": "Dicta consequatur beatae voluptates voluptas.", "cpu": "Veritatis autem illum ut.", "ephemeral-storage": "Hic amet voluptatem ad sint.", "memory": "Vel ut in repellendus quaerat non.", "storage": "Eligendi et."}, "required": ["container", "cpu", "memory", "storage", "ephemeral-storage"]}, "OrderTopResultItemCollection": {"type": "array", "items": {"$ref": "#/components/schemas/OrderTopResultItem"}, "example": [{"container": "Tempora quisquam est soluta.", "cpu": "Assumenda dolorem non dolorum nihil esse.", "ephemeral-storage": "Quo ut rem exercitationem.", "memory": "A fuga officiis et.", "storage": "Saepe distinctio accusamus ea et recusandae repudiandae."}, {"container": "Tempora quisquam est soluta.", "cpu": "Assumenda dolorem non dolorum nihil esse.", "ephemeral-storage": "Quo ut rem exercitationem.", "memory": "A fuga officiis et.", "storage": "Saepe distinctio accusamus ea et recusandae repudiandae."}, {"container": "Tempora quisquam est soluta.", "cpu": "Assumenda dolorem non dolorum nihil esse.", "ephemeral-storage": "Quo ut rem exercitationem.", "memory": "A fuga officiis et.", "storage": "Saepe distinctio accusamus ea et recusandae repudiandae."}]}, "ParameterDefT": {"type": "object", "properties": {"constant": {"type": "boolean", "example": false}, "default": {"type": "string", "example": "Molestiae laboriosam."}, "description": {"type": "string", "example": "Temporibus voluptatem illo asperiores excepturi nobis."}, "label": {"type": "string", "example": "Aspernatur culpa et eos voluptas."}, "name": {"type": "string", "example": "Repellendus architecto dolorem aliquid fuga."}, "optional": {"type": "boolean", "example": false}, "options": {"type": "array", "items": {"$ref": "#/components/schemas/ParameterOptT"}, "example": [{"description": "Repellendus et fugiat voluptatum.", "value": "Impedit labore exercitationem."}, {"description": "Repellendus et fugiat voluptatum.", "value": "Impedit labore exercitationem."}, {"description": "Repellendus et fugiat voluptatum.", "value": "Impedit labore exercitationem."}]}, "type": {"type": "string", "example": "Sed ex nostrum maxime debitis sit est."}, "unary": {"type": "boolean", "example": false}, "unit": {"type": "string", "example": "Incidunt sed."}}, "example": {"constant": false, "default": "Modi amet eum enim.", "description": "Aut amet.", "label": "Veritatis nihil dolor est voluptas omnis.", "name": "Praesentium autem aut.", "optional": true, "options": [{"description": "Repellendus et fugiat voluptatum.", "value": "Impedit labore exercitationem."}, {"description": "Repellendus et fugiat voluptatum.", "value": "Impedit labore exercitationem."}, {"description": "Repellendus et fugiat voluptatum.", "value": "Impedit labore exercitationem."}], "type": "Nostrum et.", "unary": false, "unit": "Accusamus minus natus."}}, "ParameterOptT": {"type": "object", "properties": {"description": {"type": "string", "example": "Illo dolorum doloremque laudantium voluptatibus."}, "value": {"type": "string", "example": "Nostrum et nesciunt necessitatibus molestias."}}, "example": {"description": "Occaecati tempore id cumque voluptatem est est.", "value": "Dolor cum labore mollitia repellat ad sit."}}, "ParameterT": {"type": "object", "properties": {"name": {"type": "string", "example": "Aut tempore nihil."}, "value": {"type": "string", "example": "Et rerum molestiae dolor non nobis."}}, "example": {"name": "Deleniti molestiae ut.", "value": "Dolores deserunt nisi numquam."}}, "PartialMetaListT": {"type": "object", "properties": {"items": {"type": "array", "items": {"$ref": "#/components/schemas/OrderMetadataListItemRT"}, "description": "(Partial) list of metadata associated with this order", "example": [{"data-href": "https:/.../1/artifacts/0000-00001220/blob", "href": "https:/.../1/artifacts/0000-00001220", "mime-type": "image/geo+tiff", "name": "fire risk map", "size": 1234963}]}, "links": {"type": "array", "items": {"$ref": "#/components/schemas/LinkT"}, "description": "Links to more metadata, if there are any", "example": [{"href": "https://api.ivcap.net/1/....", "rel": "next"}]}}, "example": {"items": [{"data-href": "https:/.../1/artifacts/0000-00001220/blob", "href": "https:/.../1/artifacts/0000-00001220", "mime-type": "image/geo+tiff", "name": "fire risk map", "size": 1234963}], "links": [{"href": "https://api.ivcap.net/1/....", "rel": "next"}]}, "required": ["items", "links"]}, "PartialProductListT": {"type": "object", "properties": {"items": {"type": "array", "items": {"$ref": "#/components/schemas/ProductListItemT"}, "description": "(Partial) list of products delivered by this order", "example": [{"data-href": "https:/.../1/artifacts/0000-00001220/blob", "href": "https:/.../1/artifacts/0000-00001220", "mime-type": "image/geo+tiff", "name": "fire risk map", "size": 1234963}]}, "links": {"type": "array", "items": {"$ref": "#/components/schemas/LinkT"}, "description": "Links to more products, if there are any", "example": [{"href": "https://api.ivcap.net/1/....", "rel": "next"}]}}, "example": {"items": [{"data-href": "https:/.../1/artifacts/0000-00001220/blob", "href": "https:/.../1/artifacts/0000-00001220", "mime-type": "image/geo+tiff", "name": "fire risk map", "size": 1234963}], "links": [{"href": "https://api.ivcap.net/1/....", "rel": "next"}]}, "required": ["items", "links"]}, "PayloadForCreateEndpoint": {"type": "object", "properties": {"description": {"type": "string", "description": "More detailed description of the queue.", "example": "Events for the event service"}, "name": {"type": "string", "description": "Optional Name for the queue. Cannot contain whitespace, ., *, >, path separators (forward or backwards slash), and non-printable characters.", "example": "events"}, "policy": {"type": "string", "description": "Reference to policy used", "example": "urn:ivcap:policy:123e4567-e89b-12d3-a456-426614174000", "format": "uri"}}, "example": {"description": "Events for the event service", "name": "events", "policy": "urn:ivcap:policy:123e4567-e89b-12d3-a456-426614174000"}, "required": ["name"]}, "ProductListItemT": {"type": "object", "properties": {"data-href": {"type": "string", "example": "https://api.ivcap.net/1/artifacts/.../data"}, "href": {"type": "string", "example": "https://api.ivcap.net/1/artifacts/..."}, "id": {"type": "string", "example": "Aliquam illum vero sed beatae omnis sapiente."}, "mime-type": {"type": "string", "example": "Et architecto aut."}, "name": {"type": "string", "example": "Tenetur voluptatem."}, "size": {"type": "integer", "example": 6634301409449708605, "format": "int64"}, "status": {"type": "string", "example": "Quas repellat enim."}}, "example": {"data-href": "https://api.ivcap.net/1/artifacts/.../data", "href": "https://api.ivcap.net/1/artifacts/...", "id": "Est rerum ad.", "mime-type": "Aut fugiat doloremque itaque.", "name": "Voluptas qui asperiores.", "size": 8581807414303403974, "status": "Consectetur optio ratione cupiditate."}, "required": ["id", "status", "href"]}, "QueueListItem": {"type": "object", "properties": {"account": {"type": "string", "description": "Reference to billable account", "example": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "format": "uri"}, "description": {"type": "string", "description": "Description of the created queue.", "example": "Events for the event service"}, "href": {"type": "string", "example": "https://api.ivcap.net/1/services/..."}, "id": {"type": "string", "description": "service", "example": "urn:ivcap:service:123e4567-e89b-12d3-a456-426614174000", "format": "uri"}, "name": {"type": "string", "description": "Name of the created queue.", "example": "events"}}, "example": {"account": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "description": "Events for the event service", "href": "https://api.ivcap.net/1/services/...", "id": "urn:ivcap:service:123e4567-e89b-12d3-a456-426614174000", "name": "events"}, "required": ["id", "account", "href"]}, "QueueListResult": {"type": "object", "properties": {"at-time": {"type": "string", "description": "Time at which this list was valid", "example": "1996-12-19T16:39:57-08:00", "format": "date-time"}, "items": {"type": "array", "items": {"$ref": "#/components/schemas/QueueListItem"}, "description": "Queues", "example": [{"account": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "description": "Events for the event service", "href": "https://api.ivcap.net/1/services/...", "id": "urn:ivcap:service:123e4567-e89b-12d3-a456-426614174000", "name": "events"}, {"account": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "description": "Events for the event service", "href": "https://api.ivcap.net/1/services/...", "id": "urn:ivcap:service:123e4567-e89b-12d3-a456-426614174000", "name": "events"}]}, "links": {"type": "array", "items": {"$ref": "#/components/schemas/LinkT"}, "example": [{"href": "https://api.ivcap.net/1/....", "rel": "self", "type": "application/json"}, {"href": "https://api.ivcap.net/1/....", "rel": "first", "type": "application/json"}, {"href": "https://api.ivcap.net/1/....", "rel": "next", "type": "application/json"}, {"href": "https://api.ivcap.net/1/openapi/openapi3.json#/components/schemas/user", "rel": "describedBy", "type": "application/openapi3+json"}]}}, "example": {"at-time": "1996-12-19T16:39:57-08:00", "items": [{"account": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "description": "Events for the event service", "href": "https://api.ivcap.net/1/services/...", "id": "urn:ivcap:service:123e4567-e89b-12d3-a456-426614174000", "name": "events"}, {"account": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "description": "Events for the event service", "href": "https://api.ivcap.net/1/services/...", "id": "urn:ivcap:service:123e4567-e89b-12d3-a456-426614174000", "name": "events"}, {"account": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "description": "Events for the event service", "href": "https://api.ivcap.net/1/services/...", "id": "urn:ivcap:service:123e4567-e89b-12d3-a456-426614174000", "name": "events"}], "links": [{"href": "https://api.ivcap.net/1/....", "rel": "self", "type": "application/json"}, {"href": "https://api.ivcap.net/1/....", "rel": "first", "type": "application/json"}, {"href": "https://api.ivcap.net/1/....", "rel": "next", "type": "application/json"}, {"href": "https://api.ivcap.net/1/openapi/openapi3.json#/components/schemas/user", "rel": "describedBy", "type": "application/openapi3+json"}]}, "required": ["items", "at-time", "links"]}, "QueueMessage": {"type": "object", "properties": {"content": {"type": "string", "description": "Users should encode their JSON payloads as byte slices.", "example": "ewogICAgIm1lc3NhZ2UiOiAiTmV2ZXIgZ29ubmEgZ2l2ZSB5b3UgdXAsIG5ldmVyIGdvbm5hIGxldCB5b3UgZG93bi4uLiIsCiAgICAibGluayI6ICJodHRwczovL3d3dy55b3V0dWJlLmNvbS93YXRjaD92PWRRdzR3OVdnWGNRIgp9Cg==", "format": "binary"}, "content-type": {"type": "string", "description": "Encoding type of message content (defaults to 'application/json')", "example": "application/json"}, "schema": {"type": "string", "description": "Schema used for message", "example": "urn:ivcap:schema:message:queue.1"}}, "example": {"content": "ewogICAgIm1lc3NhZ2UiOiAiTmV2ZXIgZ29ubmEgZ2l2ZSB5b3UgdXAsIG5ldmVyIGdvbm5hIGxldCB5b3UgZG93bi4uLiIsCiAgICAibGluayI6ICJodHRwczovL3d3dy55b3V0dWJlLmNvbS93YXRjaD92PWRRdzR3OVdnWGNRIgp9Cg==", "content-type": "application/json", "schema": "urn:ivcap:schema:message:queue.1"}}, "Readqueueresponse": {"type": "object", "properties": {"bytes": {"type": "integer", "description": "Number of bytes in the queue", "example": 4300334797966755893}, "consumer-count": {"type": "integer", "description": "Number of consumers", "example": 2539605237243371757, "format": "int64"}, "created-at": {"type": "string", "description": "Timestamp when the queue was created", "example": "1996-12-19T16:39:57-08:00", "format": "date-time"}, "description": {"type": "string", "description": "Description of the queue.", "example": "Events for the event service"}, "first-seq": {"type": "integer", "description": "First sequence in the queue", "example": 11282170616863622787}, "first-time": {"type": "string", "description": "Timestamp of the first message in the queue", "example": "1996-12-19T16:39:57-08:00", "format": "date-time"}, "last-seq": {"type": "integer", "description": "Last sequence in the queue", "example": 3931799333322433307}, "last-time": {"type": "string", "description": "Timestamp of the last message in the queue", "example": "1996-12-19T16:39:57-08:00", "format": "date-time"}, "name": {"type": "string", "description": "Name of the queue.", "example": "events"}, "total-messages": {"type": "integer", "description": "Number of messages sent to the queue", "example": 796905992569381554}}, "example": {"bytes": 1737104659388213731, "consumer-count": 5341842631342997644, "created-at": "1996-12-19T16:39:57-08:00", "description": "Events for the event service", "first-seq": 87051961106067804, "first-time": "1996-12-19T16:39:57-08:00", "last-seq": 8082501838894533082, "last-time": "1996-12-19T16:39:57-08:00", "name": "events", "total-messages": 10638602382133394149}, "required": ["name", "created-at"]}, "ReferenceT": {"type": "object", "properties": {"title": {"type": "string", "description": "Title of reference document", "example": "Occaecati aut omnis exercitationem earum aliquid qui."}, "uri": {"type": "string", "description": "Link to document", "example": "http://collierhansen.org/kurt", "format": "uri"}}, "example": {"title": "Autem quod voluptas reprehenderit et cumque dolore.", "uri": "http://kuvalis.info/jesse.hyatt"}}, "ResourceMemoryT": {"type": "object", "properties": {"limit": {"type": "string", "description": "minimal requirements [system limit]", "example": "Odio inventore illum iste odio aut quia."}, "request": {"type": "string", "description": "minimal requirements [0]", "example": "Est rerum quia ad nihil."}}, "description": "See https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#resource-units-in-kubernetes for units", "example": {"limit": "Qui placeat quas nesciunt harum.", "request": "Sunt placeat vel numquam ratione."}}, "ResourceNotFoundT": {"type": "object", "properties": {"id": {"type": "string", "description": "ID of missing resource", "example": "cayp:type:123e4567-e89b-12d3-a456-426614174000", "format": "uri"}, "message": {"type": "string", "description": "Message of error", "example": "Resource 123...00 not found"}}, "description": "aspects not found", "example": {"id": "cayp:type:123e4567-e89b-12d3-a456-426614174000", "message": "Resource 123...00 not found"}, "required": ["message", "id"]}, "ServiceDefinitionT": {"type": "object", "properties": {"banner": {"type": "string", "description": "Link to banner image optionally used for this service", "example": "http://goodwin.name/zelma", "format": "uri"}, "description": {"type": "string", "description": "More detailed description of the service", "example": "This service ..."}, "name": {"type": "string", "description": "Optional provider provided name", "example": "Fire risk for Lot2"}, "parameters": {"type": "array", "items": {"$ref": "#/components/schemas/ParameterDefT"}, "description": "Service parameter definitions", "example": [{"description": "The name of the region as according to ...", "label": "Region Name", "name": "region", "type": "string"}, {"label": "Rainfall/month threshold", "name": "threshold", "type": "float", "unit": "m"}]}, "policy": {"type": "string", "description": "Reference to policy used", "example": "urn:ivcap:policy:123e4567-e89b-12d3-a456-426614174000", "format": "uri"}, "references": {"type": "array", "items": {"$ref": "#/components/schemas/ReferenceT"}, "description": "Reference to account revenues for this service should be credited to", "example": [{"title": "Dignissimos fuga facere minus aliquid qui magnam.", "uri": "http://mcglynn.info/yvette.pouros"}, {"title": "Dignissimos fuga facere minus aliquid qui magnam.", "uri": "http://mcglynn.info/yvette.pouros"}, {"title": "Dignissimos fuga facere minus aliquid qui magnam.", "uri": "http://mcglynn.info/yvette.pouros"}, {"title": "Dignissimos fuga facere minus aliquid qui magnam.", "uri": "http://mcglynn.info/yvette.pouros"}]}, "tags": {"type": "array", "items": {"type": "string", "example": "Hic impedit nesciunt similique sunt."}, "description": "Optional provider provided tags", "example": ["tag1", "tag2"]}, "workflow": {"$ref": "#/components/schemas/WorkflowT"}}, "example": {"banner": "http://funkolson.org/kaleigh.vandervort", "description": "This service ...", "name": "Fire risk for Lot2", "parameters": [{"description": "The name of the region as according to ...", "label": "Region Name", "name": "region", "type": "string"}, {"label": "Rainfall/month threshold", "name": "threshold", "type": "float", "unit": "m"}], "policy": "urn:ivcap:policy:123e4567-e89b-12d3-a456-426614174000", "references": [{"title": "Dignissimos fuga facere minus aliquid qui magnam.", "uri": "http://mcglynn.info/yvette.pouros"}, {"title": "Dignissimos fuga facere minus aliquid qui magnam.", "uri": "http://mcglynn.info/yvette.pouros"}], "tags": ["tag1", "tag2"], "workflow": {"argo": "Natus officia quae sed blanditiis vero.", "basic": {"command": ["/bin/sh", "-c", "echo $PATH"], "cpu": {"limit": "100m", "request": "10m"}, "ephemeral-storage": {"limit": "4Gi", "request": "2Gi"}, "gpu-number": 2, "gpu-type": "nvidia-tesla-t4", "image": "alpine", "memory": {"limit": "100Mi", "request": "10Mi"}}, "opts": "Aut consequuntur occaecati sint et dolor.", "type": "basic"}}, "required": ["description", "workflow", "parameters"]}, "ServiceListRT": {"type": "object", "properties": {"at-time": {"type": "string", "description": "Time at which this list was valid", "example": "1996-12-19T16:39:57-08:00", "format": "date-time"}, "items": {"type": "array", "items": {"$ref": "#/components/schemas/QueueListItem"}, "description": "Services", "example": [{"account": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "description": "Some lengthy description of fire risk", "href": "https://api.ivcap.net/1/services/...", "id": "urn:ivcap:service:123e4567-e89b-12d3-a456-426614174000", "name": "Fire risk for region"}, {"account": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "description": "Some lengthy description of fire risk", "href": "https://api.ivcap.net/1/services/...", "id": "urn:ivcap:service:123e4567-e89b-12d3-a456-426614174000", "name": "Fire risk for region"}]}, "links": {"type": "array", "items": {"$ref": "#/components/schemas/LinkT"}, "example": [{"href": "https://api.ivcap.net/1/....", "rel": "self", "type": "application/json"}, {"href": "https://api.ivcap.net/1/....", "rel": "first", "type": "application/json"}, {"href": "https://api.ivcap.net/1/....", "rel": "next", "type": "application/json"}, {"href": "https://api.ivcap.net/1/openapi/openapi3.json#/components/schemas/user", "rel": "describedBy", "type": "application/openapi3+json"}]}}, "example": {"at-time": "1996-12-19T16:39:57-08:00", "items": [{"account": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "description": "Some lengthy description of fire risk", "href": "https://api.ivcap.net/1/services/...", "id": "urn:ivcap:service:123e4567-e89b-12d3-a456-426614174000", "name": "Fire risk for region"}, {"account": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "description": "Some lengthy description of fire risk", "href": "https://api.ivcap.net/1/services/...", "id": "urn:ivcap:service:123e4567-e89b-12d3-a456-426614174000", "name": "Fire risk for region"}, {"account": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "description": "Some lengthy description of fire risk", "href": "https://api.ivcap.net/1/services/...", "id": "urn:ivcap:service:123e4567-e89b-12d3-a456-426614174000", "name": "Fire risk for region"}, {"account": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "description": "Some lengthy description of fire risk", "href": "https://api.ivcap.net/1/services/...", "id": "urn:ivcap:service:123e4567-e89b-12d3-a456-426614174000", "name": "Fire risk for region"}], "links": [{"href": "https://api.ivcap.net/1/....", "rel": "self", "type": "application/json"}, {"href": "https://api.ivcap.net/1/....", "rel": "first", "type": "application/json"}, {"href": "https://api.ivcap.net/1/....", "rel": "next", "type": "application/json"}, {"href": "https://api.ivcap.net/1/openapi/openapi3.json#/components/schemas/user", "rel": "describedBy", "type": "application/openapi3+json"}]}, "required": ["items", "at-time", "links"]}, "ServiceStatusRT": {"type": "object", "properties": {"account": {"type": "string", "description": "Reference to billable account", "example": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "format": "uri"}, "description": {"type": "string", "description": "More detailed description of the service", "example": "This service ..."}, "id": {"type": "string", "description": "ID", "example": "urn:ivcap:service:123e4567-e89b-12d3-a456-426614174000", "format": "uuid"}, "links": {"type": "array", "items": {"$ref": "#/components/schemas/LinkT"}, "example": [{"href": "https://api.ivcap.net/1/....", "rel": "self", "type": "application/json"}, {"href": "https://api.ivcap.net/1/openapi/openapi3.json#/components/schemas/user", "rel": "describedBy", "type": "application/json"}]}, "name": {"type": "string", "description": "Optional provider provided name", "example": "Fire risk for Lot2"}, "parameters": {"type": "array", "items": {"$ref": "#/components/schemas/ParameterDefT"}, "description": "Service parameter definitions", "example": [{"description": "The name of the region as according to ...", "label": "Region Name", "name": "region", "type": "string"}, {"label": "Rainfall/month threshold", "name": "threshold", "type": "float", "unit": "m"}]}, "status": {"type": "string", "description": "Service status", "example": "error", "enum": ["active", "inactive", "error"]}, "tags": {"type": "array", "items": {"type": "string", "example": "Odit voluptatem."}, "description": "Optional provider provided tags", "example": ["tag1", "tag2"]}}, "example": {"account": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "description": "This service ...", "id": "urn:ivcap:service:123e4567-e89b-12d3-a456-426614174000", "links": [{"href": "https://api.ivcap.net/1/....", "rel": "self", "type": "application/json"}, {"href": "https://api.ivcap.net/1/openapi/openapi3.json#/components/schemas/user", "rel": "describedBy", "type": "application/json"}], "name": "Fire risk for Lot2", "parameters": [{"description": "The name of the region as according to ...", "label": "Region Name", "name": "region", "type": "string"}, {"label": "Rainfall/month threshold", "name": "threshold", "type": "float", "unit": "m"}], "status": "active", "tags": ["tag1", "tag2"]}, "required": ["links", "id", "status", "account", "parameters"]}, "WorkflowT": {"type": "object", "properties": {"argo": {"type": "string", "description": "Defines the workflow using argo's WF schema", "example": "Non dolorem sed voluptates at et velit.", "format": "binary"}, "basic": {"$ref": "#/components/schemas/BasicWorkflowOptsT"}, "opts": {"type": "string", "description": "Type specific options - left for backward compatibility, if possible use type specific elements", "example": "Incidunt quae maxime distinctio.", "format": "binary"}, "type": {"type": "string", "description": "Type of workflow", "example": "basic"}}, "description": "Defines the workflow to use to execute this service. Currently supported 'types' are 'basic'\n\tand 'argo'. In case of 'basic', use the 'basic' element for further parameters. In the current implementation\n\t'opts' is expected to contain the same schema as 'basic'", "example": {"argo": "Ut voluptatem in id et.", "basic": {"command": ["/bin/sh", "-c", "echo $PATH"], "cpu": {"limit": "100m", "request": "10m"}, "ephemeral-storage": {"limit": "4Gi", "request": "2Gi"}, "gpu-number": 2, "gpu-type": "nvidia-tesla-t4", "image": "alpine", "memory": {"limit": "100Mi", "request": "10Mi"}}, "opts": "Quia ipsa.", "type": "basic"}, "required": ["type"]}}, "securitySchemes": {"jwt_header_Authorization": {"type": "http", "description": "Secures endpoint by requiring a valid JWT token", "scheme": "bearer"}}}, "tags": [{"name": "openapi", "description": "The openapi service serves the OpenAPI definition."}, {"name": "aspect", "description": "Manages the life cycle of aspect(s) attached to some entity."}, {"name": "artifact", "description": "Manage the life cycle of an artifact stored by this deployment."}, {"name": "metadata", "description": "Manages the life cycle of metadata attached to an entity."}, {"name": "order", "description": "Manage the life cycle of an order for CRE services."}, {"name": "queue", "description": "Manage the life cycle of a queue."}, {"name": "service", "description": "Manage the life cycle of a service offered on the CRE marketplace."}]}
