{"openapi": "3.0.3", "info": {"title": "IVCAP", "description": "\n**IVCAP** is for **service providers** to **offer** analytics **services** \nand for **consumers** to **order** customised **products** produced by said services.\n\n### Typical Workflow\n\n1. Obtain an token from the ID Providers listed in the document returned \nby [/1/authinfo.yaml](/1/authinfo.yaml). The token needs to be added\nas a bearer token via the \n<code>Authorization</code> header to every request to this service.\n1. <a href=\"#get-/1/services\">List</a> all available service.\n1. Select appropriate service and retrieve details, like parameters via \n<a href=\"#get-/1/services/-id-\">Read Service</a>.\n1. Create the appropriate json request and POST it to \n<a href=\"#post-/1/orders\">Create Order</a>. (see the example in the\nservice description.)\n1. The reply from the above POST operation contains a link (<code>links/self</code>) to the\nnewly create order record accessible via <a href=\"#get-/1/orders/-id-\">Read Order</a>.\n1. Progress of the order fulfillment can be tracked via repeated calls to \n<a href=\"#get-/1/orders/-id-\">Read Order</a> and the returned <code>status</code>.\n1. Any information products created in the context of an order will be listed under <code>producs</code>\nwhich also include a link to the respective <a href=\"#get-/1/artifacts/-id-\">Read Artifact</a>.\n1. The <a href=\"#get-/1/artifacts/-id-\">Read Artifact</a> service will return more details for \neach artifact, including a <code>data</code> link through which the artifact content can be downloaded. (The\ndownload link is also included in the <code>products</code> list returned by \nthe <a href=\"#get-/1/orders/-id-\">Read Order</a> service ).\n\nPlease note that all schemas in this API are following the [{json:api}](https://jsonapi.org/) specs \nwherever appropriate.\n\n### High-level Architecture\n\nOn receiving an order through this **API**, the internal *Order Dispatcher* is \ncreating a *workflow*, dispatching that to the \n[Argo workflow engine](https://argoproj.github.io/argo-workflows/) \nand create appropriate records in [Magda](https://magda.io/). \nAs the execution of the workflow progresses, appropriate updates are posted to the order record in Magda, \nsuch as data accessed or produced. In addition, any information products created will be\nstored via [Minio](https://min.io/) in a deployment specific object store \nand made accessible through the *Artifact* service.\n\t", "version": "0.28"}, "servers": [{"url": "http://localhost:8088", "description": "This endpoint hosts all the IVCAP services."}], "paths": {"/1/artifacts": {"get": {"tags": ["artifact"], "summary": "list artifact", "description": "list artifacts", "operationId": "artifact#list", "parameters": [{"name": "limit", "in": "query", "description": "The $limit system query option requests the number of items in the queried\n\t\t\t\tcollection to be included in the result.", "allowEmptyValue": true, "schema": {"type": "integer", "description": "The $limit system query option requests the number of items in the queried\n\t\t\t\tcollection to be included in the result.", "default": 10, "example": 10, "minimum": 1, "maximum": 50}, "example": 10}, {"name": "page", "in": "query", "description": "The content of 'page' is returned in the 'links' part of a previous query and\n\t\t\t\twill when set, ALL other parameters, except for 'limit' are ignored.", "allowEmptyValue": true, "schema": {"type": "string", "description": "The content of 'page' is returned in the 'links' part of a previous query and\n\t\t\t\twill when set, ALL other parameters, except for 'limit' are ignored.", "example": "gdsgQwhdgd"}, "example": "gdsgQwhdgd"}, {"name": "filter", "in": "query", "description": "The 'filter' system query option allows clients to filter a collection of\n\t\t\t\tresources that are addressed by a request URL. The expression specified with 'filter'\n\t\t\t\tis evaluated for each resource in the collection, and only items where the expression\n\t\t\t\tevaluates to true are included in the response.", "allowEmptyValue": true, "schema": {"type": "string", "description": "The 'filter' system query option allows clients to filter a collection of\n\t\t\t\tresources that are addressed by a request URL. The expression specified with 'filter'\n\t\t\t\tis evaluated for each resource in the collection, and only items where the expression\n\t\t\t\tevaluates to true are included in the response.", "example": "name ~= 'Scott%'"}, "example": "name ~= 'Scott%'"}, {"name": "order-by", "in": "query", "description": "The 'orderby' query option allows clients to request resources in either\n\t\t\t\tascending order using asc or descending order using desc. If asc or desc not specified,\n\t\t\t\tthen the resources will be ordered in ascending order. The request below orders Trips on\n\t\t\t\tproperty EndsAt in descending order.", "allowEmptyValue": true, "schema": {"type": "string", "description": "The 'orderby' query option allows clients to request resources in either\n\t\t\t\tascending order using asc or descending order using desc. If asc or desc not specified,\n\t\t\t\tthen the resources will be ordered in ascending order. The request below orders Trips on\n\t\t\t\tproperty EndsAt in descending order.", "example": "orderby=EndsAt"}, "example": "orderby=EndsAt"}, {"name": "order-desc", "in": "query", "description": "When set order result in descending order. Ascending order is the default.", "allowEmptyValue": true, "schema": {"type": "boolean", "description": "When set order result in descending order. Ascending order is the default.", "default": false, "example": false}, "example": false}, {"name": "at-time", "in": "query", "description": "Return the state of the respective resources at that time [now]", "allowEmptyValue": true, "schema": {"type": "string", "description": "Return the state of the respective resources at that time [now]", "example": "1996-12-19T16:39:57-08:00", "format": "date-time"}, "example": "1996-12-19T16:39:57-08:00"}], "responses": {"200": {"description": "OK response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ArtifactListRT"}, "example": {"artifacts": [{"id": "cayp:artifact:0000-000", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Omnis cum odit."}, "mime-type": "image/jpeg", "name": "Fire risk for Lot2", "size": 19000, "status": "ready"}, {"id": "cayp:artifact:0000-000", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Omnis cum odit."}, "mime-type": "image/jpeg", "name": "Fire risk for Lot2", "size": 19000, "status": "ready"}, {"id": "cayp:artifact:0000-000", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Omnis cum odit."}, "mime-type": "image/jpeg", "name": "Fire risk for Lot2", "size": 19000, "status": "ready"}, {"id": "cayp:artifact:0000-000", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Omnis cum odit."}, "mime-type": "image/jpeg", "name": "Fire risk for Lot2", "size": 19000, "status": "ready"}], "at-time": "1996-12-19T16:39:57-08:00", "links": {"first": "https://api.com/foo/...", "next": "https://api.com/foo/...", "self": "https://api.com/foo/..."}}}}}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}}}}, "422": {"description": "invalid-parameter: Request contained semantically wrong paramter value", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidParameterValue"}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}}}}}, "security": [{"jwt_header_Authorization": ["consumer:read", "consumer:write"]}]}, "post": {"tags": ["artifact"], "summary": "upload artifact", "description": "Upload content and create a artifacts.", "operationId": "artifact#upload", "parameters": [{"name": "Content-Type", "in": "header", "description": "Content-Type header, MUST define type of uploaded content.", "allowEmptyValue": true, "schema": {"type": "string", "description": "Content-Type header, MUST define type of uploaded content.", "example": "application/x-netcdf4"}, "example": "application/x-netcdf4"}, {"name": "Content-Encoding", "in": "header", "description": "Content-Encoding header, MAY define encoding of content.", "allowEmptyValue": true, "schema": {"type": "string", "description": "Content-Encoding header, MAY define encoding of content.", "example": "gzip"}, "example": "gzip"}, {"name": "Content-Length", "in": "header", "description": "Content-Length header, MAY define size of expected upload.", "allowEmptyValue": true, "schema": {"type": "integer", "description": "Content-Length header, MAY define size of expected upload.", "example": 2376, "format": "int64"}, "example": 2376}, {"name": "X-Name", "in": "header", "description": "X-Name header, MAY define a more human friendly name. Reusing a name will NOT override an existing artifact with the same name", "allowEmptyValue": true, "schema": {"type": "string", "description": "X-Name header, MAY define a more human friendly name. Reusing a name will NOT override an existing artifact with the same name", "example": "sample-12"}, "example": "sample-12"}, {"name": "X-Collection", "in": "header", "description": "X-Collection header, MAY define an collection name as a simple way of grouping artifacts", "allowEmptyValue": true, "schema": {"type": "string", "description": "X-Collection header, MAY define an collection name as a simple way of grouping artifacts", "example": "urn:projectX:collection:field-trip-jun-22"}, "example": "urn:projectX:collection:field-trip-jun-22"}, {"name": "X-Policy", "in": "header", "description": "X-Policy header, MAY define a specific policy to control access to this artifact", "allowEmptyValue": true, "schema": {"type": "string", "description": "X-Policy header, MAY define a specific policy to control access to this artifact", "example": "urn:ivcap:policy:ivcap.open.metadata"}, "example": "urn:ivcap:policy:ivcap.open.metadata"}, {"name": "X-Content-Type", "in": "header", "description": "X-Content-Type header, used for initial, empty content creation requests.", "allowEmptyValue": true, "schema": {"type": "string", "description": "X-Content-Type header, used for initial, empty content creation requests.", "example": "application/x-netcdf4"}, "example": "application/x-netcdf4"}, {"name": "X-Content-Length", "in": "header", "description": "X-Content-Length header, used for initial, empty content creation requests.", "allowEmptyValue": true, "schema": {"type": "integer", "description": "X-Content-Length header, used for initial, empty content creation requests.", "example": 2376, "format": "int64"}, "example": 2376}, {"name": "Upload-Length", "in": "header", "description": "Upload-Length header, sets the expected content size part of the TUS protocol.", "allowEmptyValue": true, "schema": {"type": "integer", "description": "Upload-Length header, sets the expected content size part of the TUS protocol.", "example": 2376, "format": "int64"}, "example": 2376}, {"name": "Tus-Resumable", "in": "header", "description": "Tus-Resumable header, specifies TUS protocol version.", "allowEmptyValue": true, "schema": {"type": "string", "description": "Tus-Resumable header, specifies TUS protocol version.", "example": "1.0.0"}, "example": "1.0.0"}], "responses": {"201": {"description": "Created response.", "headers": {"Location": {"description": "link back to record", "schema": {"type": "string", "description": "link back to record", "example": "Est nostrum."}, "example": "Est vel officia eum exercitationem officiis."}, "Tus-Resumable": {"description": "indicate version of TUS supported", "schema": {"type": "string", "description": "indicate version of TUS supported", "example": "Quaerat id et."}, "example": "Omnis sequi explicabo repellat rerum ut."}, "Upload-Offset": {"description": "TUS offset for partially uploaded content", "schema": {"type": "integer", "description": "TUS offset for partially uploaded content", "example": 2488044105477207604, "format": "int64"}, "example": 4695068871711813053}}, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ArtifactStatusRT"}, "example": {"account": {"id": "http://beahan.net/laurie", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Omnis cum odit."}}, "cache-of": "Consequuntur vero rerum aut numquam aut saepe.", "created-at": "2022-01-01", "data": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Omnis cum odit."}, "etag": "Asperiores illo et ut.", "id": "type:scope:name", "last-modified-at": "2022-01-01", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Omnis cum odit."}, "mime-type": "Quidem architecto.", "name": "Fire risk per LGA", "policy": {"id": "http://beahan.net/laurie", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Omnis cum odit."}}, "size": 8294944500382711097, "status": "ready"}}}}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}}}}}, "security": [{"jwt_header_Authorization": ["consumer:read", "consumer:write"]}]}}, "/1/artifacts/{id}": {"get": {"tags": ["artifact"], "summary": "read artifact", "description": "Show artifacts by ID", "operationId": "artifact#read", "parameters": [{"name": "id", "in": "path", "description": "ID of artifacts to show", "required": true, "schema": {"type": "string", "description": "ID of artifacts to show", "example": "type:scope:name"}, "example": "type:scope:name"}], "responses": {"200": {"description": "OK response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ArtifactStatusRT"}, "example": {"account": {"id": "http://beahan.net/laurie", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Omnis cum odit."}}, "cache-of": "Amet earum voluptas.", "created-at": "2022-01-01", "data": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Omnis cum odit."}, "etag": "Eum maxime est ut esse unde libero.", "id": "type:scope:name", "last-modified-at": "2022-01-01", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Omnis cum odit."}, "location": "Sint consectetur.", "mime-type": "Enim ab in sed.", "name": "Fire risk per LGA", "policy": {"id": "http://beahan.net/laurie", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Omnis cum odit."}}, "size": 1612959654296154970, "status": "ready", "tus-offset": 337726381746410345, "tus-resumable": "Quia quia minus dolores nemo reiciendis voluptates."}}}}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}}}}, "404": {"description": "not-found: artifacts not found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ResourceNotFoundT"}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}}}}}, "security": [{"jwt_header_Authorization": ["consumer:read", "consumer:write"]}]}}, "/1/metadata": {"get": {"tags": ["metadata"], "summary": "list metadata", "description": "Return a list of metadata records.", "operationId": "metadata#list", "parameters": [{"name": "entity-id", "in": "query", "description": "Entity for which to request metadata", "allowEmptyValue": true, "schema": {"type": "string", "description": "Entity for which to request metadata", "example": "urn:blue:image.collA.12", "format": "uri"}, "example": "urn:blue:image.collA.12"}, {"name": "schema", "in": "query", "description": "Schema prefix using '%' as wildcard indicator", "allowEmptyValue": true, "schema": {"type": "string", "description": "Schema prefix using '%' as wildcard indicator", "example": "urn:blue:image%"}, "example": "urn:blue:image%"}, {"name": "aspect-path", "in": "query", "description": "To learn more about the supported format, see\n\t\t\t\t\thttps://www.postgresql.org/docs/current/datatype-json.html#DATATYPE-JSONPATH", "allowEmptyValue": true, "schema": {"type": "string", "description": "To learn more about the supported format, see\n\t\t\t\t\thttps://www.postgresql.org/docs/current/datatype-json.html#DATATYPE-JSONPATH", "example": "$.images[*] ? (@.size > 10000)"}, "example": "$.images[*] ? (@.size > 10000)"}, {"name": "at-time", "in": "query", "description": "Return metadata which where valid at that time [now]", "allowEmptyValue": true, "schema": {"type": "string", "description": "Return metadata which where valid at that time [now]", "example": "1996-12-19T16:39:57-08:00", "format": "date-time"}, "example": "1996-12-19T16:39:57-08:00"}, {"name": "limit", "in": "query", "description": "The 'limit' system query option requests the number of items in the queried\n\t\t\t\tcollection to be included in the result.", "allowEmptyValue": true, "schema": {"type": "integer", "description": "The 'limit' system query option requests the number of items in the queried\n\t\t\t\tcollection to be included in the result.", "default": 10, "example": 10, "minimum": 1, "maximum": 50}, "example": 10}, {"name": "filter", "in": "query", "description": "The 'filter' system query option allows clients to filter a collection of\n\t\t\t\tresources that are addressed by a request URL. The expression specified with 'filter'\n\t\t\t\tis evaluated for each resource in the collection, and only items where the expression\n\t\t\t\tevaluates to true are included in the response.", "allowEmptyValue": true, "schema": {"type": "string", "description": "The 'filter' system query option allows clients to filter a collection of\n\t\t\t\tresources that are addressed by a request URL. The expression specified with 'filter'\n\t\t\t\tis evaluated for each resource in the collection, and only items where the expression\n\t\t\t\tevaluates to true are included in the response.", "default": "", "example": "filter=FirstName eq 'Scott'"}, "example": "filter=FirstName eq 'Scott'"}, {"name": "order-by", "in": "query", "description": "The 'orderby' query option allows clients to request resources in either\n\t\t\t\tascending order using asc or descending order using desc. If asc or desc not specified,\n\t\t\t\tthen the resources will be ordered in ascending order. The request below orders Trips on\n\t\t\t\tproperty EndsAt in descending order.", "allowEmptyValue": true, "schema": {"type": "string", "description": "The 'orderby' query option allows clients to request resources in either\n\t\t\t\tascending order using asc or descending order using desc. If asc or desc not specified,\n\t\t\t\tthen the resources will be ordered in ascending order. The request below orders Trips on\n\t\t\t\tproperty EndsAt in descending order.", "default": "", "example": "orderby=EndsAt"}, "example": "orderby=EndsAt"}, {"name": "order-desc", "in": "query", "description": "When set order result in descending order. Ascending order is the default.", "allowEmptyValue": true, "schema": {"type": "boolean", "description": "When set order result in descending order. Ascending order is the default.", "example": true}, "example": true}, {"name": "page", "in": "query", "description": "The content of '$page' is returned in the 'links' part of a previous query and\n\t\t\t\twill when set, ALL other parameters, except for 'limit' are ignored.", "allowEmptyValue": true, "schema": {"type": "string", "description": "The content of '$page' is returned in the 'links' part of a previous query and\n\t\t\t\twill when set, ALL other parameters, except for 'limit' are ignored.", "example": "gdsgQwhdgd"}, "example": "gdsgQwhdgd"}], "responses": {"200": {"description": "OK response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ListMetaRT"}, "example": {"aspect-path": "Dignissimos voluptate consequuntur exercitationem quae provident.", "at-time": "1996-12-19T16:39:57-08:00", "entity-id": "urn:blue:image.collA.12", "links": {"first": "https://api.com/foo/...", "next": "https://api.com/foo/...", "self": "https://api.com/foo/..."}, "records": [{"aspect": "{...}", "aspectContext": "{...}", "entity": "urn:blue:transect.1", "record-id": "urn:ivcap:record.123e4567-e89b-12d3-a456-426614174000", "schema": "urn:blue:schema.image"}, {"aspect": "{...}", "aspectContext": "{...}", "entity": "urn:blue:transect.1", "record-id": "urn:ivcap:record.123e4567-e89b-12d3-a456-426614174000", "schema": "urn:blue:schema.image"}], "schema": "urn:blue:image,urn:blue:location"}}}}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}}}}, "422": {"description": "invalid-parameter: Request contained semantically wrong paramter value", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidParameterValue"}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}}}}}, "security": [{"jwt_header_Authorization": ["consumer:read", "consumer:write"]}]}, "post": {"tags": ["metadata"], "summary": "add metadata", "description": "Attach new metadata to an entity.", "operationId": "metadata#add", "parameters": [{"name": "entity-id", "in": "query", "description": "Entity to which attach metadata", "allowEmptyValue": true, "required": true, "schema": {"type": "string", "description": "Entity to which attach metadata", "example": "http://haleygulgowski.biz/leanne", "format": "uri"}, "example": "http://stantonruecker.org/katelynn_cruickshank"}, {"name": "schema", "in": "query", "description": "Schema of metadata", "allowEmptyValue": true, "required": true, "schema": {"type": "string", "description": "Schema of metadata", "example": "http://kiehn.biz/sibyl", "format": "uri"}, "example": "http://romaguera.org/dino.kunze"}, {"name": "policy-id", "in": "query", "description": "Policy guiding visibility and actions performed", "allowEmptyValue": true, "schema": {"type": "string", "description": "Policy guiding visibility and actions performed", "example": "http://brakusokeefe.net/larue", "format": "uri"}, "example": "http://hamillcrona.org/bret.herzog"}, {"name": "Content-Type", "in": "header", "description": "Content-Type header, MUST be of application/json.", "allowEmptyValue": true, "required": true, "schema": {"type": "string", "description": "Content-Type header, MUST be of application/json.", "example": "application/json"}, "example": "application/json"}], "requestBody": {"description": "Aspect content", "required": true, "content": {"application/json": {"schema": {"type": "string", "description": "Aspect content", "example": "{\"$schema\": ...}", "format": "binary"}, "example": "{\"$schema\": ...}"}}}, "responses": {"200": {"description": "OK response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AddMetaRT"}, "example": {"record-id": "urn:ivcap:record.123e4567-e89b-12d3-a456-426614174000"}}}}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}}}}, "422": {"description": "invalid-parameter: Request contained semantically wrong paramter value", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidParameterValue"}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}}}}}, "security": [{"jwt_header_Authorization": ["consumer:read", "consumer:write"]}]}, "put": {"tags": ["metadata"], "summary": "update_one metadata", "description": "Revoke a record for the same entity and same schema and create new one\n\t\t\twith the provided properties. __NOTE__, this method will fail if there is more than one active record for the entity/schema pair.", "operationId": "metadata#update_one", "parameters": [{"name": "entity-id", "in": "query", "description": "Entity to which attach metadata", "allowEmptyValue": true, "required": true, "schema": {"type": "string", "description": "Entity to which attach metadata", "example": "urn:url:....", "format": "uri"}, "example": "urn:url:...."}, {"name": "schema", "in": "query", "description": "Schema of metadata", "allowEmptyValue": true, "required": true, "schema": {"type": "string", "description": "Schema of metadata", "example": "urn:url:....", "format": "uri"}, "example": "urn:url:...."}, {"name": "policy-id", "in": "query", "description": "Policy guiding visibility and actions performed", "allowEmptyValue": true, "schema": {"type": "string", "description": "Policy guiding visibility and actions performed", "example": "http://bartoletti.net/stella", "format": "uri"}, "example": "http://dooleyblock.name/tod"}, {"name": "Content-Type", "in": "header", "description": "Content-Type header, MUST be of application/json.", "allowEmptyValue": true, "schema": {"type": "string", "description": "Content-Type header, MUST be of application/json.", "example": "application/json"}, "example": "application/json"}], "requestBody": {"description": "Aspect content", "required": true, "content": {"application/json": {"schema": {"type": "string", "description": "Aspect content", "example": "{\"$schema\": ...}", "format": "binary"}, "example": "{\"$schema\": ...}"}}}, "responses": {"200": {"description": "OK response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AddMetaRT"}, "example": {"record-id": "urn:ivcap:record.123e4567-e89b-12d3-a456-426614174000"}}}}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}}}}, "422": {"description": "invalid-parameter: Request contained semantically wrong paramter value", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidParameterValue"}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}}}}}, "security": [{"jwt_header_Authorization": ["consumer:read", "consumer:write"]}]}}, "/1/metadata/{id}": {"delete": {"tags": ["metadata"], "summary": "revoke metadata", "description": "Retract a previously created statement.", "operationId": "metadata#revoke", "parameters": [{"name": "id", "in": "path", "description": "Record ID to restract", "required": true, "schema": {"type": "string", "description": "Record ID to restract", "example": "urn:ivcap:record.53cbb715-4ffd-4158-9e55-5d0ae69605a4", "format": "uri"}, "example": "urn:ivcap:record.53cbb715-4ffd-4158-9e55-5d0ae69605a4"}], "responses": {"204": {"description": "No Content response."}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}}}}, "422": {"description": "invalid-parameter: Request contained semantically wrong paramter value", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidParameterValue"}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}}}}}, "security": [{"jwt_header_Authorization": ["consumer:read", "consumer:write"]}]}, "get": {"tags": ["metadata"], "summary": "read metadata", "description": "Show metadata by ID", "operationId": "metadata#read", "parameters": [{"name": "id", "in": "path", "description": "ID of metadata to show", "required": true, "schema": {"type": "string", "description": "ID of metadata to show", "example": "type:scope:name"}, "example": "type:scope:name"}], "responses": {"200": {"description": "OK response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/MetadataRecordRT"}, "example": {"aspect": "{...}", "asserter": "...", "entity": "urn:blue:transect.1", "record-id": "urn:ivcap:record.123e4567-e89b-12d3-a456-426614174000", "revoker": "...", "schema": "urn:blue:schema.image", "valid-from": "1996-12-19T16:39:57-08:00", "valid-to": "1996-12-19T16:39:57-08:00"}}}}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}}}}, "404": {"description": "not-found: metadata not found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ResourceNotFoundT"}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}}}}}, "security": [{"jwt_header_Authorization": ["consumer:read", "consumer:write"]}]}, "put": {"tags": ["metadata"], "summary": "update_record metadata", "description": "Revoke this record and create a new one with the information provided.\n\t\t\tFor any field not provided, the value from the current record is used.", "operationId": "metadata#update_record", "parameters": [{"name": "entity-id", "in": "query", "description": "Entity to which attach metadata", "allowEmptyValue": true, "schema": {"type": "string", "description": "Entity to which attach metadata", "example": "urn:url:....", "format": "uri"}, "example": "urn:url:...."}, {"name": "schema", "in": "query", "description": "Schema of metadata", "allowEmptyValue": true, "schema": {"type": "string", "description": "Schema of metadata", "example": "urn:url:....", "format": "uri"}, "example": "urn:url:...."}, {"name": "policy-id", "in": "query", "description": "Policy guiding visibility and actions performed", "allowEmptyValue": true, "schema": {"type": "string", "description": "Policy guiding visibility and actions performed", "example": "http://monahan.name/ora.collier", "format": "uri"}, "example": "http://wildermankuphal.biz/jamal.kassulke"}, {"name": "id", "in": "path", "description": "Record ID to update", "required": true, "schema": {"type": "string", "description": "Record ID to update", "example": "urn:ivcap:record.53cbb715-4ffd-4158-9e55-5d0ae69605a4", "format": "uri"}, "example": "urn:ivcap:record.53cbb715-4ffd-4158-9e55-5d0ae69605a4"}, {"name": "Content-Type", "in": "header", "description": "Content-Type header, MUST be of application/json.", "allowEmptyValue": true, "schema": {"type": "string", "description": "Content-Type header, MUST be of application/json.", "example": "application/json"}, "example": "application/json"}], "requestBody": {"description": "Aspect content", "required": true, "content": {"application/json": {"schema": {"type": "string", "description": "Aspect content", "example": "{\"$schema\": ...}", "format": "binary"}, "example": "{\"$schema\": ...}"}}}, "responses": {"200": {"description": "OK response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AddMetaRT"}, "example": {"record-id": "urn:ivcap:record.123e4567-e89b-12d3-a456-426614174000"}}}}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}}}}, "422": {"description": "invalid-parameter: Request contained semantically wrong paramter value", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidParameterValue"}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}}}}}, "security": [{"jwt_header_Authorization": ["consumer:read", "consumer:write"]}]}}, "/1/openapi/openapi3.json": {"get": {"tags": ["openapi"], "summary": "Download /public/openapi3.json", "description": "JSON document containing the API swagger definition", "operationId": "openapi#/1/openapi/openapi3.json", "responses": {"200": {"description": "File downloaded"}}}}, "/1/orders": {"get": {"tags": ["order"], "summary": "list order", "description": "list orders", "operationId": "order#list", "parameters": [{"name": "limit", "in": "query", "description": "The $limit system query option requests the number of items in the queried\n\t\t\t\tcollection to be included in the result.", "allowEmptyValue": true, "schema": {"type": "integer", "description": "The $limit system query option requests the number of items in the queried\n\t\t\t\tcollection to be included in the result.", "default": 10, "example": 10, "minimum": 1, "maximum": 50}, "example": 10}, {"name": "page", "in": "query", "description": "The content of 'page' is returned in the 'links' part of a previous query and\n\t\t\t\twill when set, ALL other parameters, except for 'limit' are ignored.", "allowEmptyValue": true, "schema": {"type": "string", "description": "The content of 'page' is returned in the 'links' part of a previous query and\n\t\t\t\twill when set, ALL other parameters, except for 'limit' are ignored.", "example": "gdsgQwhdgd"}, "example": "gdsgQwhdgd"}, {"name": "filter", "in": "query", "description": "The 'filter' system query option allows clients to filter a collection of\n\t\t\t\tresources that are addressed by a request URL. The expression specified with 'filter'\n\t\t\t\tis evaluated for each resource in the collection, and only items where the expression\n\t\t\t\tevaluates to true are included in the response.", "allowEmptyValue": true, "schema": {"type": "string", "description": "The 'filter' system query option allows clients to filter a collection of\n\t\t\t\tresources that are addressed by a request URL. The expression specified with 'filter'\n\t\t\t\tis evaluated for each resource in the collection, and only items where the expression\n\t\t\t\tevaluates to true are included in the response.", "example": "name ~= 'Scott%'"}, "example": "name ~= 'Scott%'"}, {"name": "order-by", "in": "query", "description": "The 'orderby' query option allows clients to request resources in either\n\t\t\t\tascending order using asc or descending order using desc. If asc or desc not specified,\n\t\t\t\tthen the resources will be ordered in ascending order. The request below orders Trips on\n\t\t\t\tproperty EndsAt in descending order.", "allowEmptyValue": true, "schema": {"type": "string", "description": "The 'orderby' query option allows clients to request resources in either\n\t\t\t\tascending order using asc or descending order using desc. If asc or desc not specified,\n\t\t\t\tthen the resources will be ordered in ascending order. The request below orders Trips on\n\t\t\t\tproperty EndsAt in descending order.", "example": "orderby=EndsAt"}, "example": "orderby=EndsAt"}, {"name": "order-desc", "in": "query", "description": "When set order result in descending order. Ascending order is the default.", "allowEmptyValue": true, "schema": {"type": "boolean", "description": "When set order result in descending order. Ascending order is the default.", "default": false, "example": true}, "example": true}, {"name": "at-time", "in": "query", "description": "Return the state of the respective resources at that time [now]", "allowEmptyValue": true, "schema": {"type": "string", "description": "Return the state of the respective resources at that time [now]", "example": "1996-12-19T16:39:57-08:00", "format": "date-time"}, "example": "1996-12-19T16:39:57-08:00"}], "responses": {"200": {"description": "OK response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/OrderListRT"}, "example": {"at-time": "1996-12-19T16:39:57-08:00", "links": {"first": "https://api.com/foo/...", "next": "https://api.com/foo/...", "self": "https://api.com/foo/..."}, "orders": [{"account-id": "2022-01-01", "finished-at": "2022-01-01", "id": "cayp:order:123e4567-e89b-12d3-a456-426614174000", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Omnis cum odit."}, "name": "Fire risk for Lot2", "ordered-at": "2022-01-01", "service-id": "2022-01-01", "started-at": "2022-01-01", "status": "unknown"}, {"account-id": "2022-01-01", "finished-at": "2022-01-01", "id": "cayp:order:123e4567-e89b-12d3-a456-426614174000", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Omnis cum odit."}, "name": "Fire risk for Lot2", "ordered-at": "2022-01-01", "service-id": "2022-01-01", "started-at": "2022-01-01", "status": "unknown"}, {"account-id": "2022-01-01", "finished-at": "2022-01-01", "id": "cayp:order:123e4567-e89b-12d3-a456-426614174000", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Omnis cum odit."}, "name": "Fire risk for Lot2", "ordered-at": "2022-01-01", "service-id": "2022-01-01", "started-at": "2022-01-01", "status": "unknown"}, {"account-id": "2022-01-01", "finished-at": "2022-01-01", "id": "cayp:order:123e4567-e89b-12d3-a456-426614174000", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Omnis cum odit."}, "name": "Fire risk for Lot2", "ordered-at": "2022-01-01", "service-id": "2022-01-01", "started-at": "2022-01-01", "status": "unknown"}]}}}}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}}}}, "422": {"description": "invalid-parameter: Request contained semantically wrong paramter value", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidParameterValue"}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}}}}}, "security": [{"jwt_header_Authorization": ["consumer:read", "consumer:write"]}]}, "post": {"tags": ["order"], "summary": "create order", "description": "Create a new orders and return its status.", "operationId": "order#create", "requestBody": {"description": "New orders description", "required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/OrderRequestT"}, "example": {"account-id": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "name": "Fire risk for Lot2", "parameters": [{"name": "region", "value": "Upper Valley"}, {"name": "threshold", "value": "10"}], "policy-id": "urn:ivcap:policy:123e4567-e89b-12d3-a456-426614174000", "service-id": "urn:ivcap:service:123e4567-e89b-12d3-a456-426614174000", "tags": ["tag1", "tag2"]}}}}, "responses": {"200": {"description": "OK response.", "content": {"application/json": {"schema": {"description": "Response body may alternatively be #/components/schemas/ReadResponseBodyTiny", "$ref": "#/components/schemas/OrderStatusRT"}, "example": {"account": {"id": "http://beahan.net/laurie", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Omnis cum odit."}}, "finished-at": "2023-03-17T04:57:00Z", "id": "123e4567-e89b-12d3-a456-426614174000", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Omnis cum odit."}, "name": "Fire risk for Lot2", "ordered-at": "2023-03-17T04:57:00Z", "parameters": [{"name": "region", "value": "Upper Valley"}, {"name": "threshold", "value": "10"}], "products": [{"href": "https:/.../1/artifacts/0000-00001220", "mime-type": "image/geo+tiff", "name": "fire risk map", "size": 1234963}], "service": {"id": "http://beahan.net/laurie", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Omnis cum odit."}}, "started-at": "2023-03-17T04:57:00Z", "status": "executing", "tags": ["tag1", "tag2"]}}}}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}}}}, "404": {"description": "not-found:  not found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ResourceNotFoundT"}}}}, "422": {"description": "invalid-parameter: Request contained semantically wrong paramter value", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidParameterValue"}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}}}}, "503": {"description": "not-available: service currently not available"}}, "security": [{"jwt_header_Authorization": ["consumer:read", "consumer:write"]}]}}, "/1/orders/logs": {"post": {"tags": ["order"], "summary": "logs order", "description": "download order logs", "operationId": "order#logs", "requestBody": {"description": "Download orders request", "required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/DownloadLogRequestT"}, "example": {"container-name": "main", "from": 1257894000, "namespace-name": "ivcap-develop-runner", "order-id": "urn:ivcap:service:123e4567-e89b-12d3-a456-426614174000", "policy-id": "urn:ivcap:policy:123e4567-e89b-12d3-a456-426614174000", "to": 1257894000}}}}, "responses": {"200": {"description": "OK response."}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}}}}, "404": {"description": "not-found:  not found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ResourceNotFoundT"}}}}, "422": {"description": "invalid-parameter: Request contained semantically wrong paramter value", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidParameterValue"}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}}}}}, "security": [{"jwt_header_Authorization": ["consumer:read", "consumer:write"]}]}}, "/1/orders/{id}": {"get": {"tags": ["order"], "summary": "read order", "description": "Show orders by ID", "operationId": "order#read", "parameters": [{"name": "id", "in": "path", "description": "ID of orders to show", "required": true, "schema": {"type": "string", "description": "ID of orders to show", "example": "type:scope:name"}, "example": "type:scope:name"}], "responses": {"200": {"description": "OK response.", "content": {"application/json": {"schema": {"description": "Response body may alternatively be #/components/schemas/ReadResponseBodyTiny", "$ref": "#/components/schemas/OrderStatusRT"}, "example": {"account": {"id": "http://beahan.net/laurie", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Omnis cum odit."}}, "finished-at": "2023-03-17T04:57:00Z", "id": "123e4567-e89b-12d3-a456-426614174000", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Omnis cum odit."}, "name": "Fire risk for Lot2", "ordered-at": "2023-03-17T04:57:00Z", "parameters": [{"name": "region", "value": "Upper Valley"}, {"name": "threshold", "value": "10"}], "products": [{"href": "https:/.../1/artifacts/0000-00001220", "mime-type": "image/geo+tiff", "name": "fire risk map", "size": 1234963}], "service": {"id": "http://beahan.net/laurie", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Omnis cum odit."}}, "started-at": "2023-03-17T04:57:00Z", "status": "executing", "tags": ["tag1", "tag2"]}}}}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}}}}, "404": {"description": "not-found: orders not found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ResourceNotFoundT"}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}}}}}, "security": [{"jwt_header_Authorization": ["consumer:read", "consumer:write"]}]}}, "/1/services": {"get": {"tags": ["service"], "summary": "list service", "description": "list services", "operationId": "service#list", "parameters": [{"name": "limit", "in": "query", "description": "The $limit system query option requests the number of items in the queried\n\t\t\t\tcollection to be included in the result.", "allowEmptyValue": true, "schema": {"type": "integer", "description": "The $limit system query option requests the number of items in the queried\n\t\t\t\tcollection to be included in the result.", "default": 10, "example": 10, "minimum": 1, "maximum": 50}, "example": 10}, {"name": "page", "in": "query", "description": "The content of 'page' is returned in the 'links' part of a previous query and\n\t\t\t\twill when set, ALL other parameters, except for 'limit' are ignored.", "allowEmptyValue": true, "schema": {"type": "string", "description": "The content of 'page' is returned in the 'links' part of a previous query and\n\t\t\t\twill when set, ALL other parameters, except for 'limit' are ignored.", "example": "gdsgQwhdgd"}, "example": "gdsgQwhdgd"}, {"name": "filter", "in": "query", "description": "The 'filter' system query option allows clients to filter a collection of\n\t\t\t\tresources that are addressed by a request URL. The expression specified with 'filter'\n\t\t\t\tis evaluated for each resource in the collection, and only items where the expression\n\t\t\t\tevaluates to true are included in the response.", "allowEmptyValue": true, "schema": {"type": "string", "description": "The 'filter' system query option allows clients to filter a collection of\n\t\t\t\tresources that are addressed by a request URL. The expression specified with 'filter'\n\t\t\t\tis evaluated for each resource in the collection, and only items where the expression\n\t\t\t\tevaluates to true are included in the response.", "example": "name ~= 'Scott%'"}, "example": "name ~= 'Scott%'"}, {"name": "order-by", "in": "query", "description": "The 'orderby' query option allows clients to request resources in either\n\t\t\t\tascending order using asc or descending order using desc. If asc or desc not specified,\n\t\t\t\tthen the resources will be ordered in ascending order. The request below orders Trips on\n\t\t\t\tproperty EndsAt in descending order.", "allowEmptyValue": true, "schema": {"type": "string", "description": "The 'orderby' query option allows clients to request resources in either\n\t\t\t\tascending order using asc or descending order using desc. If asc or desc not specified,\n\t\t\t\tthen the resources will be ordered in ascending order. The request below orders Trips on\n\t\t\t\tproperty EndsAt in descending order.", "example": "orderby=EndsAt"}, "example": "orderby=EndsAt"}, {"name": "order-desc", "in": "query", "description": "When set order result in descending order. Ascending order is the default.", "allowEmptyValue": true, "schema": {"type": "boolean", "description": "When set order result in descending order. Ascending order is the default.", "default": false, "example": false}, "example": true}, {"name": "at-time", "in": "query", "description": "Return the state of the respective resources at that time [now]", "allowEmptyValue": true, "schema": {"type": "string", "description": "Return the state of the respective resources at that time [now]", "example": "1996-12-19T16:39:57-08:00", "format": "date-time"}, "example": "1996-12-19T16:39:57-08:00"}], "responses": {"200": {"description": "OK response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ServiceListRT"}, "example": {"at-time": "1996-12-19T16:39:57-08:00", "links": {"first": "https://api.com/foo/...", "next": "https://api.com/foo/...", "self": "https://api.com/foo/..."}, "services": [{"description": "Some lengthy description of fire risk", "id": "service:acme:oracle", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Omnis cum odit."}, "name": "Fire risk for region", "provider": {"id": "http://beahan.net/laurie", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Omnis cum odit."}}}, {"description": "Some lengthy description of fire risk", "id": "service:acme:oracle", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Omnis cum odit."}, "name": "Fire risk for region", "provider": {"id": "http://beahan.net/laurie", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Omnis cum odit."}}}, {"description": "Some lengthy description of fire risk", "id": "service:acme:oracle", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Omnis cum odit."}, "name": "Fire risk for region", "provider": {"id": "http://beahan.net/laurie", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Omnis cum odit."}}}]}}}}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}}}}, "422": {"description": "invalid-parameter: Request contained semantically wrong paramter value", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidParameterValue"}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}}}}}, "security": [{"jwt_header_Authorization": ["consumer:read", "consumer:write"]}]}, "post": {"tags": ["service"], "summary": "create_service service", "description": "Create a new services and return its status.", "operationId": "service#create_service", "requestBody": {"description": "New services description", "required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ServiceDescriptionT"}, "example": {"account-id": "urn:ivcap:account:0f0e3f57-80f7-4899-9b69-459af2efd789", "banner": "http://kovacekwitting.name/eusebio_kemmer", "description": "This service ...", "metadata": [{"name": "Magni voluptatem quae nemo numquam dolorem eum.", "value": "Repellat omnis perspiciatis quia nobis."}, {"name": "Magni voluptatem quae nemo numquam dolorem eum.", "value": "Repellat omnis perspiciatis quia nobis."}, {"name": "Magni voluptatem quae nemo numquam dolorem eum.", "value": "Repellat omnis perspiciatis quia nobis."}], "name": "Fire risk for Lot2", "parameters": [{"description": "The name of the region as according to ...", "label": "Region Name", "name": "region", "type": "string"}, {"label": "Rainfall/month threshold", "name": "threshold", "type": "float", "unit": "m"}], "policy-id": "Sit expedita enim et ullam quis.", "provider-id": "urn:ivcap:provider:0f0e3f57-80f7-4899-9b69-459af2efd789", "provider-ref": "service_foo_patch_1", "references": [{"title": "Ipsum autem possimus.", "uri": "http://hudsoncruickshank.org/crawford.kilback"}, {"title": "Ipsum autem possimus.", "uri": "http://hudsoncruickshank.org/crawford.kilback"}, {"title": "Ipsum autem possimus.", "uri": "http://hudsoncruickshank.org/crawford.kilback"}, {"title": "Ipsum autem possimus.", "uri": "http://hudsoncruickshank.org/crawford.kilback"}], "tags": ["tag1", "tag2"], "workflow": {"argo": "Possimus et id harum iste dolores esse.", "basic": {"command": ["/bin/sh", "-c", "echo $PATH"], "cpu": {"limit": "100m", "request": "10m"}, "ephemeral-storage": {"limit": "4Gi", "request": "2Gi"}, "image": "alpine", "memory": {"limit": "100Mi", "request": "10Mi"}}, "opts": "Quia minus.", "type": "basic"}}}}}, "responses": {"201": {"description": "Created response.", "content": {"application/json": {"schema": {"description": "Response body may alternatively be #/components/schemas/CreateServiceResponseBodyTiny", "$ref": "#/components/schemas/ServiceStatusRT"}, "example": {"account": {"id": "http://beahan.net/laurie", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Omnis cum odit."}}, "description": "This service ...", "id": "service:acme:oracle", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Omnis cum odit."}, "metadata": [{"name": "Recusandae quis.", "value": "Dignissimos qui expedita quia deserunt veritatis."}, {"name": "Recusandae quis.", "value": "Dignissimos qui expedita quia deserunt veritatis."}, {"name": "Recusandae quis.", "value": "Dignissimos qui expedita quia deserunt veritatis."}, {"name": "Recusandae quis.", "value": "Dignissimos qui expedita quia deserunt veritatis."}], "name": "Fire risk for Lot2", "parameters": [{"description": "The name of the region as according to ...", "label": "Region Name", "name": "region", "type": "string"}, {"label": "Rainfall/month threshold", "name": "threshold", "type": "float", "unit": "m"}], "provider": {"id": "http://beahan.net/laurie", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Omnis cum odit."}}, "provider-ref": "service_foo", "status": "active", "tags": ["tag1", "tag2"]}}}}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}}}}, "404": {"description": "not-found:  not found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ResourceNotFoundT"}}}}, "409": {"description": "already-created: Resource already exists", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ResourceNotFoundT"}}}}, "422": {"description": "invalid-parameter: Request contained semantically wrong paramter value", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidParameterValue"}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}}}}}, "security": [{"jwt_header_Authorization": ["consumer:read", "consumer:write"]}]}}, "/1/services/{id}": {"delete": {"tags": ["service"], "summary": "delete service", "description": "Delete an existing services.", "operationId": "service#delete", "parameters": [{"name": "id", "in": "path", "description": "ID of services to update", "required": true, "schema": {"type": "string", "description": "ID of services to update", "example": "Incidunt quae maxime distinctio."}, "example": "Quia ipsa."}], "responses": {"204": {"description": "No Content response."}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}}}}}, "security": [{"jwt_header_Authorization": ["consumer:read", "consumer:write"]}]}, "get": {"tags": ["service"], "summary": "read service", "description": "Show services by ID", "operationId": "service#read", "parameters": [{"name": "id", "in": "path", "description": "ID of services to show", "required": true, "schema": {"type": "string", "description": "ID of services to show", "example": "type:scope:name"}, "example": "type:scope:name"}], "responses": {"200": {"description": "OK response.", "content": {"application/json": {"schema": {"description": "Response body may alternatively be #/components/schemas/CreateServiceResponseBodyTiny", "$ref": "#/components/schemas/ServiceStatusRT"}, "example": {"account": {"id": "http://beahan.net/laurie", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Omnis cum odit."}}, "description": "This service ...", "id": "service:acme:oracle", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Omnis cum odit."}, "metadata": [{"name": "Recusandae quis.", "value": "Dignissimos qui expedita quia deserunt veritatis."}, {"name": "Recusandae quis.", "value": "Dignissimos qui expedita quia deserunt veritatis."}, {"name": "Recusandae quis.", "value": "Dignissimos qui expedita quia deserunt veritatis."}, {"name": "Recusandae quis.", "value": "Dignissimos qui expedita quia deserunt veritatis."}], "name": "Fire risk for Lot2", "parameters": [{"description": "The name of the region as according to ...", "label": "Region Name", "name": "region", "type": "string"}, {"label": "Rainfall/month threshold", "name": "threshold", "type": "float", "unit": "m"}], "provider": {"id": "http://beahan.net/laurie", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Omnis cum odit."}}, "provider-ref": "service_foo", "status": "active", "tags": ["tag1", "tag2"]}}}}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}}}}, "404": {"description": "not-found: services not found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ResourceNotFoundT"}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}}}}}, "security": [{"jwt_header_Authorization": ["consumer:read", "consumer:write"]}]}, "put": {"tags": ["service"], "summary": "update service", "description": "Update an existing services and return its status.", "operationId": "service#update", "parameters": [{"name": "force-create", "in": "query", "description": "Create if not already exist", "allowEmptyValue": true, "schema": {"type": "boolean", "description": "Create if not already exist", "example": false}, "example": false}, {"name": "id", "in": "path", "description": "ID of services to update", "required": true, "schema": {"type": "string", "description": "ID of services to update", "example": "Sunt placeat vel numquam ratione."}, "example": "Non dolorem sed voluptates at et velit."}], "requestBody": {"description": "Updated services description", "required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ServiceDescriptionT"}, "example": {"account-id": "urn:ivcap:account:0f0e3f57-80f7-4899-9b69-459af2efd789", "banner": "http://aufderhar.com/florida_streich", "description": "This service ...", "metadata": [{"name": "Magni voluptatem quae nemo numquam dolorem eum.", "value": "Repellat omnis perspiciatis quia nobis."}, {"name": "Magni voluptatem quae nemo numquam dolorem eum.", "value": "Repellat omnis perspiciatis quia nobis."}, {"name": "Magni voluptatem quae nemo numquam dolorem eum.", "value": "Repellat omnis perspiciatis quia nobis."}], "name": "Fire risk for Lot2", "parameters": [{"description": "The name of the region as according to ...", "label": "Region Name", "name": "region", "type": "string"}, {"label": "Rainfall/month threshold", "name": "threshold", "type": "float", "unit": "m"}], "policy-id": "Corrupti placeat iusto illo voluptate.", "provider-id": "urn:ivcap:provider:0f0e3f57-80f7-4899-9b69-459af2efd789", "provider-ref": "service_foo_patch_1", "references": [{"title": "Ipsum autem possimus.", "uri": "http://hudsoncruickshank.org/crawford.kilback"}, {"title": "Ipsum autem possimus.", "uri": "http://hudsoncruickshank.org/crawford.kilback"}, {"title": "Ipsum autem possimus.", "uri": "http://hudsoncruickshank.org/crawford.kilback"}, {"title": "Ipsum autem possimus.", "uri": "http://hudsoncruickshank.org/crawford.kilback"}], "tags": ["tag1", "tag2"], "workflow": {"argo": "Possimus et id harum iste dolores esse.", "basic": {"command": ["/bin/sh", "-c", "echo $PATH"], "cpu": {"limit": "100m", "request": "10m"}, "ephemeral-storage": {"limit": "4Gi", "request": "2Gi"}, "image": "alpine", "memory": {"limit": "100Mi", "request": "10Mi"}}, "opts": "Quia minus.", "type": "basic"}}}}}, "responses": {"200": {"description": "OK response.", "content": {"application/json": {"schema": {"description": "Response body may alternatively be #/components/schemas/CreateServiceResponseBodyTiny", "$ref": "#/components/schemas/ServiceStatusRT"}, "example": {"account": {"id": "http://beahan.net/laurie", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Omnis cum odit."}}, "description": "This service ...", "id": "service:acme:oracle", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Omnis cum odit."}, "metadata": [{"name": "Recusandae quis.", "value": "Dignissimos qui expedita quia deserunt veritatis."}, {"name": "Recusandae quis.", "value": "Dignissimos qui expedita quia deserunt veritatis."}, {"name": "Recusandae quis.", "value": "Dignissimos qui expedita quia deserunt veritatis."}], "name": "Fire risk for Lot2", "parameters": [{"description": "The name of the region as according to ...", "label": "Region Name", "name": "region", "type": "string"}, {"label": "Rainfall/month threshold", "name": "threshold", "type": "float", "unit": "m"}], "provider": {"id": "http://beahan.net/laurie", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Omnis cum odit."}}, "provider-ref": "service_foo", "status": "error", "tags": ["tag1", "tag2"]}}}}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}}}}, "404": {"description": "not-found:  not found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ResourceNotFoundT"}}}}, "422": {"description": "invalid-parameter: Request contained semantically wrong paramter value", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidParameterValue"}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}}}}}, "security": [{"jwt_header_Authorization": ["consumer:read", "consumer:write"]}]}}}, "components": {"schemas": {"AddMetaRT": {"type": "object", "properties": {"record-id": {"type": "string", "description": "Reference to record created", "example": "urn:ivcap:record.123e4567-e89b-12d3-a456-426614174000", "format": "uri"}}, "example": {"record-id": "urn:ivcap:record.123e4567-e89b-12d3-a456-426614174000"}, "required": ["record-id"]}, "ArtifactListItem": {"type": "object", "properties": {"id": {"type": "string", "description": "Artifact ID", "example": "cayp:artifact:0000-000"}, "links": {"$ref": "#/components/schemas/SelfT"}, "mime-type": {"type": "string", "description": "Mime (content) type of artifact", "example": "image/jpeg"}, "name": {"type": "string", "description": "Optional name", "example": "Fire risk for Lot2"}, "size": {"type": "integer", "description": "Size of aritfact in bytes", "example": 19000, "format": "int64"}, "status": {"type": "string", "description": "Artifact status", "example": "ready", "enum": ["pending", "partial", "ready", "error", "unknown"]}}, "example": {"id": "cayp:artifact:0000-000", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Omnis cum odit."}, "mime-type": "image/jpeg", "name": "Fire risk for Lot2", "size": 19000, "status": "ready"}, "required": ["links"]}, "ArtifactListRT": {"type": "object", "properties": {"artifacts": {"type": "array", "items": {"$ref": "#/components/schemas/ArtifactListItem"}, "description": "Artifacts", "example": [{"id": "cayp:artifact:0000-000", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Omnis cum odit."}, "mime-type": "image/jpeg", "name": "Fire risk for Lot2", "size": 19000, "status": "ready"}, {"id": "cayp:artifact:0000-000", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Omnis cum odit."}, "mime-type": "image/jpeg", "name": "Fire risk for Lot2", "size": 19000, "status": "ready"}]}, "at-time": {"type": "string", "description": "Time at which this list was valid", "example": "1996-12-19T16:39:57-08:00", "format": "date-time"}, "links": {"$ref": "#/components/schemas/NavT"}}, "example": {"artifacts": [{"id": "cayp:artifact:0000-000", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Omnis cum odit."}, "mime-type": "image/jpeg", "name": "Fire risk for Lot2", "size": 19000, "status": "ready"}, {"id": "cayp:artifact:0000-000", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Omnis cum odit."}, "mime-type": "image/jpeg", "name": "Fire risk for Lot2", "size": 19000, "status": "ready"}, {"id": "cayp:artifact:0000-000", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Omnis cum odit."}, "mime-type": "image/jpeg", "name": "Fire risk for Lot2", "size": 19000, "status": "ready"}], "at-time": "1996-12-19T16:39:57-08:00", "links": {"first": "https://api.com/foo/...", "next": "https://api.com/foo/...", "self": "https://api.com/foo/..."}}, "required": ["artifacts", "links"]}, "ArtifactStatusRT": {"type": "object", "properties": {"account": {"$ref": "#/components/schemas/RefT"}, "cache-of": {"type": "string", "description": "URL of object this artifact is caching", "example": "Qui amet."}, "created-at": {"type": "string", "description": "DateTime artifact was created", "example": "2022-01-01"}, "data": {"$ref": "#/components/schemas/SelfT"}, "etag": {"type": "string", "description": "ETAG of artifact", "example": "Debitis perferendis."}, "id": {"type": "string", "description": "Artifact ID", "example": "type:scope:name"}, "last-modified-at": {"type": "string", "description": "DateTime artifact was last modified", "example": "2022-01-01"}, "links": {"$ref": "#/components/schemas/SelfT"}, "location": {"type": "string", "description": "link back to record", "example": "Fuga ipsam quo."}, "mime-type": {"type": "string", "description": "Mime-type of data", "example": "Et cupiditate."}, "name": {"type": "string", "description": "Optional name", "example": "Fire risk per LGA"}, "policy": {"$ref": "#/components/schemas/RefT"}, "size": {"type": "integer", "description": "Size of data", "example": 190174337379428697, "format": "int64"}, "status": {"type": "string", "description": "Artifact status", "example": "unknown", "enum": ["pending", "partial", "ready", "error", "unknown"]}, "tus-offset": {"type": "integer", "description": "TUS offset for partially uploaded content", "example": 9169473943212574789, "format": "int64"}, "tus-resumable": {"type": "string", "description": "indicate version of TUS supported", "example": "Et beatae laboriosam et accusamus maxime."}}, "example": {"account": {"id": "http://beahan.net/laurie", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Omnis cum odit."}}, "cache-of": "Similique quisquam officia repudiandae quis numquam cumque.", "created-at": "2022-01-01", "data": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Omnis cum odit."}, "etag": "Molestiae voluptates dolor atque.", "id": "type:scope:name", "last-modified-at": "2022-01-01", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Omnis cum odit."}, "location": "Architecto facere veniam dolorem velit quia.", "mime-type": "Ut nihil quia qui fugit pariatur.", "name": "Fire risk per LGA", "policy": {"id": "http://beahan.net/laurie", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Omnis cum odit."}}, "size": 5597111839856165761, "status": "error", "tus-offset": 7124232827739847476, "tus-resumable": "Sapiente possimus commodi qui sint aut."}, "required": ["id", "status", "links"]}, "BasicWorkflowOptsT": {"type": "object", "properties": {"command": {"type": "array", "items": {"type": "string", "example": "Sed voluptas sapiente nihil."}, "description": "Command to start the container - needed for some container runtimes", "example": ["/bin/sh", "-c", "echo $PATH"]}, "cpu": {"$ref": "#/components/schemas/ResourceMemoryT"}, "ephemeral-storage": {"$ref": "#/components/schemas/ResourceMemoryT"}, "image": {"type": "string", "description": "container image name", "example": "alpine"}, "memory": {"$ref": "#/components/schemas/ResourceMemoryT"}}, "example": {"command": ["/bin/sh", "-c", "echo $PATH"], "cpu": {"limit": "100m", "request": "10m"}, "ephemeral-storage": {"limit": "4Gi", "request": "2Gi"}, "image": "alpine", "memory": {"limit": "100Mi", "request": "10Mi"}}, "required": ["image", "command"]}, "CreateServiceResponseBodyTiny": {"type": "object", "properties": {"links": {"$ref": "#/components/schemas/SelfT"}, "name": {"type": "string", "description": "Optional provider provided name", "example": "Fire risk for Lot2"}}, "description": "create_service_response_body result type (tiny view)", "example": {"links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Omnis cum odit."}, "name": "Fire risk for Lot2"}, "required": ["links"]}, "DescribedByT": {"type": "object", "properties": {"href": {"type": "string", "example": "https://api.com/swagger/...", "format": "uri"}, "type": {"type": "string", "example": "application/openapi3+json"}}, "example": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}}, "DownloadLogRequestT": {"type": "object", "properties": {"container-name": {"type": "string", "description": "Reference to container name", "example": "main"}, "from": {"type": "integer", "description": "From unix time, seconds since 1970-01-01", "example": 1257894000, "format": "int64"}, "namespace-name": {"type": "string", "description": "Reference to namespace name", "example": "ivcap-develop-runner"}, "order-id": {"type": "string", "description": "Reference to order requested", "example": "urn:ivcap:service:123e4567-e89b-12d3-a456-426614174000", "format": "uri"}, "policy-id": {"type": "string", "description": "Policy to control access to record an all generated artifacts", "example": "urn:ivcap:policy:123e4567-e89b-12d3-a456-426614174000", "format": "uri"}, "to": {"type": "integer", "description": "To unix time, seconds since 1970-01-01", "example": 1257894000, "format": "int64"}}, "example": {"container-name": "main", "from": 1257894000, "namespace-name": "ivcap-develop-runner", "order-id": "urn:ivcap:service:123e4567-e89b-12d3-a456-426614174000", "policy-id": "urn:ivcap:policy:123e4567-e89b-12d3-a456-426614174000", "to": 1257894000}, "required": ["order-id"]}, "InvalidParameterValue": {"type": "object", "properties": {"message": {"type": "string", "description": "message describing expected type or pattern.", "example": "Ipsum numquam adipisci optio."}, "name": {"type": "string", "description": "name of parameter.", "example": "Officia et iure consequuntur."}, "value": {"type": "string", "description": "provided parameter value.", "example": "Beatae commodi optio et magni."}}, "description": "Invalide parameter value", "example": {"message": "Reprehenderit ratione accusamus maxime iusto iste.", "name": "Quisquam consequatur.", "value": "Eius sed."}, "required": ["name", "message"]}, "InvalidScopesT": {"type": "object", "properties": {"id": {"type": "string", "description": "ID of involved resource", "example": "123e4567-e89b-12d3-a456-426614174000", "format": "uuid"}, "message": {"type": "string", "description": "Message of error", "default": "Not authorized to perform this action", "example": "Quia eos quae hic dignissimos vero."}}, "description": "Token scopes are invalid", "example": {"id": "123e4567-e89b-12d3-a456-426614174000", "message": "Adipisci in similique qui cumque in."}, "required": ["message"]}, "ListMetaRT": {"type": "object", "properties": {"aspect-path": {"type": "string", "description": "Optional json path to further filter on returned list", "example": "Nulla debitis reiciendis libero qui unde perferendis."}, "at-time": {"type": "string", "description": "Time at which this list was valid", "example": "1996-12-19T16:39:57-08:00", "format": "date-time"}, "entity-id": {"type": "string", "description": "Entity for which to request metadata", "example": "urn:blue:image.collA.12", "format": "uri"}, "links": {"$ref": "#/components/schemas/NavT"}, "records": {"type": "array", "items": {"$ref": "#/components/schemas/MetadataListItemRT"}, "description": "List of metadata records", "example": [{"aspect": "{...}", "aspectContext": "{...}", "entity": "urn:blue:transect.1", "record-id": "urn:ivcap:record.123e4567-e89b-12d3-a456-426614174000", "schema": "urn:blue:schema.image"}, {"aspect": "{...}", "aspectContext": "{...}", "entity": "urn:blue:transect.1", "record-id": "urn:ivcap:record.123e4567-e89b-12d3-a456-426614174000", "schema": "urn:blue:schema.image"}, {"aspect": "{...}", "aspectContext": "{...}", "entity": "urn:blue:transect.1", "record-id": "urn:ivcap:record.123e4567-e89b-12d3-a456-426614174000", "schema": "urn:blue:schema.image"}]}, "schema": {"type": "string", "description": "Optional schema to filter on", "example": "urn:blue:image,urn:blue:location", "format": "uri"}}, "example": {"aspect-path": "Nostrum et officia eius fuga beatae blanditiis.", "at-time": "1996-12-19T16:39:57-08:00", "entity-id": "urn:blue:image.collA.12", "links": {"first": "https://api.com/foo/...", "next": "https://api.com/foo/...", "self": "https://api.com/foo/..."}, "records": [{"aspect": "{...}", "aspectContext": "{...}", "entity": "urn:blue:transect.1", "record-id": "urn:ivcap:record.123e4567-e89b-12d3-a456-426614174000", "schema": "urn:blue:schema.image"}, {"aspect": "{...}", "aspectContext": "{...}", "entity": "urn:blue:transect.1", "record-id": "urn:ivcap:record.123e4567-e89b-12d3-a456-426614174000", "schema": "urn:blue:schema.image"}, {"aspect": "{...}", "aspectContext": "{...}", "entity": "urn:blue:transect.1", "record-id": "urn:ivcap:record.123e4567-e89b-12d3-a456-426614174000", "schema": "urn:blue:schema.image"}, {"aspect": "{...}", "aspectContext": "{...}", "entity": "urn:blue:transect.1", "record-id": "urn:ivcap:record.123e4567-e89b-12d3-a456-426614174000", "schema": "urn:blue:schema.image"}], "schema": "urn:blue:image,urn:blue:location"}, "required": ["records", "links"]}, "MetadataListItemRT": {"type": "object", "properties": {"aspect": {"type": "object", "description": "Attached metadata aspect", "example": "{...}"}, "aspectContext": {"type": "string", "description": "If aspectPath was defined, this is what matched the query", "example": "{...}"}, "entity": {"type": "string", "description": "Entity ID", "example": "urn:blue:transect.1", "format": "uri"}, "record-id": {"type": "string", "description": "Record ID", "example": "urn:ivcap:record.123e4567-e89b-12d3-a456-426614174000", "format": "uri"}, "schema": {"type": "string", "description": "Schema ID", "example": "urn:blue:schema.image", "format": "uri"}}, "example": {"aspect": "{...}", "aspectContext": "{...}", "entity": "urn:blue:transect.1", "record-id": "urn:ivcap:record.123e4567-e89b-12d3-a456-426614174000", "schema": "urn:blue:schema.image"}}, "MetadataRecordRT": {"type": "object", "properties": {"aspect": {"type": "string", "description": "Attached metadata aspect", "example": "{...}", "format": "binary"}, "asserter": {"type": "string", "description": "Entity asserting this metadata record at 'valid-from'", "example": "..."}, "entity": {"type": "string", "description": "Entity ID", "example": "urn:blue:transect.1", "format": "uri"}, "record-id": {"type": "string", "description": "Record ID", "example": "urn:ivcap:record.123e4567-e89b-12d3-a456-426614174000", "format": "uri"}, "revoker": {"type": "string", "description": "Entity revoking this record at 'valid-to'", "example": "...", "format": "date-time"}, "schema": {"type": "string", "description": "Schema ID", "example": "urn:blue:schema.image", "format": "uri"}, "valid-from": {"type": "string", "description": "Time this record was asserted", "example": "1996-12-19T16:39:57-08:00", "format": "date-time"}, "valid-to": {"type": "string", "description": "Time this record was revoked", "example": "1996-12-19T16:39:57-08:00", "format": "date-time"}}, "example": {"aspect": "{...}", "asserter": "...", "entity": "urn:blue:transect.1", "record-id": "urn:ivcap:record.123e4567-e89b-12d3-a456-426614174000", "revoker": "...", "schema": "urn:blue:schema.image", "valid-from": "1996-12-19T16:39:57-08:00", "valid-to": "1996-12-19T16:39:57-08:00"}}, "NavT": {"type": "object", "properties": {"first": {"type": "string", "example": "https://api.com/foo/...", "format": "uri"}, "next": {"type": "string", "example": "https://api.com/foo/...", "format": "uri"}, "self": {"type": "string", "example": "https://api.com/foo/...", "format": "uri"}}, "example": {"first": "https://api.com/foo/...", "next": "https://api.com/foo/...", "self": "https://api.com/foo/..."}}, "NotImplementedT": {"type": "object", "properties": {"message": {"type": "string", "description": "Information message", "default": "Method not implemented", "example": "Porro consequatur qui voluptatem et."}}, "description": "Method is not yet implemented", "example": {"message": "Aliquid quia."}, "required": ["message"]}, "OrderListItem": {"type": "object", "properties": {"account-id": {"type": "string", "description": "ID of ordered service", "example": "2022-01-01"}, "finished-at": {"type": "string", "description": "DateTime order was finished", "example": "2022-01-01"}, "id": {"type": "string", "description": "Order ID", "example": "cayp:order:123e4567-e89b-12d3-a456-426614174000"}, "links": {"$ref": "#/components/schemas/SelfT"}, "name": {"type": "string", "description": "Optional customer provided name", "example": "Fire risk for Lot2"}, "ordered-at": {"type": "string", "description": "DateTime order was placed", "example": "2022-01-01"}, "service-id": {"type": "string", "description": "ID of ordered service", "example": "2022-01-01"}, "started-at": {"type": "string", "description": "DateTime processing of order started", "example": "2022-01-01"}, "status": {"type": "string", "description": "Order status", "example": "pending", "enum": ["unknown", "pending", "scheduled", "executing", "succeeded", "failed", "error"]}}, "example": {"account-id": "2022-01-01", "finished-at": "2022-01-01", "id": "cayp:order:123e4567-e89b-12d3-a456-426614174000", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Omnis cum odit."}, "name": "Fire risk for Lot2", "ordered-at": "2022-01-01", "service-id": "2022-01-01", "started-at": "2022-01-01", "status": "failed"}, "required": ["links"]}, "OrderListRT": {"type": "object", "properties": {"at-time": {"type": "string", "description": "Time at which this list was valid", "example": "1996-12-19T16:39:57-08:00", "format": "date-time"}, "links": {"$ref": "#/components/schemas/NavT"}, "orders": {"type": "array", "items": {"$ref": "#/components/schemas/OrderListItem"}, "description": "Orders", "example": [{"account-id": "2022-01-01", "finished-at": "2022-01-01", "id": "cayp:order:123e4567-e89b-12d3-a456-426614174000", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Omnis cum odit."}, "name": "Fire risk for Lot2", "ordered-at": "2022-01-01", "service-id": "2022-01-01", "started-at": "2022-01-01", "status": "unknown"}, {"account-id": "2022-01-01", "finished-at": "2022-01-01", "id": "cayp:order:123e4567-e89b-12d3-a456-426614174000", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Omnis cum odit."}, "name": "Fire risk for Lot2", "ordered-at": "2022-01-01", "service-id": "2022-01-01", "started-at": "2022-01-01", "status": "unknown"}, {"account-id": "2022-01-01", "finished-at": "2022-01-01", "id": "cayp:order:123e4567-e89b-12d3-a456-426614174000", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Omnis cum odit."}, "name": "Fire risk for Lot2", "ordered-at": "2022-01-01", "service-id": "2022-01-01", "started-at": "2022-01-01", "status": "unknown"}, {"account-id": "2022-01-01", "finished-at": "2022-01-01", "id": "cayp:order:123e4567-e89b-12d3-a456-426614174000", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Omnis cum odit."}, "name": "Fire risk for Lot2", "ordered-at": "2022-01-01", "service-id": "2022-01-01", "started-at": "2022-01-01", "status": "unknown"}]}}, "example": {"at-time": "1996-12-19T16:39:57-08:00", "links": {"first": "https://api.com/foo/...", "next": "https://api.com/foo/...", "self": "https://api.com/foo/..."}, "orders": [{"account-id": "2022-01-01", "finished-at": "2022-01-01", "id": "cayp:order:123e4567-e89b-12d3-a456-426614174000", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Omnis cum odit."}, "name": "Fire risk for Lot2", "ordered-at": "2022-01-01", "service-id": "2022-01-01", "started-at": "2022-01-01", "status": "unknown"}, {"account-id": "2022-01-01", "finished-at": "2022-01-01", "id": "cayp:order:123e4567-e89b-12d3-a456-426614174000", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Omnis cum odit."}, "name": "Fire risk for Lot2", "ordered-at": "2022-01-01", "service-id": "2022-01-01", "started-at": "2022-01-01", "status": "unknown"}]}, "required": ["orders", "at-time", "links"]}, "OrderRequestT": {"type": "object", "properties": {"account-id": {"type": "string", "description": "Reference to billable account", "example": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "format": "uri"}, "name": {"type": "string", "description": "Optional customer provided name", "example": "Fire risk for Lot2"}, "parameters": {"type": "array", "items": {"$ref": "#/components/schemas/ParameterT"}, "description": "Service parameters", "example": [{"name": "region", "value": "Upper Valley"}, {"name": "threshold", "value": "10"}]}, "policy-id": {"type": "string", "description": "Policy to control access to record an all generated artifacts", "example": "urn:ivcap:policy:123e4567-e89b-12d3-a456-426614174000", "format": "uri"}, "service-id": {"type": "string", "description": "Reference to service requested", "example": "urn:ivcap:service:123e4567-e89b-12d3-a456-426614174000", "format": "uri"}, "tags": {"type": "array", "items": {"type": "string", "example": "Voluptas sequi."}, "description": "Optional customer provided tags", "example": ["tag1", "tag2"]}}, "example": {"account-id": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "name": "Fire risk for Lot2", "parameters": [{"name": "region", "value": "Upper Valley"}, {"name": "threshold", "value": "10"}], "policy-id": "urn:ivcap:policy:123e4567-e89b-12d3-a456-426614174000", "service-id": "urn:ivcap:service:123e4567-e89b-12d3-a456-426614174000", "tags": ["tag1", "tag2"]}, "required": ["service-id", "parameters"]}, "OrderStatusRT": {"type": "object", "properties": {"account": {"$ref": "#/components/schemas/RefT"}, "finished-at": {"type": "string", "description": "DateTime order processing finished", "example": "2023-03-17T04:57:00Z"}, "id": {"type": "string", "description": "Order ID", "example": "123e4567-e89b-12d3-a456-426614174000", "format": "uuid"}, "links": {"$ref": "#/components/schemas/SelfT"}, "name": {"type": "string", "description": "Optional customer provided name", "example": "Fire risk for Lot2"}, "ordered-at": {"type": "string", "description": "DateTime order was placed", "example": "2023-03-17T04:57:00Z"}, "parameters": {"type": "array", "items": {"$ref": "#/components/schemas/ParameterT"}, "description": "Service parameters", "example": [{"name": "region", "value": "Upper Valley"}, {"name": "threshold", "value": "10"}]}, "products": {"type": "array", "items": {"$ref": "#/components/schemas/ProductT"}, "description": "Products delivered for this order", "example": [{"href": "https:/.../1/artifacts/0000-00001220", "mime-type": "image/geo+tiff", "name": "fire risk map", "size": 1234963}]}, "service": {"$ref": "#/components/schemas/RefT"}, "started-at": {"type": "string", "description": "DateTime order processing started", "example": "2023-03-17T04:57:00Z"}, "status": {"type": "string", "description": "Order status", "example": "error", "enum": ["unknown", "pending", "scheduled", "executing", "succeeded", "failed", "error"]}, "tags": {"type": "array", "items": {"type": "string", "example": "Harum hic qui voluptas vel repellendus."}, "description": "Optional customer provided tags", "example": ["tag1", "tag2"]}}, "example": {"account": {"id": "http://beahan.net/laurie", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Omnis cum odit."}}, "finished-at": "2023-03-17T04:57:00Z", "id": "123e4567-e89b-12d3-a456-426614174000", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Omnis cum odit."}, "name": "Fire risk for Lot2", "ordered-at": "2023-03-17T04:57:00Z", "parameters": [{"name": "region", "value": "Upper Valley"}, {"name": "threshold", "value": "10"}], "products": [{"href": "https:/.../1/artifacts/0000-00001220", "mime-type": "image/geo+tiff", "name": "fire risk map", "size": 1234963}], "service": {"id": "http://beahan.net/laurie", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Omnis cum odit."}}, "started-at": "2023-03-17T04:57:00Z", "status": "failed", "tags": ["tag1", "tag2"]}, "required": ["id", "parameters"]}, "ParameterDefT": {"type": "object", "properties": {"constant": {"type": "boolean", "example": true}, "default": {"type": "string", "example": "Corrupti repellat accusamus doloremque."}, "description": {"type": "string", "example": "Aut ipsum qui necessitatibus quidem sint."}, "label": {"type": "string", "example": "Voluptas sit perferendis."}, "name": {"type": "string", "example": "Quidem nulla corporis unde aperiam et nihil."}, "optional": {"type": "boolean", "example": true}, "options": {"type": "array", "items": {"$ref": "#/components/schemas/ParameterOptT"}, "example": [{"description": "Dolores iure odio.", "value": "Vel reprehenderit doloribus itaque."}, {"description": "Dolores iure odio.", "value": "Vel reprehenderit doloribus itaque."}, {"description": "Dolores iure odio.", "value": "Vel reprehenderit doloribus itaque."}, {"description": "Dolores iure odio.", "value": "Vel reprehenderit doloribus itaque."}]}, "type": {"type": "string", "example": "Deserunt placeat excepturi impedit cupiditate et nihil."}, "unit": {"type": "string", "example": "Porro blanditiis nihil eligendi perferendis cumque."}}, "example": {"constant": true, "default": "Ex dolores culpa vero asperiores aliquid.", "description": "Optio minima et quisquam ipsum rem dolore.", "label": "Repudiandae quidem eos.", "name": "Vel beatae tempora quis voluptate quis.", "optional": false, "options": [{"description": "Dolores iure odio.", "value": "Vel reprehenderit doloribus itaque."}, {"description": "Dolores iure odio.", "value": "Vel reprehenderit doloribus itaque."}, {"description": "Dolores iure odio.", "value": "Vel reprehenderit doloribus itaque."}, {"description": "Dolores iure odio.", "value": "Vel reprehenderit doloribus itaque."}], "type": "Quibusdam nemo maxime qui expedita quasi natus.", "unit": "Qui est nostrum."}}, "ParameterOptT": {"type": "object", "properties": {"description": {"type": "string", "example": "Magni et dolore qui dolores est dolorum."}, "value": {"type": "string", "example": "Dolor ullam dolorem."}}, "example": {"description": "Ipsa consequatur distinctio necessitatibus.", "value": "Sit totam voluptas."}}, "ParameterT": {"type": "object", "properties": {"name": {"type": "string", "example": "Labore quasi assumenda aut quia commodi."}, "value": {"type": "string", "example": "Occaecati quia ut nostrum."}}, "example": {"name": "Suscipit officiis.", "value": "Non occaecati sit."}}, "ProductT": {"type": "object", "properties": {"id": {"type": "string", "example": "Nihil dolor."}, "links": {"$ref": "#/components/schemas/SelfWithDataT"}, "mime-type": {"type": "string", "example": "Voluptas cupiditate."}, "name": {"type": "string", "example": "Sunt aliquam iure."}, "size": {"type": "integer", "example": 703048794112930462, "format": "int64"}, "status": {"type": "string", "example": "Rerum incidunt."}}, "example": {"id": "Fugit alias velit.", "links": {"data": "Vitae et commodi dolores ea minus.", "describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Nemo quidem est ipsa perspiciatis esse."}, "mime-type": "Magni iste.", "name": "Aut at.", "size": 1367534109702050987, "status": "Consequatur minima ut."}}, "ReadResponseBodyTiny": {"type": "object", "properties": {"links": {"$ref": "#/components/schemas/SelfT"}, "name": {"type": "string", "description": "Optional customer provided name", "example": "Fire risk for Lot2"}, "status": {"type": "string", "description": "Order status", "example": "failed", "enum": ["unknown", "pending", "scheduled", "executing", "succeeded", "failed", "error"]}}, "description": "ReadResponseBody result type (tiny view)", "example": {"links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Omnis cum odit."}, "name": "Fire risk for Lot2", "status": "pending"}}, "RefT": {"type": "object", "properties": {"id": {"type": "string", "example": "http://wilkinson.com/marcellus_kilback", "format": "uri"}, "links": {"$ref": "#/components/schemas/SelfT"}}, "example": {"id": "http://bergstromtromp.info/greg", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Omnis cum odit."}}}, "ReferenceT": {"type": "object", "properties": {"title": {"type": "string", "description": "Title of reference document", "example": "Incidunt maiores et dolores quo soluta."}, "uri": {"type": "string", "description": "Link to document", "example": "http://crooks.org/roscoe", "format": "uri"}}, "example": {"title": "Quisquam sunt enim officiis.", "uri": "http://wilderman.com/ettie.metz"}}, "ResourceMemoryT": {"type": "object", "properties": {"limit": {"type": "string", "description": "minimal requirements [system limit]", "example": "Tempore iusto."}, "request": {"type": "string", "description": "minimal requirements [0]", "example": "Eveniet tenetur quasi cupiditate accusamus dolore."}}, "description": "See https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#resource-units-in-kubernetes for units", "example": {"limit": "Dignissimos atque reiciendis perferendis.", "request": "Ratione dolore dolor ut nisi optio."}}, "ResourceNotFoundT": {"type": "object", "properties": {"id": {"type": "string", "description": "ID of missing resource", "example": "cayp:type:123e4567-e89b-12d3-a456-426614174000", "format": "uri"}, "message": {"type": "string", "description": "Message of error", "example": "Resource 123...00 not found"}}, "description": "artifacts not found", "example": {"id": "cayp:type:123e4567-e89b-12d3-a456-426614174000", "message": "Resource 123...00 not found"}, "required": ["message", "id"]}, "SelfT": {"type": "object", "properties": {"describedBy": {"$ref": "#/components/schemas/DescribedByT"}, "self": {"type": "string", "example": "Quas sed magni aliquam in voluptatem doloremque."}}, "example": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Commodi dolorem provident ab et."}}, "SelfWithDataT": {"type": "object", "properties": {"data": {"type": "string", "example": "Accusamus reiciendis incidunt."}, "describedBy": {"$ref": "#/components/schemas/DescribedByT"}, "self": {"type": "string", "example": "Consequatur quo ex mollitia eum."}}, "example": {"data": "Reiciendis similique repellendus et.", "describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Perspiciatis sit pariatur sunt."}}, "ServiceDescriptionT": {"type": "object", "properties": {"account-id": {"type": "string", "description": "Reference to account revenues for this service should be credited to", "example": "urn:ivcap:account:0f0e3f57-80f7-4899-9b69-459af2efd789", "format": "uri"}, "banner": {"type": "string", "description": "Link to banner image oprionally used for this service", "example": "http://cole.biz/walton_runolfsson", "format": "uri"}, "description": {"type": "string", "description": "More detailed description of the service", "example": "This service ..."}, "metadata": {"type": "array", "items": {"$ref": "#/components/schemas/ParameterT"}, "description": "Optional provider provided meta tags", "example": [{"name": "Magni voluptatem quae nemo numquam dolorem eum.", "value": "Repellat omnis perspiciatis quia nobis."}, {"name": "Magni voluptatem quae nemo numquam dolorem eum.", "value": "Repellat omnis perspiciatis quia nobis."}, {"name": "Magni voluptatem quae nemo numquam dolorem eum.", "value": "Repellat omnis perspiciatis quia nobis."}, {"name": "Magni voluptatem quae nemo numquam dolorem eum.", "value": "Repellat omnis perspiciatis quia nobis."}]}, "name": {"type": "string", "description": "Optional provider provided name", "example": "Fire risk for Lot2"}, "parameters": {"type": "array", "items": {"$ref": "#/components/schemas/ParameterDefT"}, "description": "Service parameter definitions", "example": [{"description": "The name of the region as according to ...", "label": "Region Name", "name": "region", "type": "string"}, {"label": "Rainfall/month threshold", "name": "threshold", "type": "float", "unit": "m"}]}, "policy-id": {"type": "string", "description": "Reference to policy controlling access", "example": "Ipsa eum."}, "provider-id": {"type": "string", "description": "Reference to service provider", "example": "urn:ivcap:provider:0f0e3f57-80f7-4899-9b69-459af2efd789", "format": "uri"}, "provider-ref": {"type": "string", "description": "Provider provided reference. Should to be a single string with punctuations allowed. Might be changed, so please check result", "example": "service_foo_patch_1"}, "references": {"type": "array", "items": {"$ref": "#/components/schemas/ReferenceT"}, "description": "Reference to account revenues for this service should be credited to", "example": [{"title": "Ipsum autem possimus.", "uri": "http://hudsoncruickshank.org/crawford.kilback"}, {"title": "Ipsum autem possimus.", "uri": "http://hudsoncruickshank.org/crawford.kilback"}, {"title": "Ipsum autem possimus.", "uri": "http://hudsoncruickshank.org/crawford.kilback"}]}, "tags": {"type": "array", "items": {"type": "string", "example": "Corporis quod ipsam cumque."}, "description": "Optional provider provided tags", "example": ["tag1", "tag2"]}, "workflow": {"$ref": "#/components/schemas/WorkflowT"}}, "example": {"account-id": "urn:ivcap:account:0f0e3f57-80f7-4899-9b69-459af2efd789", "banner": "http://beerwunsch.name/emmitt", "description": "This service ...", "metadata": [{"name": "Magni voluptatem quae nemo numquam dolorem eum.", "value": "Repellat omnis perspiciatis quia nobis."}, {"name": "Magni voluptatem quae nemo numquam dolorem eum.", "value": "Repellat omnis perspiciatis quia nobis."}, {"name": "Magni voluptatem quae nemo numquam dolorem eum.", "value": "Repellat omnis perspiciatis quia nobis."}], "name": "Fire risk for Lot2", "parameters": [{"description": "The name of the region as according to ...", "label": "Region Name", "name": "region", "type": "string"}, {"label": "Rainfall/month threshold", "name": "threshold", "type": "float", "unit": "m"}], "policy-id": "Modi exercitationem natus quaerat veritatis.", "provider-id": "urn:ivcap:provider:0f0e3f57-80f7-4899-9b69-459af2efd789", "provider-ref": "service_foo_patch_1", "references": [{"title": "Ipsum autem possimus.", "uri": "http://hudsoncruickshank.org/crawford.kilback"}, {"title": "Ipsum autem possimus.", "uri": "http://hudsoncruickshank.org/crawford.kilback"}, {"title": "Ipsum autem possimus.", "uri": "http://hudsoncruickshank.org/crawford.kilback"}], "tags": ["tag1", "tag2"], "workflow": {"argo": "Possimus et id harum iste dolores esse.", "basic": {"command": ["/bin/sh", "-c", "echo $PATH"], "cpu": {"limit": "100m", "request": "10m"}, "ephemeral-storage": {"limit": "4Gi", "request": "2Gi"}, "image": "alpine", "memory": {"limit": "100Mi", "request": "10Mi"}}, "opts": "Quia minus.", "type": "basic"}}, "required": ["description", "provider-id", "account-id", "workflow", "parameters"]}, "ServiceListItem": {"type": "object", "properties": {"description": {"type": "string", "description": "Optional description of the service", "example": "Some lengthy description of fire risk"}, "id": {"type": "string", "description": "Service ID", "example": "service:acme:oracle"}, "links": {"$ref": "#/components/schemas/SelfT"}, "name": {"type": "string", "description": "Optional customer provided name", "example": "Fire risk for region"}, "provider": {"$ref": "#/components/schemas/RefT"}}, "example": {"description": "Some lengthy description of fire risk", "id": "service:acme:oracle", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Omnis cum odit."}, "name": "Fire risk for region", "provider": {"id": "http://beahan.net/laurie", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Omnis cum odit."}}}, "required": ["links"]}, "ServiceListRT": {"type": "object", "properties": {"at-time": {"type": "string", "description": "Time at which this list was valid", "example": "1996-12-19T16:39:57-08:00", "format": "date-time"}, "links": {"$ref": "#/components/schemas/NavT"}, "services": {"type": "array", "items": {"$ref": "#/components/schemas/ServiceListItem"}, "description": "Services", "example": [{"description": "Some lengthy description of fire risk", "id": "service:acme:oracle", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Omnis cum odit."}, "name": "Fire risk for region", "provider": {"id": "http://beahan.net/laurie", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Omnis cum odit."}}}, {"description": "Some lengthy description of fire risk", "id": "service:acme:oracle", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Omnis cum odit."}, "name": "Fire risk for region", "provider": {"id": "http://beahan.net/laurie", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Omnis cum odit."}}}, {"description": "Some lengthy description of fire risk", "id": "service:acme:oracle", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Omnis cum odit."}, "name": "Fire risk for region", "provider": {"id": "http://beahan.net/laurie", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Omnis cum odit."}}}]}}, "example": {"at-time": "1996-12-19T16:39:57-08:00", "links": {"first": "https://api.com/foo/...", "next": "https://api.com/foo/...", "self": "https://api.com/foo/..."}, "services": [{"description": "Some lengthy description of fire risk", "id": "service:acme:oracle", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Omnis cum odit."}, "name": "Fire risk for region", "provider": {"id": "http://beahan.net/laurie", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Omnis cum odit."}}}, {"description": "Some lengthy description of fire risk", "id": "service:acme:oracle", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Omnis cum odit."}, "name": "Fire risk for region", "provider": {"id": "http://beahan.net/laurie", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Omnis cum odit."}}}]}, "required": ["services", "at-time", "links"]}, "ServiceStatusRT": {"type": "object", "properties": {"account": {"$ref": "#/components/schemas/RefT"}, "description": {"type": "string", "description": "More detailed description of the service", "example": "This service ..."}, "id": {"type": "string", "description": "Service ID", "example": "service:acme:oracle"}, "links": {"$ref": "#/components/schemas/SelfT"}, "metadata": {"type": "array", "items": {"$ref": "#/components/schemas/ParameterT"}, "description": "Optional provider provided meta tags", "example": [{"name": "Recusandae quis.", "value": "Dignissimos qui expedita quia deserunt veritatis."}, {"name": "Recusandae quis.", "value": "Dignissimos qui expedita quia deserunt veritatis."}]}, "name": {"type": "string", "description": "Optional provider provided name", "example": "Fire risk for Lot2"}, "parameters": {"type": "array", "items": {"$ref": "#/components/schemas/ParameterDefT"}, "description": "Service parameter definitions", "example": [{"description": "The name of the region as according to ...", "label": "Region Name", "name": "region", "type": "string"}, {"label": "Rainfall/month threshold", "name": "threshold", "type": "float", "unit": "m"}]}, "provider": {"$ref": "#/components/schemas/RefT"}, "provider-ref": {"type": "string", "description": "Provider provided ID. Needs to be a single string with punctuations allowed. Might have been changed", "example": "service_foo"}, "status": {"type": "string", "description": "Service status", "example": "inactive", "enum": ["active", "inactive", "error"]}, "tags": {"type": "array", "items": {"type": "string", "example": "Consequatur dolor natus nihil."}, "description": "Optional provider provided tags", "example": ["tag1", "tag2"]}}, "example": {"account": {"id": "http://beahan.net/laurie", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Omnis cum odit."}}, "description": "This service ...", "id": "service:acme:oracle", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Omnis cum odit."}, "metadata": [{"name": "Recusandae quis.", "value": "Dignissimos qui expedita quia deserunt veritatis."}, {"name": "Recusandae quis.", "value": "Dignissimos qui expedita quia deserunt veritatis."}, {"name": "Recusandae quis.", "value": "Dignissimos qui expedita quia deserunt veritatis."}, {"name": "Recusandae quis.", "value": "Dignissimos qui expedita quia deserunt veritatis."}], "name": "Fire risk for Lot2", "parameters": [{"description": "The name of the region as according to ...", "label": "Region Name", "name": "region", "type": "string"}, {"label": "Rainfall/month threshold", "name": "threshold", "type": "float", "unit": "m"}], "provider": {"id": "http://beahan.net/laurie", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Omnis cum odit."}}, "provider-ref": "service_foo", "status": "inactive", "tags": ["tag1", "tag2"]}, "required": ["id", "links", "parameters"]}, "WorkflowT": {"type": "object", "properties": {"argo": {"type": "string", "description": "Defines the workflow using argo's WF schema", "example": "Omnis explicabo officiis vel eius in asperiores.", "format": "binary"}, "basic": {"$ref": "#/components/schemas/BasicWorkflowOptsT"}, "opts": {"type": "string", "description": "Type specific options - left for backward compatibility, if possible use type specific elements", "example": "Ut deserunt corporis voluptatibus optio quibusdam.", "format": "binary"}, "type": {"type": "string", "description": "Type of workflow", "example": "basic"}}, "description": "Defines the workflow to use to execute this service. Currently supported 'types' are 'basic'\n\tand 'argo'. In case of 'basic', use the 'basic' element for further parameters. In the current implementation\n\t'opts' is expected to contain the same schema as 'basic'", "example": {"argo": "Dignissimos quisquam earum dolores unde qui.", "basic": {"command": ["/bin/sh", "-c", "echo $PATH"], "cpu": {"limit": "100m", "request": "10m"}, "ephemeral-storage": {"limit": "4Gi", "request": "2Gi"}, "image": "alpine", "memory": {"limit": "100Mi", "request": "10Mi"}}, "opts": "Veniam non eaque.", "type": "basic"}}}, "securitySchemes": {"jwt_header_Authorization": {"type": "http", "description": "Secures endpoint by requiring a valid JWT token", "scheme": "bearer"}}}, "tags": [{"name": "openapi", "description": "The openapi service serves the OpenAPI definition."}, {"name": "artifact", "description": "Manage the life cycle of an artifact stored by this deployment."}, {"name": "metadata", "description": "Manages the life cycle of metadata attached to an entity."}, {"name": "order", "description": "Manage the life cycle of an order for CRE services."}, {"name": "service", "description": "Manage the life cycle of a service offered on the CRE marketplace."}]}
