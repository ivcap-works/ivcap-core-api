{"openapi": "3.0.3", "info": {"title": "IVCAP", "description": "\n**IVCAP** is for **service providers** to **offer** analytics **services**\nand for **consumers** to **order** customised **products** produced by said services.\n\n### Typical Workflow\n\n1. Obtain an token from the ID Providers listed in the document returned\nby [/1/authinfo.yaml](/1/authinfo.yaml). The token needs to be added\nas a bearer token via the\n<code>Authorization</code> header to every request to this service.\n1. <a href=\"#get-/1/services\">List</a> all available service.\n1. Select appropriate service and retrieve details, like parameters via\n<a href=\"#get-/1/services/-id-\">Read Service</a>.\n1. Create the appropriate json request and POST it to\n<a href=\"#post-/1/orders\">Create Order</a>. (see the example in the\nservice description.)\n1. The reply from the above POST operation contains a link (<code>links/self</code>) to the\nnewly create order record accessible via <a href=\"#get-/1/orders/-id-\">Read Order</a>.\n1. Progress of the order fulfilment can be tracked via repeated calls to\n<a href=\"#get-/1/orders/-id-\">Read Order</a> and the returned <code>status</code>.\n1. Any information products created in the context of an order will be listed under <code>producs</code>\nwhich also include a link to the respective <a href=\"#get-/1/artifacts/-id-\">Read Artifact</a>.\n1. The <a href=\"#get-/1/artifacts/-id-\">Read Artifact</a> service will return more details for\neach artifact, including a <code>data</code> link through which the artifact content can be downloaded. (The\ndownload link is also included in the <code>products</code> list returned by\nthe <a href=\"#get-/1/orders/-id-\">Read Order</a> service ).\n\nPlease note that all schemas in this API are following the [{json:api}](https://jsonapi.org/) specs\nwherever appropriate.\n\n### High-level Architecture\n\nOn receiving an order through this **API**, the internal *Order Dispatcher* is\ncreating a *workflow*, dispatching that to the\n[Argo workflow engine](https://argoproj.github.io/argo-workflows/)\nand create appropriate records in [Magda](https://magda.io/).\nAs the execution of the workflow progresses, appropriate updates are posted to the order record in Magda,\nsuch as data accessed or produced. In addition, any information products created will be\nstored via [Minio](https://min.io/) in a deployment specific object store\nand made accessible through the *Artifact* service.\n\t", "version": "0.29"}, "servers": [{"url": "http://localhost:8088", "description": "This endpoint hosts all the IVCAP services."}], "paths": {"/1/artifacts": {"get": {"tags": ["artifact"], "summary": "list artifact", "description": "list artifacts", "operationId": "artifact#list", "parameters": [{"name": "limit", "in": "query", "description": "The $limit system query option requests the number of items in the queried\n\t\t\t\tcollection to be included in the result.", "allowEmptyValue": true, "schema": {"type": "integer", "description": "The $limit system query option requests the number of items in the queried\n\t\t\t\tcollection to be included in the result.", "default": 10, "example": 10, "minimum": 1, "maximum": 50}, "example": 10}, {"name": "page", "in": "query", "description": "The content of 'page' is returned in the 'links' part of a previous query and\n\t\t\t\twill when set, ALL other parameters, except for 'limit' are ignored.", "allowEmptyValue": true, "schema": {"type": "string", "description": "The content of 'page' is returned in the 'links' part of a previous query and\n\t\t\t\twill when set, ALL other parameters, except for 'limit' are ignored.", "example": "gdsgQwhdgd"}, "example": "gdsgQwhdgd"}, {"name": "filter", "in": "query", "description": "The 'filter' system query option allows clients to filter a collection of\n\t\t\t\tresources that are addressed by a request URL. The expression specified with 'filter'\n\t\t\t\tis evaluated for each resource in the collection, and only items where the expression\n\t\t\t\tevaluates to true are included in the response.", "allowEmptyValue": true, "schema": {"type": "string", "description": "The 'filter' system query option allows clients to filter a collection of\n\t\t\t\tresources that are addressed by a request URL. The expression specified with 'filter'\n\t\t\t\tis evaluated for each resource in the collection, and only items where the expression\n\t\t\t\tevaluates to true are included in the response.", "example": "name ~= 'Scott%'"}, "example": "name ~= 'Scott%'"}, {"name": "order-by", "in": "query", "description": "The 'orderby' query option allows clients to request resources in either\n\t\t\t\tascending order using asc or descending order using desc. If asc or desc not specified,\n\t\t\t\tthen the resources will be ordered in ascending order. The request below orders Trips on\n\t\t\t\tproperty EndsAt in descending order.", "allowEmptyValue": true, "schema": {"type": "string", "description": "The 'orderby' query option allows clients to request resources in either\n\t\t\t\tascending order using asc or descending order using desc. If asc or desc not specified,\n\t\t\t\tthen the resources will be ordered in ascending order. The request below orders Trips on\n\t\t\t\tproperty EndsAt in descending order.", "example": "orderby=EndsAt"}, "example": "orderby=EndsAt"}, {"name": "order-desc", "in": "query", "description": "When set order result in descending order. Ascending order is the default.", "allowEmptyValue": true, "schema": {"type": "boolean", "description": "When set order result in descending order. Ascending order is the default.", "default": false, "example": true}, "example": false}, {"name": "at-time", "in": "query", "description": "Return the state of the respective resources at that time [now]", "allowEmptyValue": true, "schema": {"type": "string", "description": "Return the state of the respective resources at that time [now]", "example": "1996-12-19T16:39:57-08:00", "format": "date-time"}, "example": "1996-12-19T16:39:57-08:00"}], "responses": {"200": {"description": "OK response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ArtifactListRT"}, "example": {"artifacts": [{"id": "cayp:artifact:0000-000", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Et quia quis ut quia."}, "mime-type": "image/jpeg", "name": "Fire risk for Lot2", "size": 19000, "status": "ready"}, {"id": "cayp:artifact:0000-000", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Et quia quis ut quia."}, "mime-type": "image/jpeg", "name": "Fire risk for Lot2", "size": 19000, "status": "ready"}, {"id": "cayp:artifact:0000-000", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Et quia quis ut quia."}, "mime-type": "image/jpeg", "name": "Fire risk for Lot2", "size": 19000, "status": "ready"}], "at-time": "1996-12-19T16:39:57-08:00", "links": {"first": "https://api.com/foo/...", "next": "https://api.com/foo/...", "self": "https://api.com/foo/..."}}}}}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}, "example": {"id": "123e4567-e89b-12d3-a456-426614174000", "message": "At quam aut nemo."}}}}, "422": {"description": "invalid-parameter: Request contained semantically wrong parameter value", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidParameterValue"}, "example": {"message": "Repellendus magni sequi inventore exercitationem.", "name": "Voluptate consequuntur exercitationem quae.", "value": "Explicabo aut ut nihil quia."}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}, "example": {"message": "Assumenda ratione impedit provident possimus."}}}}}, "security": [{"jwt_header_Authorization": ["consumer:read"]}]}, "post": {"tags": ["artifact"], "summary": "upload artifact", "description": "Upload content and create a artifacts.", "operationId": "artifact#upload", "parameters": [{"name": "Content-Type", "in": "header", "description": "Content-Type header, MUST define type of uploaded content.", "allowEmptyValue": true, "schema": {"type": "string", "description": "Content-Type header, MUST define type of uploaded content.", "example": "application/x-netcdf4"}, "example": "application/x-netcdf4"}, {"name": "Content-Encoding", "in": "header", "description": "Content-Encoding header, MAY define encoding of content.", "allowEmptyValue": true, "schema": {"type": "string", "description": "Content-Encoding header, MAY define encoding of content.", "example": "gzip"}, "example": "gzip"}, {"name": "Content-Length", "in": "header", "description": "Content-Length header, MAY define size of expected upload.", "allowEmptyValue": true, "schema": {"type": "integer", "description": "Content-Length header, MAY define size of expected upload.", "example": 2376, "format": "int64"}, "example": 2376}, {"name": "X-Name", "in": "header", "description": "X-Name header, MAY define a more human friendly name. Reusing a name will NOT override an existing artifact with the same name", "allowEmptyValue": true, "schema": {"type": "string", "description": "X-Name header, MAY define a more human friendly name. Reusing a name will NOT override an existing artifact with the same name", "example": "sample-12"}, "example": "sample-12"}, {"name": "X-Collection", "in": "header", "description": "X-Collection header, MAY define an collection name as a simple way of grouping artifacts", "allowEmptyValue": true, "schema": {"type": "string", "description": "X-Collection header, MAY define an collection name as a simple way of grouping artifacts", "example": "urn:projectX:collection:field-trip-jun-22"}, "example": "urn:projectX:collection:field-trip-jun-22"}, {"name": "X-Policy", "in": "header", "description": "X-Policy header, MAY define a specific policy to control access to this artifact", "allowEmptyValue": true, "schema": {"type": "string", "description": "X-Policy header, MAY define a specific policy to control access to this artifact", "example": "urn:ivcap:policy:ivcap.open.metadata"}, "example": "urn:ivcap:policy:ivcap.open.metadata"}, {"name": "X-Content-Type", "in": "header", "description": "X-Content-Type header, used for initial, empty content creation requests.", "allowEmptyValue": true, "schema": {"type": "string", "description": "X-Content-Type header, used for initial, empty content creation requests.", "example": "application/x-netcdf4"}, "example": "application/x-netcdf4"}, {"name": "X-Content-Length", "in": "header", "description": "X-Content-Length header, used for initial, empty content creation requests.", "allowEmptyValue": true, "schema": {"type": "integer", "description": "X-Content-Length header, used for initial, empty content creation requests.", "example": 2376, "format": "int64"}, "example": 2376}, {"name": "Upload-Length", "in": "header", "description": "Upload-Length header, sets the expected content size part of the TUS protocol.", "allowEmptyValue": true, "schema": {"type": "integer", "description": "Upload-Length header, sets the expected content size part of the TUS protocol.", "example": 2376, "format": "int64"}, "example": 2376}, {"name": "Tus-Resumable", "in": "header", "description": "Tus-Resumable header, specifies TUS protocol version.", "allowEmptyValue": true, "schema": {"type": "string", "description": "Tus-Resumable header, specifies TUS protocol version.", "example": "1.0.0"}, "example": "1.0.0"}], "responses": {"201": {"description": "Created response.", "headers": {"Location": {"description": "link back to record", "schema": {"type": "string", "description": "link back to record", "example": "Nihil dolor."}, "example": "Iste aut amet."}, "Tus-Resumable": {"description": "indicate version of TUS supported", "schema": {"type": "string", "description": "indicate version of TUS supported", "example": "Accusamus minus natus."}, "example": "Eum ut commodi quis et asperiores."}, "Upload-Offset": {"description": "TUS offset for partially uploaded content", "schema": {"type": "integer", "description": "TUS offset for partially uploaded content", "example": 7859555815735802360, "format": "int64"}, "example": 7020533450292097189}}, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ArtifactStatusRT"}, "example": {"account": {"id": "http://christiansen.org/ned", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Et quia quis ut quia."}}, "cache-of": "Cupiditate nesciunt necessitatibus ipsa rerum ut optio.", "created-at": "2022-01-01", "data": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Et quia quis ut quia."}, "etag": "Alias reiciendis qui beatae.", "id": "type:scope:name", "last-modified-at": "2022-01-01", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Et quia quis ut quia."}, "mime-type": "Dolores est possimus illo dolor voluptatem.", "name": "Fire risk per LGA", "policy": {"id": "http://christiansen.org/ned", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Et quia quis ut quia."}}, "size": 909670889935126074, "status": "ready"}}}}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}, "example": {"id": "123e4567-e89b-12d3-a456-426614174000", "message": "Esse ad qui."}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}, "example": {"message": "Ut dolores quia rerum nihil."}}}}}, "security": [{"jwt_header_Authorization": ["consumer:write"]}]}}, "/1/artifacts/{id}": {"get": {"tags": ["artifact"], "summary": "read artifact", "description": "Show artifacts by ID", "operationId": "artifact#read", "parameters": [{"name": "id", "in": "path", "description": "ID of artifacts to show", "required": true, "schema": {"type": "string", "description": "ID of artifacts to show", "example": "type:scope:name"}, "example": "type:scope:name"}], "responses": {"200": {"description": "OK response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ArtifactStatusRT"}, "example": {"account": {"id": "http://christiansen.org/ned", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Et quia quis ut quia."}}, "cache-of": "Ea maxime alias nulla.", "created-at": "2022-01-01", "data": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Et quia quis ut quia."}, "etag": "Sit rerum doloremque sed.", "id": "type:scope:name", "last-modified-at": "2022-01-01", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Et quia quis ut quia."}, "location": "Pariatur recusandae consequatur ad.", "mime-type": "Rerum et est incidunt eos id ducimus.", "name": "Fire risk per LGA", "policy": {"id": "http://christiansen.org/ned", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Et quia quis ut quia."}}, "size": 1851193562831183282, "status": "partial", "tus-offset": 4153300048958200079, "tus-resumable": "Temporibus deserunt dolorem."}}}}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}, "example": {"id": "123e4567-e89b-12d3-a456-426614174000", "message": "Cum est."}}}}, "404": {"description": "not-found: artifacts not found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ResourceNotFoundT"}, "example": {"id": "cayp:type:123e4567-e89b-12d3-a456-426614174000", "message": "Resource 123...00 not found"}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}, "example": {"message": "At ipsa occaecati."}}}}}, "security": [{"jwt_header_Authorization": ["consumer:read"]}]}}, "/1/aspect": {"get": {"tags": ["aspect"], "summary": "list aspect", "description": "Return a list of aspect aspects.", "operationId": "aspect#list", "parameters": [{"name": "entity", "in": "query", "description": "Optioanl entity for which to request aspects", "allowEmptyValue": true, "schema": {"type": "string", "description": "Optioanl entity for which to request aspects", "example": "urn:blue:image.collA#12", "format": "uri"}, "example": "urn:blue:image.collA#12"}, {"name": "schema", "in": "query", "description": "Schema prefix using '%' as wildcard indicator", "allowEmptyValue": true, "schema": {"type": "string", "description": "Schema prefix using '%' as wildcard indicator", "example": "urn:blue:schema:image%"}, "example": "urn:blue:schema:image%"}, {"name": "at-time", "in": "query", "description": "Return aspect which where valid at that time [now]", "allowEmptyValue": true, "schema": {"type": "string", "description": "Return aspect which where valid at that time [now]", "example": "1996-12-19T16:39:57-08:00", "format": "date-time"}, "example": "1996-12-19T16:39:57-08:00"}, {"name": "limit", "in": "query", "description": "The 'limit' system query option requests the number of items in the queried\n\t\t\t\tcollection to be included in the result.", "allowEmptyValue": true, "schema": {"type": "integer", "description": "The 'limit' system query option requests the number of items in the queried\n\t\t\t\tcollection to be included in the result.", "default": 10, "example": 10, "minimum": 1, "maximum": 50}, "example": 10}, {"name": "filter", "in": "query", "description": "The 'filter' system query option allows clients to filter a collection of\n\t\t\t\tresources that are addressed by a request URL. The expression specified with 'filter'\n\t\t\t\tis evaluated for each resource in the collection, and only items where the expression\n\t\t\t\tevaluates to true are included in the response.", "allowEmptyValue": true, "schema": {"type": "string", "description": "The 'filter' system query option allows clients to filter a collection of\n\t\t\t\tresources that are addressed by a request URL. The expression specified with 'filter'\n\t\t\t\tis evaluated for each resource in the collection, and only items where the expression\n\t\t\t\tevaluates to true are included in the response.", "default": "", "example": "filter=FirstName eq 'Scott'"}, "example": "filter=FirstName eq 'Scott'"}, {"name": "order-by", "in": "query", "description": "The 'orderby' query option allows clients to request resources in either\n\t\t\t\tascending order using asc or descending order using desc. If asc or desc not specified,\n\t\t\t\tthen the resources will be ordered in ascending order. The request below orders Trips on\n\t\t\t\tproperty EndsAt in descending order.", "allowEmptyValue": true, "schema": {"type": "string", "description": "The 'orderby' query option allows clients to request resources in either\n\t\t\t\tascending order using asc or descending order using desc. If asc or desc not specified,\n\t\t\t\tthen the resources will be ordered in ascending order. The request below orders Trips on\n\t\t\t\tproperty EndsAt in descending order.", "default": "", "example": "orderby=EndsAt"}, "example": "orderby=EndsAt"}, {"name": "order-desc", "in": "query", "description": "When set order result in descending order. Ascending order is the default.", "allowEmptyValue": true, "schema": {"type": "boolean", "description": "When set order result in descending order. Ascending order is the default.", "example": false}, "example": false}, {"name": "page", "in": "query", "description": "The content of '$page' is returned in the 'links' part of a previous query and\n\t\t\t\twill when set, ALL other parameters, except for 'limit' are ignored.", "allowEmptyValue": true, "schema": {"type": "string", "description": "The content of '$page' is returned in the 'links' part of a previous query and\n\t\t\t\twill when set, ALL other parameters, except for 'limit' are ignored.", "example": "gdsgQwhdgd"}, "example": "gdsgQwhdgd"}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ListRequestBody"}, "example": {"content-path": "$.images[*] ? (@.size > 10000)"}}}}, "responses": {"200": {"description": "OK response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AspectListRT"}, "example": {"aspect-path": "Facere modi voluptas voluptates quaerat molestias ipsum.", "at-time": "1996-12-19T16:39:57-08:00", "entity": "urn:blue:image.collA.12", "items": [{"content": "{...}", "content-type": "application/json", "entity": "urn:blue:transect.1", "id": "urn:ivcap:aspect#123e4567-e89b-12d3-a456-426614174000", "schema": "urn:blue:schema.image"}, {"content": "{...}", "content-type": "application/json", "entity": "urn:blue:transect.1", "id": "urn:ivcap:aspect#123e4567-e89b-12d3-a456-426614174000", "schema": "urn:blue:schema.image"}], "links": {"first": "https://api.com/foo/...", "next": "https://api.com/foo/...", "self": "https://api.com/foo/..."}, "schema": "urn:blue:image,urn:blue:location"}}}}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}, "example": {"id": "123e4567-e89b-12d3-a456-426614174000", "message": "Sunt est quaerat voluptatum."}}}}, "415": {"description": "unsupported-content-type: Format not supported by this method on the target resource", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}, "example": {"message": "Omnis fugit iste perspiciatis voluptatibus ea."}}}}, "422": {"description": "invalid-parameter: Request contained semantically wrong parameter value", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidParameterValue"}, "example": {"message": "Officiis enim quam blanditiis soluta.", "name": "Vel atque necessitatibus veniam.", "value": "Voluptatem harum ea et dicta laboriosam velit."}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}, "example": {"message": "Vel deleniti fugit."}}}}}, "security": [{"jwt_header_Authorization": ["consumer:read"]}]}, "post": {"tags": ["aspect"], "summary": "create aspect", "description": "Attach new aspect to an entity.", "operationId": "aspect#create", "parameters": [{"name": "entity", "in": "query", "description": "Entity to which attach aspect", "allowEmptyValue": true, "required": true, "schema": {"type": "string", "description": "Entity to which attach aspect", "example": "urn:some_ns:entity#123"}, "example": "urn:some_ns:entity#123"}, {"name": "schema", "in": "query", "description": "Schema of the aspect in payload", "allowEmptyValue": true, "required": true, "schema": {"type": "string", "description": "Schema of the aspect in payload", "example": "urn:some_ns:schema:some_schema.1"}, "example": "urn:some_ns:schema:some_schema.1"}, {"name": "policy", "in": "query", "description": "Policy guiding visibility and actions performed", "allowEmptyValue": true, "schema": {"type": "string", "description": "Policy guiding visibility and actions performed", "example": "urn:ivcap:policy:some_policy.1"}, "example": "urn:ivcap:policy:some_policy.1"}, {"name": "Content-Type", "in": "header", "description": "Content-Type header, MUST be of application/json.", "allowEmptyValue": true, "required": true, "schema": {"type": "string", "description": "Content-Type header, MUST be of application/json.", "example": "application/json"}, "example": "application/json"}], "requestBody": {"description": "Aspect content", "required": true, "content": {"application/json": {"schema": {"type": "string", "description": "Aspect content", "example": "{\"$schema\": ...}", "format": "binary"}, "example": "{\"$schema\": ...}"}}}, "responses": {"200": {"description": "OK response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AspectIDRT"}, "example": {"id": "urn:ivcap:aspect#123e4567-e89b-12d3-a456-426614174000"}}}}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}, "example": {"id": "123e4567-e89b-12d3-a456-426614174000", "message": "Impedit eum eum."}}}}, "422": {"description": "invalid-parameter: Request contained semantically wrong parameter value", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidParameterValue"}, "example": {"message": "Ab in sed.", "name": "Voluptatum amet earum voluptas.", "value": "Eum maxime est ut esse unde libero."}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}, "example": {"message": "Officia minima aperiam consequatur."}}}}}, "security": [{"jwt_header_Authorization": ["consumer:write"]}]}}, "/1/aspect/{id}": {"delete": {"tags": ["aspect"], "summary": "retract aspect", "description": "Retract a previously created statement.", "operationId": "aspect#retract", "parameters": [{"name": "id", "in": "path", "description": "Aspect ID to restract", "required": true, "schema": {"type": "string", "description": "Aspect ID to restract", "example": "urn:ivcap:aspect#53cbb715-4ffd-4158-9e55-5d0ae69605a4", "format": "uri"}, "example": "urn:ivcap:aspect#53cbb715-4ffd-4158-9e55-5d0ae69605a4"}], "responses": {"204": {"description": "No Content response."}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}, "example": {"id": "123e4567-e89b-12d3-a456-426614174000", "message": "Sit ut."}}}}, "422": {"description": "invalid-parameter: Request contained semantically wrong parameter value", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidParameterValue"}, "example": {"message": "Rerum aut.", "name": "Aut saepe magni asperiores.", "value": "Et ut aliquam qui qui voluptates."}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}, "example": {"message": "Aut atque quam sequi expedita dicta."}}}}}, "security": [{"jwt_header_Authorization": ["consumer:write"]}]}, "get": {"tags": ["aspect"], "summary": "read aspect", "description": "Show aspect by ID", "operationId": "aspect#read", "parameters": [{"name": "id", "in": "path", "description": "ID of aspect to show", "required": true, "schema": {"type": "string", "description": "ID of aspect to show", "example": "type:scope:name"}, "example": "type:scope:name"}], "responses": {"200": {"description": "OK response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AspectRT"}, "example": {"asserter": "urn:...", "content": "{...}", "content-type": "application/json", "entity": "urn:blue:transect.1", "id": "urn:ivcap:aspect#123e4567-e89b-12d3-a456-426614174000", "retracter": "urn:...", "schema": "urn:blue:schema.image", "valid-from": "1996-12-19T16:39:57-08:00", "valid-to": "1996-12-19T16:39:57-08:00"}}}}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}, "example": {"id": "123e4567-e89b-12d3-a456-426614174000", "message": "Voluptas est."}}}}, "404": {"description": "not-found: aspect not found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ResourceNotFoundT"}, "example": {"id": "cayp:type:123e4567-e89b-12d3-a456-426614174000", "message": "Resource 123...00 not found"}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}, "example": {"message": "Magnam nihil et assumenda a temporibus sint."}}}}}, "security": [{"jwt_header_Authorization": ["consumer:read"]}]}, "put": {"tags": ["aspect"], "summary": "update aspect", "description": "Retract this aspect and create a new one with the information provided.\n\t\t\tFor any field not provided, the value from the current aspect is used.", "operationId": "aspect#update", "parameters": [{"name": "entity", "in": "query", "description": "Entity to which attach aspect", "allowEmptyValue": true, "required": true, "schema": {"type": "string", "description": "Entity to which attach aspect", "example": "urn:some_ns:schema:some_schema.1"}, "example": "urn:some_ns:schema:some_schema.1"}, {"name": "schema", "in": "query", "description": "Schema of aspect", "allowEmptyValue": true, "required": true, "schema": {"type": "string", "description": "Schema of aspect", "example": "urn:url:....", "format": "uri"}, "example": "urn:url:...."}, {"name": "id", "in": "path", "description": "Aspect to update", "required": true, "schema": {"type": "string", "description": "Aspect to update", "example": "urn:ivcap:aspect#53cbb715-4ffd-4158-9e55-5d0ae69605a4"}, "example": "urn:ivcap:aspect#53cbb715-4ffd-4158-9e55-5d0ae69605a4"}, {"name": "Content-Type", "in": "header", "description": "Content-Type header, MUST be of application/json.", "allowEmptyValue": true, "required": true, "schema": {"type": "string", "description": "Content-Type header, MUST be of application/json.", "example": "application/json"}, "example": "application/json"}], "requestBody": {"description": "Aspect content", "required": true, "content": {"application/json": {"schema": {"type": "string", "description": "Aspect content", "example": "{\"$schema\": ...}", "format": "binary"}, "example": "{\"$schema\": ...}"}}}, "responses": {"200": {"description": "OK response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AspectIDRT"}, "example": {"id": "urn:ivcap:aspect#123e4567-e89b-12d3-a456-426614174000"}}}}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}, "example": {"id": "123e4567-e89b-12d3-a456-426614174000", "message": "Sint consectetur."}}}}, "422": {"description": "invalid-parameter: Request contained semantically wrong parameter value", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidParameterValue"}, "example": {"message": "Ex tempore corrupti sapiente.", "name": "Voluptatibus quasi delectus molestiae molestiae.", "value": "Enim blanditiis dolorem similique."}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}, "example": {"message": "Quia quia minus dolores nemo reiciendis voluptates."}}}}}, "security": [{"jwt_header_Authorization": ["consumer:write"]}]}}, "/1/metadata": {"get": {"tags": ["metadata"], "summary": "list metadata", "description": "Return a list of metadata records.", "operationId": "metadata#list", "parameters": [{"name": "entity-id", "in": "query", "description": "Entity for which to request metadata", "allowEmptyValue": true, "schema": {"type": "string", "description": "Entity for which to request metadata", "example": "urn:blue:image.collA.12", "format": "uri"}, "example": "urn:blue:image.collA.12"}, {"name": "schema", "in": "query", "description": "Schema prefix using '%' as wildcard indicator", "allowEmptyValue": true, "schema": {"type": "string", "description": "Schema prefix using '%' as wildcard indicator", "example": "urn:blue:image%"}, "example": "urn:blue:image%"}, {"name": "aspect-path", "in": "query", "description": "To learn more about the supported format, see\n\t\t\t\t\thttps://www.postgresql.org/docs/current/datatype-json.html#DATATYPE-JSONPATH", "allowEmptyValue": true, "schema": {"type": "string", "description": "To learn more about the supported format, see\n\t\t\t\t\thttps://www.postgresql.org/docs/current/datatype-json.html#DATATYPE-JSONPATH", "example": "$.images[*] ? (@.size > 10000)"}, "example": "$.images[*] ? (@.size > 10000)"}, {"name": "at-time", "in": "query", "description": "Return metadata which where valid at that time [now]", "allowEmptyValue": true, "schema": {"type": "string", "description": "Return metadata which where valid at that time [now]", "example": "1996-12-19T16:39:57-08:00", "format": "date-time"}, "example": "1996-12-19T16:39:57-08:00"}, {"name": "limit", "in": "query", "description": "The 'limit' system query option requests the number of items in the queried\n\t\t\t\tcollection to be included in the result.", "allowEmptyValue": true, "schema": {"type": "integer", "description": "The 'limit' system query option requests the number of items in the queried\n\t\t\t\tcollection to be included in the result.", "default": 10, "example": 10, "minimum": 1, "maximum": 50}, "example": 10}, {"name": "filter", "in": "query", "description": "The 'filter' system query option allows clients to filter a collection of\n\t\t\t\tresources that are addressed by a request URL. The expression specified with 'filter'\n\t\t\t\tis evaluated for each resource in the collection, and only items where the expression\n\t\t\t\tevaluates to true are included in the response.", "allowEmptyValue": true, "schema": {"type": "string", "description": "The 'filter' system query option allows clients to filter a collection of\n\t\t\t\tresources that are addressed by a request URL. The expression specified with 'filter'\n\t\t\t\tis evaluated for each resource in the collection, and only items where the expression\n\t\t\t\tevaluates to true are included in the response.", "default": "", "example": "filter=FirstName eq 'Scott'"}, "example": "filter=FirstName eq 'Scott'"}, {"name": "order-by", "in": "query", "description": "The 'orderby' query option allows clients to request resources in either\n\t\t\t\tascending order using asc or descending order using desc. If asc or desc not specified,\n\t\t\t\tthen the resources will be ordered in ascending order. The request below orders Trips on\n\t\t\t\tproperty EndsAt in descending order.", "allowEmptyValue": true, "schema": {"type": "string", "description": "The 'orderby' query option allows clients to request resources in either\n\t\t\t\tascending order using asc or descending order using desc. If asc or desc not specified,\n\t\t\t\tthen the resources will be ordered in ascending order. The request below orders Trips on\n\t\t\t\tproperty EndsAt in descending order.", "default": "", "example": "orderby=EndsAt"}, "example": "orderby=EndsAt"}, {"name": "order-desc", "in": "query", "description": "When set order result in descending order. Ascending order is the default.", "allowEmptyValue": true, "schema": {"type": "boolean", "description": "When set order result in descending order. Ascending order is the default.", "example": false}, "example": false}, {"name": "page", "in": "query", "description": "The content of '$page' is returned in the 'links' part of a previous query and\n\t\t\t\twill when set, ALL other parameters, except for 'limit' are ignored.", "allowEmptyValue": true, "schema": {"type": "string", "description": "The content of '$page' is returned in the 'links' part of a previous query and\n\t\t\t\twill when set, ALL other parameters, except for 'limit' are ignored.", "example": "gdsgQwhdgd"}, "example": "gdsgQwhdgd"}], "responses": {"200": {"description": "OK response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ListMetaRT"}, "example": {"aspect-path": "Ipsum cumque.", "at-time": "1996-12-19T16:39:57-08:00", "entity-id": "urn:blue:image.collA.12", "links": {"first": "https://api.com/foo/...", "next": "https://api.com/foo/...", "self": "https://api.com/foo/..."}, "records": [{"aspect": "{...}", "aspectContext": "{...}", "entity": "urn:blue:transect.1", "record-id": "urn:ivcap:record.123e4567-e89b-12d3-a456-426614174000", "schema": "urn:blue:schema.image"}, {"aspect": "{...}", "aspectContext": "{...}", "entity": "urn:blue:transect.1", "record-id": "urn:ivcap:record.123e4567-e89b-12d3-a456-426614174000", "schema": "urn:blue:schema.image"}, {"aspect": "{...}", "aspectContext": "{...}", "entity": "urn:blue:transect.1", "record-id": "urn:ivcap:record.123e4567-e89b-12d3-a456-426614174000", "schema": "urn:blue:schema.image"}, {"aspect": "{...}", "aspectContext": "{...}", "entity": "urn:blue:transect.1", "record-id": "urn:ivcap:record.123e4567-e89b-12d3-a456-426614174000", "schema": "urn:blue:schema.image"}], "schema": "urn:blue:image,urn:blue:location"}}}}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}, "example": {"id": "123e4567-e89b-12d3-a456-426614174000", "message": "Animi repudiandae."}}}}, "422": {"description": "invalid-parameter: Request contained semantically wrong parameter value", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidParameterValue"}, "example": {"message": "Ut et temporibus magnam qui velit ea.", "name": "Sit qui non deserunt sint vel et.", "value": "Ut dicta magni vel est."}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}, "example": {"message": "Distinctio soluta ipsa."}}}}}, "security": [{"jwt_header_Authorization": ["consumer:read"]}]}, "post": {"tags": ["metadata"], "summary": "add metadata", "description": "Attach new metadata to an entity.", "operationId": "metadata#add", "parameters": [{"name": "entity-id", "in": "query", "description": "Entity to which attach metadata", "allowEmptyValue": true, "required": true, "schema": {"type": "string", "description": "Entity to which attach metadata", "example": "http://mante.info/katherine", "format": "uri"}, "example": "http://larkin.biz/clemmie.strosin"}, {"name": "schema", "in": "query", "description": "Schema of metadata", "allowEmptyValue": true, "required": true, "schema": {"type": "string", "description": "Schema of metadata", "example": "http://mitchell.biz/jose", "format": "uri"}, "example": "http://morissette.org/santiago"}, {"name": "policy-id", "in": "query", "description": "Policy guiding visibility and actions performed", "allowEmptyValue": true, "schema": {"type": "string", "description": "Policy guiding visibility and actions performed", "example": "http://prosacco.info/nova", "format": "uri"}, "example": "http://johnstonthompson.name/jarred"}, {"name": "Content-Type", "in": "header", "description": "Content-Type header, MUST be of application/json.", "allowEmptyValue": true, "required": true, "schema": {"type": "string", "description": "Content-Type header, MUST be of application/json.", "example": "application/json"}, "example": "application/json"}], "requestBody": {"description": "Aspect content", "required": true, "content": {"application/json": {"schema": {"type": "string", "description": "Aspect content", "example": "{\"$schema\": ...}", "format": "binary"}, "example": "{\"$schema\": ...}"}}}, "responses": {"200": {"description": "OK response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AddMetaRT"}, "example": {"record-id": "urn:ivcap:record.123e4567-e89b-12d3-a456-426614174000"}}}}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}, "example": {"id": "123e4567-e89b-12d3-a456-426614174000", "message": "Rem quisquam exercitationem est tempore est."}}}}, "422": {"description": "invalid-parameter: Request contained semantically wrong parameter value", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidParameterValue"}, "example": {"message": "Recusandae quis.", "name": "Dignissimos qui expedita quia deserunt veritatis.", "value": "Voluptas odit aut quod nihil aperiam eligendi."}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}, "example": {"message": "Non non architecto voluptatibus fuga alias."}}}}}, "security": [{"jwt_header_Authorization": ["consumer:write"]}]}, "put": {"tags": ["metadata"], "summary": "update_one metadata", "description": "Revoke a record for the same entity and same schema and create new one\n\t\t\twith the provided properties. __NOTE__, this method will fail if there is more than one active record for the entity/schema pair.", "operationId": "metadata#update_one", "parameters": [{"name": "entity-id", "in": "query", "description": "Entity to which attach metadata", "allowEmptyValue": true, "required": true, "schema": {"type": "string", "description": "Entity to which attach metadata", "example": "urn:url:....", "format": "uri"}, "example": "urn:url:...."}, {"name": "schema", "in": "query", "description": "Schema of metadata", "allowEmptyValue": true, "required": true, "schema": {"type": "string", "description": "Schema of metadata", "example": "urn:url:....", "format": "uri"}, "example": "urn:url:...."}, {"name": "policy-id", "in": "query", "description": "Policy guiding visibility and actions performed", "allowEmptyValue": true, "schema": {"type": "string", "description": "Policy guiding visibility and actions performed", "example": "http://rohan.net/ernestine", "format": "uri"}, "example": "http://friesenlarkin.biz/alexys_mueller"}, {"name": "Content-Type", "in": "header", "description": "Content-Type header, MUST be of application/json.", "allowEmptyValue": true, "schema": {"type": "string", "description": "Content-Type header, MUST be of application/json.", "example": "application/json"}, "example": "application/json"}], "requestBody": {"description": "Aspect content", "required": true, "content": {"application/json": {"schema": {"type": "string", "description": "Aspect content", "example": "{\"$schema\": ...}", "format": "binary"}, "example": "{\"$schema\": ...}"}}}, "responses": {"200": {"description": "OK response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AddMetaRT"}, "example": {"record-id": "urn:ivcap:record.123e4567-e89b-12d3-a456-426614174000"}}}}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}, "example": {"id": "123e4567-e89b-12d3-a456-426614174000", "message": "Repellendus molestias culpa aut assumenda quia."}}}}, "422": {"description": "invalid-parameter: Request contained semantically wrong parameter value", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidParameterValue"}, "example": {"message": "Magni ea dolore et soluta temporibus vero.", "name": "Consectetur veritatis vero saepe debitis.", "value": "Necessitatibus perferendis quo omnis voluptas."}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}, "example": {"message": "Aut quia veniam est."}}}}}, "security": [{"jwt_header_Authorization": ["consumer:write"]}]}}, "/1/metadata/{id}": {"delete": {"tags": ["metadata"], "summary": "revoke metadata", "description": "Retract a previously created statement.", "operationId": "metadata#revoke", "parameters": [{"name": "id", "in": "path", "description": "Record ID to restract", "required": true, "schema": {"type": "string", "description": "Record ID to restract", "example": "urn:ivcap:record.53cbb715-4ffd-4158-9e55-5d0ae69605a4", "format": "uri"}, "example": "urn:ivcap:record.53cbb715-4ffd-4158-9e55-5d0ae69605a4"}], "responses": {"204": {"description": "No Content response."}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}, "example": {"id": "123e4567-e89b-12d3-a456-426614174000", "message": "Iure beatae libero magnam culpa nulla."}}}}, "422": {"description": "invalid-parameter: Request contained semantically wrong parameter value", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidParameterValue"}, "example": {"message": "Doloremque voluptatem.", "name": "Iste saepe repellendus non consequuntur.", "value": "Voluptas sint."}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}, "example": {"message": "Voluptatem natus non eius perferendis culpa."}}}}}, "security": [{"jwt_header_Authorization": ["consumer:write"]}]}, "get": {"tags": ["metadata"], "summary": "read metadata", "description": "Show metadata by ID", "operationId": "metadata#read", "parameters": [{"name": "id", "in": "path", "description": "ID of metadata to show", "required": true, "schema": {"type": "string", "description": "ID of metadata to show", "example": "type:scope:name"}, "example": "type:scope:name"}], "responses": {"200": {"description": "OK response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/MetadataRecordRT"}, "example": {"aspect": "{...}", "asserter": "...", "entity": "urn:blue:transect.1", "record-id": "urn:ivcap:record.123e4567-e89b-12d3-a456-426614174000", "revoker": "...", "schema": "urn:blue:schema.image", "valid-from": "1996-12-19T16:39:57-08:00", "valid-to": "1996-12-19T16:39:57-08:00"}}}}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}, "example": {"id": "123e4567-e89b-12d3-a456-426614174000", "message": "Voluptatibus laudantium enim accusamus quas."}}}}, "404": {"description": "not-found: metadata not found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ResourceNotFoundT"}, "example": {"id": "cayp:type:123e4567-e89b-12d3-a456-426614174000", "message": "Resource 123...00 not found"}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}, "example": {"message": "Voluptatem tempore qui quis numquam."}}}}}, "security": [{"jwt_header_Authorization": ["consumer:read"]}]}, "put": {"tags": ["metadata"], "summary": "update_record metadata", "description": "Revoke this record and create a new one with the information provided.\n\t\t\tFor any field not provided, the value from the current record is used.", "operationId": "metadata#update_record", "parameters": [{"name": "entity-id", "in": "query", "description": "Entity to which attach metadata", "allowEmptyValue": true, "schema": {"type": "string", "description": "Entity to which attach metadata", "example": "urn:url:....", "format": "uri"}, "example": "urn:url:...."}, {"name": "schema", "in": "query", "description": "Schema of metadata", "allowEmptyValue": true, "schema": {"type": "string", "description": "Schema of metadata", "example": "urn:url:....", "format": "uri"}, "example": "urn:url:...."}, {"name": "policy-id", "in": "query", "description": "Policy guiding visibility and actions performed", "allowEmptyValue": true, "schema": {"type": "string", "description": "Policy guiding visibility and actions performed", "example": "http://pourossipes.org/claire", "format": "uri"}, "example": "http://franecki.name/lesly.reichel"}, {"name": "id", "in": "path", "description": "Record ID to update", "required": true, "schema": {"type": "string", "description": "Record ID to update", "example": "urn:ivcap:record.53cbb715-4ffd-4158-9e55-5d0ae69605a4", "format": "uri"}, "example": "urn:ivcap:record.53cbb715-4ffd-4158-9e55-5d0ae69605a4"}, {"name": "Content-Type", "in": "header", "description": "Content-Type header, MUST be of application/json.", "allowEmptyValue": true, "schema": {"type": "string", "description": "Content-Type header, MUST be of application/json.", "example": "application/json"}, "example": "application/json"}], "requestBody": {"description": "Aspect content", "required": true, "content": {"application/json": {"schema": {"type": "string", "description": "Aspect content", "example": "{\"$schema\": ...}", "format": "binary"}, "example": "{\"$schema\": ...}"}}}, "responses": {"200": {"description": "OK response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AddMetaRT"}, "example": {"record-id": "urn:ivcap:record.123e4567-e89b-12d3-a456-426614174000"}}}}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}, "example": {"id": "123e4567-e89b-12d3-a456-426614174000", "message": "Dolor amet nulla qui reprehenderit."}}}}, "422": {"description": "invalid-parameter: Request contained semantically wrong parameter value", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidParameterValue"}, "example": {"message": "Hic eos quaerat voluptas distinctio.", "name": "Sed ut in distinctio consequatur aut voluptas.", "value": "Et vel."}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}, "example": {"message": "Cupiditate voluptas et."}}}}}, "security": [{"jwt_header_Authorization": ["consumer:write"]}]}}, "/1/openapi/openapi3.json": {"get": {"tags": ["openapi"], "summary": "Download /public/openapi3.json", "description": "JSON document containing the API swagger definition", "operationId": "openapi#/1/openapi/openapi3.json", "responses": {"200": {"description": "File downloaded"}}}}, "/1/orders": {"get": {"tags": ["order"], "summary": "list order", "description": "list orders", "operationId": "order#list", "parameters": [{"name": "limit", "in": "query", "description": "The $limit system query option requests the number of items in the queried\n\t\t\t\tcollection to be included in the result.", "allowEmptyValue": true, "schema": {"type": "integer", "description": "The $limit system query option requests the number of items in the queried\n\t\t\t\tcollection to be included in the result.", "default": 10, "example": 10, "minimum": 1, "maximum": 50}, "example": 10}, {"name": "page", "in": "query", "description": "The content of 'page' is returned in the 'links' part of a previous query and\n\t\t\t\twill when set, ALL other parameters, except for 'limit' are ignored.", "allowEmptyValue": true, "schema": {"type": "string", "description": "The content of 'page' is returned in the 'links' part of a previous query and\n\t\t\t\twill when set, ALL other parameters, except for 'limit' are ignored.", "example": "gdsgQwhdgd"}, "example": "gdsgQwhdgd"}, {"name": "filter", "in": "query", "description": "The 'filter' system query option allows clients to filter a collection of\n\t\t\t\tresources that are addressed by a request URL. The expression specified with 'filter'\n\t\t\t\tis evaluated for each resource in the collection, and only items where the expression\n\t\t\t\tevaluates to true are included in the response.", "allowEmptyValue": true, "schema": {"type": "string", "description": "The 'filter' system query option allows clients to filter a collection of\n\t\t\t\tresources that are addressed by a request URL. The expression specified with 'filter'\n\t\t\t\tis evaluated for each resource in the collection, and only items where the expression\n\t\t\t\tevaluates to true are included in the response.", "example": "name ~= 'Scott%'"}, "example": "name ~= 'Scott%'"}, {"name": "order-by", "in": "query", "description": "The 'orderby' query option allows clients to request resources in either\n\t\t\t\tascending order using asc or descending order using desc. If asc or desc not specified,\n\t\t\t\tthen the resources will be ordered in ascending order. The request below orders Trips on\n\t\t\t\tproperty EndsAt in descending order.", "allowEmptyValue": true, "schema": {"type": "string", "description": "The 'orderby' query option allows clients to request resources in either\n\t\t\t\tascending order using asc or descending order using desc. If asc or desc not specified,\n\t\t\t\tthen the resources will be ordered in ascending order. The request below orders Trips on\n\t\t\t\tproperty EndsAt in descending order.", "example": "orderby=EndsAt"}, "example": "orderby=EndsAt"}, {"name": "order-desc", "in": "query", "description": "When set order result in descending order. Ascending order is the default.", "allowEmptyValue": true, "schema": {"type": "boolean", "description": "When set order result in descending order. Ascending order is the default.", "default": false, "example": false}, "example": false}, {"name": "at-time", "in": "query", "description": "Return the state of the respective resources at that time [now]", "allowEmptyValue": true, "schema": {"type": "string", "description": "Return the state of the respective resources at that time [now]", "example": "1996-12-19T16:39:57-08:00", "format": "date-time"}, "example": "1996-12-19T16:39:57-08:00"}], "responses": {"200": {"description": "OK response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/OrderListRT"}, "example": {"at-time": "1996-12-19T16:39:57-08:00", "links": {"first": "https://api.com/foo/...", "next": "https://api.com/foo/...", "self": "https://api.com/foo/..."}, "orders": [{"account-id": "2022-01-01", "finished-at": "2022-01-01", "id": "cayp:order:123e4567-e89b-12d3-a456-426614174000", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Et quia quis ut quia."}, "name": "Fire risk for Lot2", "ordered-at": "2022-01-01", "service-id": "2022-01-01", "started-at": "2022-01-01", "status": "pending"}, {"account-id": "2022-01-01", "finished-at": "2022-01-01", "id": "cayp:order:123e4567-e89b-12d3-a456-426614174000", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Et quia quis ut quia."}, "name": "Fire risk for Lot2", "ordered-at": "2022-01-01", "service-id": "2022-01-01", "started-at": "2022-01-01", "status": "pending"}, {"account-id": "2022-01-01", "finished-at": "2022-01-01", "id": "cayp:order:123e4567-e89b-12d3-a456-426614174000", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Et quia quis ut quia."}, "name": "Fire risk for Lot2", "ordered-at": "2022-01-01", "service-id": "2022-01-01", "started-at": "2022-01-01", "status": "pending"}, {"account-id": "2022-01-01", "finished-at": "2022-01-01", "id": "cayp:order:123e4567-e89b-12d3-a456-426614174000", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Et quia quis ut quia."}, "name": "Fire risk for Lot2", "ordered-at": "2022-01-01", "service-id": "2022-01-01", "started-at": "2022-01-01", "status": "pending"}]}}}}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}, "example": {"id": "123e4567-e89b-12d3-a456-426614174000", "message": "Eius voluptatibus tempore assumenda et qui accusantium."}}}}, "422": {"description": "invalid-parameter: Request contained semantically wrong parameter value", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidParameterValue"}, "example": {"message": "Modi inventore voluptatem.", "name": "Vel et voluptas voluptatem ea.", "value": "Et ut et."}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}, "example": {"message": "Porro minima qui ut cumque quia."}}}}}, "security": [{"jwt_header_Authorization": ["consumer:read"]}]}, "post": {"tags": ["order"], "summary": "create order", "description": "Create a new orders and return its status.", "operationId": "order#create", "requestBody": {"description": "New orders description", "required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/OrderRequestT"}, "example": {"name": "Fire risk for Lot2", "parameters": [{"name": "region", "value": "Upper Valley"}, {"name": "threshold", "value": "10"}], "policy-id": "urn:ivcap:policy:123e4567-e89b-12d3-a456-426614174000", "service-id": "urn:ivcap:service:123e4567-e89b-12d3-a456-426614174000", "tags": ["tag1", "tag2"]}}}}, "responses": {"200": {"description": "OK response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/OrderStatusRT"}, "example": {"account": {"id": "http://christiansen.org/ned", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Et quia quis ut quia."}}, "finished-at": "2023-03-17T04:57:00Z", "id": "123e4567-e89b-12d3-a456-426614174000", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Et quia quis ut quia."}, "name": "Fire risk for Lot2", "ordered-at": "2023-03-17T04:57:00Z", "parameters": [{"name": "region", "value": "Upper Valley"}, {"name": "threshold", "value": "10"}], "product-links": {"first": "https://api.com/foo/...", "next": "https://api.com/foo/...", "self": "https://api.com/foo/..."}, "products": [{"href": "https:/.../1/artifacts/0000-00001220", "mime-type": "image/geo+tiff", "name": "fire risk map", "size": 1234963}], "service": {"id": "http://christiansen.org/ned", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Et quia quis ut quia."}}, "started-at": "2023-03-17T04:57:00Z", "status": "scheduled", "tags": ["tag1", "tag2"]}}}}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}, "example": {"id": "123e4567-e89b-12d3-a456-426614174000", "message": "Et id harum iste dolores esse quibusdam."}}}}, "404": {"description": "not-found:  not found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ResourceNotFoundT"}, "example": {"id": "cayp:type:123e4567-e89b-12d3-a456-426614174000", "message": "Resource 123...00 not found"}}}}, "422": {"description": "invalid-parameter: Request contained semantically wrong parameter value", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidParameterValue"}, "example": {"message": "Veritatis dolorum.", "name": "Qui omnis minus illum nisi dolorum.", "value": "Eum et voluptas vitae qui."}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}, "example": {"message": "Minus sed sit expedita enim."}}}}, "503": {"description": "not-available: service currently not available"}}, "security": [{"jwt_header_Authorization": ["consumer:write"]}]}}, "/1/orders/logs": {"post": {"tags": ["order"], "summary": "logs order", "description": "download order logs", "operationId": "order#logs", "requestBody": {"description": "Download orders request", "required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/DownloadLogRequestT"}, "example": {"container-name": "main", "from": 1257894000, "namespace-name": "ivcap-develop-runner", "order-id": "urn:ivcap:order:123e4567-e89b-12d3-a456-426614174000", "policy-id": "urn:ivcap:policy:123e4567-e89b-12d3-a456-426614174000", "to": 1257894000}}}}, "responses": {"200": {"description": "OK response.", "content": {"application/json": {"schema": {"type": "string", "format": "binary"}}}}, "400": {"description": "invalid-credential: Provided credential is not valid", "content": {"application/json": {"schema": {"type": "string", "format": "binary"}}}}, "401": {"description": "not-authorized: unauthorized access request", "content": {"application/json": {"schema": {"type": "string", "format": "binary"}}}}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}, "example": {"id": "123e4567-e89b-12d3-a456-426614174000", "message": "Nemo occaecati amet et consectetur."}}}}, "404": {"description": "not-found:  not found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ResourceNotFoundT"}, "example": {"id": "cayp:type:123e4567-e89b-12d3-a456-426614174000", "message": "Resource 123...00 not found"}}}}, "422": {"description": "invalid-parameter: Request contained semantically wrong parameter value", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidParameterValue"}, "example": {"message": "Eligendi perspiciatis fugiat repudiandae mollitia aliquam labore.", "name": "Molestiae minima sint.", "value": "Praesentium autem quis sit inventore et."}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}, "example": {"message": "Voluptas doloribus optio."}}}}}, "security": [{"jwt_header_Authorization": ["consumer:read"]}]}}, "/1/orders/top": {"post": {"tags": ["order"], "summary": "top order", "description": "top order resources", "operationId": "order#top", "requestBody": {"description": "orders order request", "required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/OrderTopRequestT"}, "example": {"namespace-name": "ivcap-develop-runner", "order-id": "urn:ivcap:order:123e4567-e89b-12d3-a456-426614174000", "policy-id": "urn:ivcap:policy:123e4567-e89b-12d3-a456-426614174000"}}}}, "responses": {"200": {"description": "OK response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/OrderTopResultItemCollection"}, "example": [{"container": "Aliquam sit error fuga.", "cpu": "Neque odio officia voluptas.", "ephemeral-storage": "Itaque eaque et accusantium sunt.", "memory": "Doloremque unde similique sequi.", "storage": "Eveniet eos incidunt rerum."}, {"container": "Aliquam sit error fuga.", "cpu": "Neque odio officia voluptas.", "ephemeral-storage": "Itaque eaque et accusantium sunt.", "memory": "Doloremque unde similique sequi.", "storage": "Eveniet eos incidunt rerum."}, {"container": "Aliquam sit error fuga.", "cpu": "Neque odio officia voluptas.", "ephemeral-storage": "Itaque eaque et accusantium sunt.", "memory": "Doloremque unde similique sequi.", "storage": "Eveniet eos incidunt rerum."}]}}}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}, "example": {"id": "123e4567-e89b-12d3-a456-426614174000", "message": "Numquam repudiandae est laudantium odio exercitationem."}}}}, "404": {"description": "not-found:  not found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ResourceNotFoundT"}, "example": {"id": "cayp:type:123e4567-e89b-12d3-a456-426614174000", "message": "Resource 123...00 not found"}}}}, "422": {"description": "invalid-parameter: Request contained semantically wrong parameter value", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidParameterValue"}, "example": {"message": "Quis fugiat.", "name": "Nostrum ex.", "value": "Laborum qui."}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}, "example": {"message": "Odit et doloremque esse dolorem laudantium."}}}}}, "security": [{"jwt_header_Authorization": ["consumer:read"]}]}}, "/1/orders/{id}": {"get": {"tags": ["order"], "summary": "read order", "description": "Show orders by ID", "operationId": "order#read", "parameters": [{"name": "id", "in": "path", "description": "ID of orders to show", "required": true, "schema": {"type": "string", "description": "ID of orders to show", "example": "type:scope:name"}, "example": "type:scope:name"}], "responses": {"200": {"description": "OK response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/OrderStatusRT"}, "example": {"account": {"id": "http://christiansen.org/ned", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Et quia quis ut quia."}}, "finished-at": "2023-03-17T04:57:00Z", "id": "123e4567-e89b-12d3-a456-426614174000", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Et quia quis ut quia."}, "name": "Fire risk for Lot2", "ordered-at": "2023-03-17T04:57:00Z", "parameters": [{"name": "region", "value": "Upper Valley"}, {"name": "threshold", "value": "10"}], "product-links": {"first": "https://api.com/foo/...", "next": "https://api.com/foo/...", "self": "https://api.com/foo/..."}, "products": [{"href": "https:/.../1/artifacts/0000-00001220", "mime-type": "image/geo+tiff", "name": "fire risk map", "size": 1234963}], "service": {"id": "http://christiansen.org/ned", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Et quia quis ut quia."}}, "started-at": "2023-03-17T04:57:00Z", "status": "scheduled", "tags": ["tag1", "tag2"]}}}}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}, "example": {"id": "123e4567-e89b-12d3-a456-426614174000", "message": "Quod porro quaerat deleniti aut et aspernatur."}}}}, "404": {"description": "not-found: orders not found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ResourceNotFoundT"}, "example": {"id": "cayp:type:123e4567-e89b-12d3-a456-426614174000", "message": "Resource 123...00 not found"}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}, "example": {"message": "Aliquam est exercitationem optio fugiat autem."}}}}}, "security": [{"jwt_header_Authorization": ["consumer:read"]}]}}, "/1/services": {"get": {"tags": ["service"], "summary": "list service", "description": "list services", "operationId": "service#list", "parameters": [{"name": "limit", "in": "query", "description": "The $limit system query option requests the number of items in the queried\n\t\t\t\tcollection to be included in the result.", "allowEmptyValue": true, "schema": {"type": "integer", "description": "The $limit system query option requests the number of items in the queried\n\t\t\t\tcollection to be included in the result.", "default": 10, "example": 10, "minimum": 1, "maximum": 50}, "example": 10}, {"name": "page", "in": "query", "description": "The content of 'page' is returned in the 'links' part of a previous query and\n\t\t\t\twill when set, ALL other parameters, except for 'limit' are ignored.", "allowEmptyValue": true, "schema": {"type": "string", "description": "The content of 'page' is returned in the 'links' part of a previous query and\n\t\t\t\twill when set, ALL other parameters, except for 'limit' are ignored.", "example": "gdsgQwhdgd"}, "example": "gdsgQwhdgd"}, {"name": "filter", "in": "query", "description": "The 'filter' system query option allows clients to filter a collection of\n\t\t\t\tresources that are addressed by a request URL. The expression specified with 'filter'\n\t\t\t\tis evaluated for each resource in the collection, and only items where the expression\n\t\t\t\tevaluates to true are included in the response.", "allowEmptyValue": true, "schema": {"type": "string", "description": "The 'filter' system query option allows clients to filter a collection of\n\t\t\t\tresources that are addressed by a request URL. The expression specified with 'filter'\n\t\t\t\tis evaluated for each resource in the collection, and only items where the expression\n\t\t\t\tevaluates to true are included in the response.", "example": "name ~= 'Scott%'"}, "example": "name ~= 'Scott%'"}, {"name": "order-by", "in": "query", "description": "The 'orderby' query option allows clients to request resources in either\n\t\t\t\tascending order using asc or descending order using desc. If asc or desc not specified,\n\t\t\t\tthen the resources will be ordered in ascending order. The request below orders Trips on\n\t\t\t\tproperty EndsAt in descending order.", "allowEmptyValue": true, "schema": {"type": "string", "description": "The 'orderby' query option allows clients to request resources in either\n\t\t\t\tascending order using asc or descending order using desc. If asc or desc not specified,\n\t\t\t\tthen the resources will be ordered in ascending order. The request below orders Trips on\n\t\t\t\tproperty EndsAt in descending order.", "example": "orderby=EndsAt"}, "example": "orderby=EndsAt"}, {"name": "order-desc", "in": "query", "description": "When set order result in descending order. Ascending order is the default.", "allowEmptyValue": true, "schema": {"type": "boolean", "description": "When set order result in descending order. Ascending order is the default.", "default": false, "example": false}, "example": false}, {"name": "at-time", "in": "query", "description": "Return the state of the respective resources at that time [now]", "allowEmptyValue": true, "schema": {"type": "string", "description": "Return the state of the respective resources at that time [now]", "example": "1996-12-19T16:39:57-08:00", "format": "date-time"}, "example": "1996-12-19T16:39:57-08:00"}], "responses": {"200": {"description": "OK response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ServiceListRT"}, "example": {"at-time": "1996-12-19T16:39:57-08:00", "links": {"first": "https://api.com/foo/...", "next": "https://api.com/foo/...", "self": "https://api.com/foo/..."}, "services": [{"description": "Some lengthy description of fire risk", "id": "service:acme:oracle", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Et quia quis ut quia."}, "name": "Fire risk for region"}, {"description": "Some lengthy description of fire risk", "id": "service:acme:oracle", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Et quia quis ut quia."}, "name": "Fire risk for region"}, {"description": "Some lengthy description of fire risk", "id": "service:acme:oracle", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Et quia quis ut quia."}, "name": "Fire risk for region"}, {"description": "Some lengthy description of fire risk", "id": "service:acme:oracle", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Et quia quis ut quia."}, "name": "Fire risk for region"}]}}}}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}, "example": {"id": "123e4567-e89b-12d3-a456-426614174000", "message": "Magnam accusamus enim omnis est."}}}}, "422": {"description": "invalid-parameter: Request contained semantically wrong parameter value", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidParameterValue"}, "example": {"message": "Nulla iure illum.", "name": "Modi temporibus eum quo corporis qui molestiae.", "value": "Minus dignissimos fuga facere minus."}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}, "example": {"message": "Eum rerum."}}}}}, "security": [{"jwt_header_Authorization": ["consumer:read"]}]}, "post": {"tags": ["service"], "summary": "create_service service", "description": "Create a new services and return its status.", "operationId": "service#create_service", "requestBody": {"description": "New services description", "required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ServiceDescriptionT"}, "example": {"banner": "http://oreilly.net/sylvan.gutkowski", "description": "This service ...", "metadata": [{"name": "Magnam repellendus nihil.", "value": "In sint tenetur repellat reprehenderit ea."}, {"name": "Magnam repellendus nihil.", "value": "In sint tenetur repellat reprehenderit ea."}, {"name": "Magnam repellendus nihil.", "value": "In sint tenetur repellat reprehenderit ea."}, {"name": "Magnam repellendus nihil.", "value": "In sint tenetur repellat reprehenderit ea."}], "name": "Fire risk for Lot2", "parameters": [{"description": "The name of the region as according to ...", "label": "Region Name", "name": "region", "type": "string"}, {"label": "Rainfall/month threshold", "name": "threshold", "type": "float", "unit": "m"}], "policy-id": "Repudiandae non corporis.", "references": [{"title": "Corrupti placeat iusto illo voluptate.", "uri": "http://millsparisian.info/dixie.rice"}, {"title": "Corrupti placeat iusto illo voluptate.", "uri": "http://millsparisian.info/dixie.rice"}, {"title": "Corrupti placeat iusto illo voluptate.", "uri": "http://millsparisian.info/dixie.rice"}], "tags": ["tag1", "tag2"], "workflow": {"argo": "Magni repellat nulla sunt.", "basic": {"command": ["/bin/sh", "-c", "echo $PATH"], "cpu": {"limit": "100m", "request": "10m"}, "ephemeral-storage": {"limit": "4Gi", "request": "2Gi"}, "image": "alpine", "memory": {"limit": "100Mi", "request": "10Mi"}}, "opts": "Architecto sint.", "type": "basic"}}}}}, "responses": {"201": {"description": "Created response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ServiceStatusRT"}, "example": {"account": {"id": "http://christiansen.org/ned", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Et quia quis ut quia."}}, "description": "This service ...", "id": "service:acme:oracle", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Et quia quis ut quia."}, "metadata": [{"name": "Ut magni voluptatem quae nemo numquam dolorem.", "value": "Commodi repellat omnis perspiciatis."}, {"name": "Ut magni voluptatem quae nemo numquam dolorem.", "value": "Commodi repellat omnis perspiciatis."}, {"name": "Ut magni voluptatem quae nemo numquam dolorem.", "value": "Commodi repellat omnis perspiciatis."}, {"name": "Ut magni voluptatem quae nemo numquam dolorem.", "value": "Commodi repellat omnis perspiciatis."}], "name": "Fire risk for Lot2", "parameters": [{"description": "The name of the region as according to ...", "label": "Region Name", "name": "region", "type": "string"}, {"label": "Rainfall/month threshold", "name": "threshold", "type": "float", "unit": "m"}], "status": "error", "tags": ["tag1", "tag2"]}}}}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}, "example": {"id": "123e4567-e89b-12d3-a456-426614174000", "message": "Voluptatem eligendi."}}}}, "404": {"description": "not-found:  not found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ResourceNotFoundT"}, "example": {"id": "cayp:type:123e4567-e89b-12d3-a456-426614174000", "message": "Resource 123...00 not found"}}}}, "409": {"description": "already-created: Resource already exists", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ResourceNotFoundT"}, "example": {"id": "cayp:type:123e4567-e89b-12d3-a456-426614174000", "message": "Resource 123...00 already exists"}}}}, "422": {"description": "invalid-parameter: Request contained semantically wrong parameter value", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidParameterValue"}, "example": {"message": "Rerum tempora optio.", "name": "Cupiditate est omnis quo aut neque numquam.", "value": "Reiciendis nulla et enim blanditiis."}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}, "example": {"message": "Est quaerat esse."}}}}}, "security": [{"jwt_header_Authorization": ["consumer:write"]}]}}, "/1/services/{id}": {"delete": {"tags": ["service"], "summary": "delete service", "description": "Delete an existing services.", "operationId": "service#delete", "parameters": [{"name": "id", "in": "path", "description": "ID of services to update", "required": true, "schema": {"type": "string", "description": "ID of services to update", "example": "Ut ullam."}, "example": "Nihil quis commodi."}], "responses": {"204": {"description": "No Content response."}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}, "example": {"id": "123e4567-e89b-12d3-a456-426614174000", "message": "Tempore vel quos ut."}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}, "example": {"message": "Harum voluptatibus quo."}}}}}, "security": [{"jwt_header_Authorization": ["consumer:write"]}]}, "get": {"tags": ["service"], "summary": "read service", "description": "Show services by ID", "operationId": "service#read", "parameters": [{"name": "id", "in": "path", "description": "ID of services to show", "required": true, "schema": {"type": "string", "description": "ID of services to show", "example": "type:scope:name"}, "example": "type:scope:name"}], "responses": {"200": {"description": "OK response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ServiceStatusRT"}, "example": {"account": {"id": "http://christiansen.org/ned", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Et quia quis ut quia."}}, "description": "This service ...", "id": "service:acme:oracle", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Et quia quis ut quia."}, "metadata": [{"name": "Ut magni voluptatem quae nemo numquam dolorem.", "value": "Commodi repellat omnis perspiciatis."}, {"name": "Ut magni voluptatem quae nemo numquam dolorem.", "value": "Commodi repellat omnis perspiciatis."}], "name": "Fire risk for Lot2", "parameters": [{"description": "The name of the region as according to ...", "label": "Region Name", "name": "region", "type": "string"}, {"label": "Rainfall/month threshold", "name": "threshold", "type": "float", "unit": "m"}], "status": "error", "tags": ["tag1", "tag2"]}}}}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}, "example": {"id": "123e4567-e89b-12d3-a456-426614174000", "message": "Minima non."}}}}, "404": {"description": "not-found: services not found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ResourceNotFoundT"}, "example": {"id": "cayp:type:123e4567-e89b-12d3-a456-426614174000", "message": "Resource 123...00 not found"}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}, "example": {"message": "Quos voluptate sit repellat nemo recusandae."}}}}}, "security": [{"jwt_header_Authorization": ["consumer:read"]}]}, "put": {"tags": ["service"], "summary": "update service", "description": "Update an existing services and return its status.", "operationId": "service#update", "parameters": [{"name": "force-create", "in": "query", "description": "Create if not already exist", "allowEmptyValue": true, "schema": {"type": "boolean", "description": "Create if not already exist", "example": true}, "example": false}, {"name": "id", "in": "path", "description": "ID of services to update", "required": true, "schema": {"type": "string", "description": "ID of services to update", "example": "Eaque quia voluptate quo."}, "example": "Quis quos est eos mollitia."}], "requestBody": {"description": "Updated services description", "required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ServiceDescriptionT"}, "example": {"banner": "http://koelpin.info/isaias.jakubowski", "description": "This service ...", "metadata": [{"name": "Magnam repellendus nihil.", "value": "In sint tenetur repellat reprehenderit ea."}, {"name": "Magnam repellendus nihil.", "value": "In sint tenetur repellat reprehenderit ea."}], "name": "Fire risk for Lot2", "parameters": [{"description": "The name of the region as according to ...", "label": "Region Name", "name": "region", "type": "string"}, {"label": "Rainfall/month threshold", "name": "threshold", "type": "float", "unit": "m"}], "policy-id": "Exercitationem repellat dolorem in molestiae laboriosam ut.", "references": [{"title": "Corrupti placeat iusto illo voluptate.", "uri": "http://millsparisian.info/dixie.rice"}, {"title": "Corrupti placeat iusto illo voluptate.", "uri": "http://millsparisian.info/dixie.rice"}], "tags": ["tag1", "tag2"], "workflow": {"argo": "Magni repellat nulla sunt.", "basic": {"command": ["/bin/sh", "-c", "echo $PATH"], "cpu": {"limit": "100m", "request": "10m"}, "ephemeral-storage": {"limit": "4Gi", "request": "2Gi"}, "image": "alpine", "memory": {"limit": "100Mi", "request": "10Mi"}}, "opts": "Architecto sint.", "type": "basic"}}}}}, "responses": {"200": {"description": "OK response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ServiceStatusRT"}, "example": {"account": {"id": "http://christiansen.org/ned", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Et quia quis ut quia."}}, "description": "This service ...", "id": "service:acme:oracle", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Et quia quis ut quia."}, "metadata": [{"name": "Ut magni voluptatem quae nemo numquam dolorem.", "value": "Commodi repellat omnis perspiciatis."}, {"name": "Ut magni voluptatem quae nemo numquam dolorem.", "value": "Commodi repellat omnis perspiciatis."}], "name": "Fire risk for Lot2", "parameters": [{"description": "The name of the region as according to ...", "label": "Region Name", "name": "region", "type": "string"}, {"label": "Rainfall/month threshold", "name": "threshold", "type": "float", "unit": "m"}], "status": "error", "tags": ["tag1", "tag2"]}}}}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}, "example": {"id": "123e4567-e89b-12d3-a456-426614174000", "message": "Delectus omnis est ea consequatur occaecati nulla."}}}}, "404": {"description": "not-found:  not found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ResourceNotFoundT"}, "example": {"id": "cayp:type:123e4567-e89b-12d3-a456-426614174000", "message": "Resource 123...00 not found"}}}}, "422": {"description": "invalid-parameter: Request contained semantically wrong parameter value", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidParameterValue"}, "example": {"message": "Dicta amet.", "name": "Quia quisquam reiciendis quis nam natus.", "value": "Facere sed quia saepe."}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}, "example": {"message": "Laudantium ex vel error consequatur."}}}}}, "security": [{"jwt_header_Authorization": ["consumer:write"]}]}}}, "components": {"schemas": {"AddMetaRT": {"type": "object", "properties": {"record-id": {"type": "string", "description": "Reference to record created", "example": "urn:ivcap:record.123e4567-e89b-12d3-a456-426614174000", "format": "uri"}}, "example": {"record-id": "urn:ivcap:record.123e4567-e89b-12d3-a456-426614174000"}, "required": ["record-id"]}, "ArtifactListItem": {"type": "object", "properties": {"id": {"type": "string", "description": "Artifact ID", "example": "cayp:artifact:0000-000"}, "links": {"$ref": "#/components/schemas/SelfT"}, "mime-type": {"type": "string", "description": "Mime (content) type of artifact", "example": "image/jpeg"}, "name": {"type": "string", "description": "Optional name", "example": "Fire risk for Lot2"}, "size": {"type": "integer", "description": "Size of artifact in bytes", "example": 19000, "format": "int64"}, "status": {"type": "string", "description": "Artifact status", "example": "ready", "enum": ["pending", "partial", "ready", "error", "unknown"]}}, "example": {"id": "cayp:artifact:0000-000", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Et quia quis ut quia."}, "mime-type": "image/jpeg", "name": "Fire risk for Lot2", "size": 19000, "status": "ready"}, "required": ["links"]}, "ArtifactListRT": {"type": "object", "properties": {"artifacts": {"type": "array", "items": {"$ref": "#/components/schemas/ArtifactListItem"}, "description": "Artifacts", "example": [{"id": "cayp:artifact:0000-000", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Et quia quis ut quia."}, "mime-type": "image/jpeg", "name": "Fire risk for Lot2", "size": 19000, "status": "ready"}, {"id": "cayp:artifact:0000-000", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Et quia quis ut quia."}, "mime-type": "image/jpeg", "name": "Fire risk for Lot2", "size": 19000, "status": "ready"}, {"id": "cayp:artifact:0000-000", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Et quia quis ut quia."}, "mime-type": "image/jpeg", "name": "Fire risk for Lot2", "size": 19000, "status": "ready"}]}, "at-time": {"type": "string", "description": "Time at which this list was valid", "example": "1996-12-19T16:39:57-08:00", "format": "date-time"}, "links": {"$ref": "#/components/schemas/NavT"}}, "example": {"artifacts": [{"id": "cayp:artifact:0000-000", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Et quia quis ut quia."}, "mime-type": "image/jpeg", "name": "Fire risk for Lot2", "size": 19000, "status": "ready"}, {"id": "cayp:artifact:0000-000", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Et quia quis ut quia."}, "mime-type": "image/jpeg", "name": "Fire risk for Lot2", "size": 19000, "status": "ready"}, {"id": "cayp:artifact:0000-000", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Et quia quis ut quia."}, "mime-type": "image/jpeg", "name": "Fire risk for Lot2", "size": 19000, "status": "ready"}], "at-time": "1996-12-19T16:39:57-08:00", "links": {"first": "https://api.com/foo/...", "next": "https://api.com/foo/...", "self": "https://api.com/foo/..."}}, "required": ["artifacts", "links"]}, "ArtifactStatusRT": {"type": "object", "properties": {"account": {"$ref": "#/components/schemas/RefT"}, "cache-of": {"type": "string", "description": "URL of object this artifact is caching", "example": "Quia cum omnis animi animi."}, "created-at": {"type": "string", "description": "DateTime artifact was created", "example": "2022-01-01"}, "data": {"$ref": "#/components/schemas/SelfT"}, "etag": {"type": "string", "description": "ETAG of artifact", "example": "Molestiae et quis et ut necessitatibus."}, "id": {"type": "string", "description": "Artifact ID", "example": "type:scope:name"}, "last-modified-at": {"type": "string", "description": "DateTime artifact was last modified", "example": "2022-01-01"}, "links": {"$ref": "#/components/schemas/SelfT"}, "location": {"type": "string", "description": "link back to record", "example": "Quam est."}, "mime-type": {"type": "string", "description": "Mime-type of data", "example": "Hic qui quis natus assumenda quod."}, "name": {"type": "string", "description": "Optional name", "example": "Fire risk per LGA"}, "policy": {"$ref": "#/components/schemas/RefT"}, "size": {"type": "integer", "description": "Size of data", "example": 5247822826158330147, "format": "int64"}, "status": {"type": "string", "description": "Artifact status", "example": "partial", "enum": ["pending", "partial", "ready", "error", "unknown"]}, "tus-offset": {"type": "integer", "description": "TUS offset for partially uploaded content", "example": 3577612353945949418, "format": "int64"}, "tus-resumable": {"type": "string", "description": "indicate version of TUS supported", "example": "Illo ut eum quae sint."}}, "example": {"account": {"id": "http://christiansen.org/ned", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Et quia quis ut quia."}}, "cache-of": "Ea ut voluptas harum libero.", "created-at": "2022-01-01", "data": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Et quia quis ut quia."}, "etag": "Eius eaque voluptas quibusdam et.", "id": "type:scope:name", "last-modified-at": "2022-01-01", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Et quia quis ut quia."}, "location": "Hic atque in quam quam voluptatem est.", "mime-type": "Modi hic et eos dolorum.", "name": "Fire risk per LGA", "policy": {"id": "http://christiansen.org/ned", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Et quia quis ut quia."}}, "size": 5474929776481795908, "status": "pending", "tus-offset": 3322462508349660558, "tus-resumable": "Deserunt recusandae et ut."}, "required": ["id", "status", "links"]}, "AspectIDRT": {"type": "object", "properties": {"id": {"type": "string", "description": "ID to specific aspect", "example": "urn:ivcap:aspect#123e4567-e89b-12d3-a456-426614174000", "format": "uri"}}, "example": {"id": "urn:ivcap:aspect#123e4567-e89b-12d3-a456-426614174000"}, "required": ["id"]}, "AspectListItemRT": {"type": "object", "properties": {"content": {"type": "string", "description": "Attached aspect aspect", "example": "{...}", "format": "binary"}, "content-type": {"type": "string", "description": "Content-Type header, MUST be of application/json.", "example": "application/json"}, "entity": {"type": "string", "description": "Entity URN", "example": "urn:blue:transect.1", "format": "uri"}, "id": {"type": "string", "description": "Record URN", "example": "urn:ivcap:aspect#123e4567-e89b-12d3-a456-426614174000", "format": "uri"}, "schema": {"type": "string", "description": "Schema URN", "example": "urn:blue:schema.image", "format": "uri"}}, "example": {"content": "{...}", "content-type": "application/json", "entity": "urn:blue:transect.1", "id": "urn:ivcap:aspect#123e4567-e89b-12d3-a456-426614174000", "schema": "urn:blue:schema.image"}, "required": ["id", "entity", "schema", "content", "content-type"]}, "AspectListRT": {"type": "object", "properties": {"aspect-path": {"type": "string", "description": "Optional json path to further filter on returned list", "example": "Et at delectus."}, "at-time": {"type": "string", "description": "Time at which this list was valid", "example": "1996-12-19T16:39:57-08:00", "format": "date-time"}, "entity": {"type": "string", "description": "Entity for which to request aspect", "example": "urn:blue:image.collA.12", "format": "uri"}, "items": {"type": "array", "items": {"$ref": "#/components/schemas/AspectListItemRT"}, "description": "List of aspect descriptions", "example": [{"content": "{...}", "content-type": "application/json", "entity": "urn:blue:transect.1", "id": "urn:ivcap:aspect#123e4567-e89b-12d3-a456-426614174000", "schema": "urn:blue:schema.image"}, {"content": "{...}", "content-type": "application/json", "entity": "urn:blue:transect.1", "id": "urn:ivcap:aspect#123e4567-e89b-12d3-a456-426614174000", "schema": "urn:blue:schema.image"}, {"content": "{...}", "content-type": "application/json", "entity": "urn:blue:transect.1", "id": "urn:ivcap:aspect#123e4567-e89b-12d3-a456-426614174000", "schema": "urn:blue:schema.image"}, {"content": "{...}", "content-type": "application/json", "entity": "urn:blue:transect.1", "id": "urn:ivcap:aspect#123e4567-e89b-12d3-a456-426614174000", "schema": "urn:blue:schema.image"}]}, "links": {"$ref": "#/components/schemas/NavT"}, "schema": {"type": "string", "description": "Optional schema to filter on", "example": "urn:blue:image,urn:blue:location", "format": "uri"}}, "example": {"aspect-path": "Corporis non inventore quas voluptas consequatur sint.", "at-time": "1996-12-19T16:39:57-08:00", "entity": "urn:blue:image.collA.12", "items": [{"content": "{...}", "content-type": "application/json", "entity": "urn:blue:transect.1", "id": "urn:ivcap:aspect#123e4567-e89b-12d3-a456-426614174000", "schema": "urn:blue:schema.image"}, {"content": "{...}", "content-type": "application/json", "entity": "urn:blue:transect.1", "id": "urn:ivcap:aspect#123e4567-e89b-12d3-a456-426614174000", "schema": "urn:blue:schema.image"}, {"content": "{...}", "content-type": "application/json", "entity": "urn:blue:transect.1", "id": "urn:ivcap:aspect#123e4567-e89b-12d3-a456-426614174000", "schema": "urn:blue:schema.image"}, {"content": "{...}", "content-type": "application/json", "entity": "urn:blue:transect.1", "id": "urn:ivcap:aspect#123e4567-e89b-12d3-a456-426614174000", "schema": "urn:blue:schema.image"}], "links": {"first": "https://api.com/foo/...", "next": "https://api.com/foo/...", "self": "https://api.com/foo/..."}, "schema": "urn:blue:image,urn:blue:location"}, "required": ["items", "at-time", "links"]}, "AspectRT": {"type": "object", "properties": {"asserter": {"type": "string", "description": "Entity asserting this aspect aspect at 'valid-from'", "example": "urn:..."}, "content": {"type": "string", "description": "Description of aspect encoded as 'content-type'", "example": "{...}", "format": "binary"}, "content-type": {"type": "string", "description": "Content-Type header, MUST be of application/json.", "example": "application/json"}, "entity": {"type": "string", "description": "Entity URN", "example": "urn:blue:transect.1", "format": "uri"}, "id": {"type": "string", "description": "Record URN", "example": "urn:ivcap:aspect#123e4567-e89b-12d3-a456-426614174000", "format": "uri"}, "retracter": {"type": "string", "description": "Entity retracting this aspect at 'valid-to'", "example": "urn:..."}, "schema": {"type": "string", "description": "Schema URN", "example": "urn:blue:schema.image", "format": "uri"}, "valid-from": {"type": "string", "description": "Time this aspect was asserted", "example": "1996-12-19T16:39:57-08:00", "format": "date-time"}, "valid-to": {"type": "string", "description": "Time this aspect was retractd", "example": "1996-12-19T16:39:57-08:00", "format": "date-time"}}, "example": {"asserter": "urn:...", "content": "{...}", "content-type": "application/json", "entity": "urn:blue:transect.1", "id": "urn:ivcap:aspect#123e4567-e89b-12d3-a456-426614174000", "retracter": "urn:...", "schema": "urn:blue:schema.image", "valid-from": "1996-12-19T16:39:57-08:00", "valid-to": "1996-12-19T16:39:57-08:00"}}, "BasicWorkflowOptsT": {"type": "object", "properties": {"command": {"type": "array", "items": {"type": "string", "example": "Labore reiciendis."}, "description": "Command to start the container - needed for some container runtimes", "example": ["/bin/sh", "-c", "echo $PATH"]}, "cpu": {"$ref": "#/components/schemas/ResourceMemoryT"}, "ephemeral-storage": {"$ref": "#/components/schemas/ResourceMemoryT"}, "image": {"type": "string", "description": "container image name", "example": "alpine"}, "memory": {"$ref": "#/components/schemas/ResourceMemoryT"}}, "example": {"command": ["/bin/sh", "-c", "echo $PATH"], "cpu": {"limit": "100m", "request": "10m"}, "ephemeral-storage": {"limit": "4Gi", "request": "2Gi"}, "image": "alpine", "memory": {"limit": "100Mi", "request": "10Mi"}}, "required": ["image", "command"]}, "DescribedByT": {"type": "object", "properties": {"href": {"type": "string", "example": "https://api.com/swagger/...", "format": "uri"}, "type": {"type": "string", "example": "application/openapi3+json"}}, "example": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}}, "DownloadLogRequestT": {"type": "object", "properties": {"container-name": {"type": "string", "description": "Reference to container name", "example": "main"}, "from": {"type": "integer", "description": "From unix time, seconds since 1970-01-01", "example": 1257894000, "format": "int64"}, "namespace-name": {"type": "string", "description": "Reference to namespace name", "example": "ivcap-develop-runner"}, "order-id": {"type": "string", "description": "Reference to order requested", "example": "urn:ivcap:order:123e4567-e89b-12d3-a456-426614174000", "format": "uri"}, "policy-id": {"type": "string", "description": "Policy to control access to record an all generated artifacts", "example": "urn:ivcap:policy:123e4567-e89b-12d3-a456-426614174000", "format": "uri"}, "to": {"type": "integer", "description": "To unix time, seconds since 1970-01-01", "example": 1257894000, "format": "int64"}}, "example": {"container-name": "main", "from": 1257894000, "namespace-name": "ivcap-develop-runner", "order-id": "urn:ivcap:order:123e4567-e89b-12d3-a456-426614174000", "policy-id": "urn:ivcap:policy:123e4567-e89b-12d3-a456-426614174000", "to": 1257894000}, "required": ["order-id"]}, "InvalidParameterValue": {"type": "object", "properties": {"message": {"type": "string", "description": "message describing expected type or pattern.", "example": "Nostrum voluptas saepe impedit est qui."}, "name": {"type": "string", "description": "name of parameter.", "example": "Voluptatem deleniti et modi non non."}, "value": {"type": "string", "description": "provided parameter value.", "example": "Officia aut."}}, "description": "Invalide parameter value", "example": {"message": "Tempora iure magni nihil ut rerum.", "name": "Quam cupiditate enim harum perferendis.", "value": "Qui modi."}, "required": ["name", "message"]}, "InvalidScopesT": {"type": "object", "properties": {"id": {"type": "string", "description": "ID of involved resource", "example": "123e4567-e89b-12d3-a456-426614174000", "format": "uuid"}, "message": {"type": "string", "description": "Message of error", "default": "Not authorized to perform this action", "example": "Omnis sequi explicabo repellat rerum ut."}}, "description": "Token scopes are invalid", "example": {"id": "123e4567-e89b-12d3-a456-426614174000", "message": "Alias repellat consequatur sunt."}, "required": ["message"]}, "ListMetaRT": {"type": "object", "properties": {"aspect-path": {"type": "string", "description": "Optional json path to further filter on returned list", "example": "Consequatur accusamus ullam."}, "at-time": {"type": "string", "description": "Time at which this list was valid", "example": "1996-12-19T16:39:57-08:00", "format": "date-time"}, "entity-id": {"type": "string", "description": "Entity for which to request metadata", "example": "urn:blue:image.collA.12", "format": "uri"}, "links": {"$ref": "#/components/schemas/NavT"}, "records": {"type": "array", "items": {"$ref": "#/components/schemas/MetadataListItemRT"}, "description": "List of metadata records", "example": [{"aspect": "{...}", "aspectContext": "{...}", "entity": "urn:blue:transect.1", "record-id": "urn:ivcap:record.123e4567-e89b-12d3-a456-426614174000", "schema": "urn:blue:schema.image"}, {"aspect": "{...}", "aspectContext": "{...}", "entity": "urn:blue:transect.1", "record-id": "urn:ivcap:record.123e4567-e89b-12d3-a456-426614174000", "schema": "urn:blue:schema.image"}, {"aspect": "{...}", "aspectContext": "{...}", "entity": "urn:blue:transect.1", "record-id": "urn:ivcap:record.123e4567-e89b-12d3-a456-426614174000", "schema": "urn:blue:schema.image"}, {"aspect": "{...}", "aspectContext": "{...}", "entity": "urn:blue:transect.1", "record-id": "urn:ivcap:record.123e4567-e89b-12d3-a456-426614174000", "schema": "urn:blue:schema.image"}]}, "schema": {"type": "string", "description": "Optional schema to filter on", "example": "urn:blue:image,urn:blue:location", "format": "uri"}}, "example": {"aspect-path": "Cumque possimus temporibus cum nobis.", "at-time": "1996-12-19T16:39:57-08:00", "entity-id": "urn:blue:image.collA.12", "links": {"first": "https://api.com/foo/...", "next": "https://api.com/foo/...", "self": "https://api.com/foo/..."}, "records": [{"aspect": "{...}", "aspectContext": "{...}", "entity": "urn:blue:transect.1", "record-id": "urn:ivcap:record.123e4567-e89b-12d3-a456-426614174000", "schema": "urn:blue:schema.image"}, {"aspect": "{...}", "aspectContext": "{...}", "entity": "urn:blue:transect.1", "record-id": "urn:ivcap:record.123e4567-e89b-12d3-a456-426614174000", "schema": "urn:blue:schema.image"}], "schema": "urn:blue:image,urn:blue:location"}, "required": ["records", "links"]}, "ListRequestBody": {"type": "object", "properties": {"content-path": {"type": "string", "description": "To learn more about the supported format, see\n\t\t\t\t\thttps://www.postgresql.org/docs/current/datatype-json.html#DATATYPE-JSONPATH", "example": "$.images[*] ? (@.size > 10000)"}}, "example": {"content-path": "$.images[*] ? (@.size > 10000)"}}, "MetadataListItemRT": {"type": "object", "properties": {"aspect": {"type": "object", "description": "Attached metadata aspect", "example": "{...}"}, "aspectContext": {"type": "string", "description": "If aspectPath was defined, this is what matched the query", "example": "{...}"}, "entity": {"type": "string", "description": "Entity ID", "example": "urn:blue:transect.1", "format": "uri"}, "record-id": {"type": "string", "description": "Record ID", "example": "urn:ivcap:record.123e4567-e89b-12d3-a456-426614174000", "format": "uri"}, "schema": {"type": "string", "description": "Schema ID", "example": "urn:blue:schema.image", "format": "uri"}}, "example": {"aspect": "{...}", "aspectContext": "{...}", "entity": "urn:blue:transect.1", "record-id": "urn:ivcap:record.123e4567-e89b-12d3-a456-426614174000", "schema": "urn:blue:schema.image"}}, "MetadataRecordRT": {"type": "object", "properties": {"aspect": {"type": "string", "description": "Attached metadata aspect", "example": "{...}", "format": "binary"}, "asserter": {"type": "string", "description": "Entity asserting this metadata record at 'valid-from'", "example": "..."}, "entity": {"type": "string", "description": "Entity ID", "example": "urn:blue:transect.1", "format": "uri"}, "record-id": {"type": "string", "description": "Record ID", "example": "urn:ivcap:record.123e4567-e89b-12d3-a456-426614174000", "format": "uri"}, "revoker": {"type": "string", "description": "Entity revoking this record at 'valid-to'", "example": "...", "format": "date-time"}, "schema": {"type": "string", "description": "Schema ID", "example": "urn:blue:schema.image", "format": "uri"}, "valid-from": {"type": "string", "description": "Time this record was asserted", "example": "1996-12-19T16:39:57-08:00", "format": "date-time"}, "valid-to": {"type": "string", "description": "Time this record was revoked", "example": "1996-12-19T16:39:57-08:00", "format": "date-time"}}, "example": {"aspect": "{...}", "asserter": "...", "entity": "urn:blue:transect.1", "record-id": "urn:ivcap:record.123e4567-e89b-12d3-a456-426614174000", "revoker": "...", "schema": "urn:blue:schema.image", "valid-from": "1996-12-19T16:39:57-08:00", "valid-to": "1996-12-19T16:39:57-08:00"}}, "NavT": {"type": "object", "properties": {"first": {"type": "string", "example": "https://api.com/foo/...", "format": "uri"}, "next": {"type": "string", "example": "https://api.com/foo/...", "format": "uri"}, "self": {"type": "string", "example": "https://api.com/foo/...", "format": "uri"}}, "example": {"first": "https://api.com/foo/...", "next": "https://api.com/foo/...", "self": "https://api.com/foo/..."}}, "NotImplementedT": {"type": "object", "properties": {"message": {"type": "string", "description": "Information message", "default": "Method not implemented", "example": "Accusantium illum est veniam."}}, "description": "Method is not yet implemented", "example": {"message": "Et sit voluptas cumque voluptatibus."}, "required": ["message"]}, "OrderListItem": {"type": "object", "properties": {"account-id": {"type": "string", "description": "ID of ordered service", "example": "2022-01-01"}, "finished-at": {"type": "string", "description": "DateTime order was finished", "example": "2022-01-01"}, "id": {"type": "string", "description": "Order ID", "example": "cayp:order:123e4567-e89b-12d3-a456-426614174000"}, "links": {"$ref": "#/components/schemas/SelfT"}, "name": {"type": "string", "description": "Optional customer provided name", "example": "Fire risk for Lot2"}, "ordered-at": {"type": "string", "description": "DateTime order was placed", "example": "2022-01-01"}, "service-id": {"type": "string", "description": "ID of ordered service", "example": "2022-01-01"}, "started-at": {"type": "string", "description": "DateTime processing of order started", "example": "2022-01-01"}, "status": {"type": "string", "description": "Order status", "example": "pending", "enum": ["unknown", "pending", "scheduled", "executing", "succeeded", "failed", "error"]}}, "example": {"account-id": "2022-01-01", "finished-at": "2022-01-01", "id": "cayp:order:123e4567-e89b-12d3-a456-426614174000", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Et quia quis ut quia."}, "name": "Fire risk for Lot2", "ordered-at": "2022-01-01", "service-id": "2022-01-01", "started-at": "2022-01-01", "status": "unknown"}, "required": ["links"]}, "OrderListRT": {"type": "object", "properties": {"at-time": {"type": "string", "description": "Time at which this list was valid", "example": "1996-12-19T16:39:57-08:00", "format": "date-time"}, "links": {"$ref": "#/components/schemas/NavT"}, "orders": {"type": "array", "items": {"$ref": "#/components/schemas/OrderListItem"}, "description": "Orders", "example": [{"account-id": "2022-01-01", "finished-at": "2022-01-01", "id": "cayp:order:123e4567-e89b-12d3-a456-426614174000", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Et quia quis ut quia."}, "name": "Fire risk for Lot2", "ordered-at": "2022-01-01", "service-id": "2022-01-01", "started-at": "2022-01-01", "status": "pending"}, {"account-id": "2022-01-01", "finished-at": "2022-01-01", "id": "cayp:order:123e4567-e89b-12d3-a456-426614174000", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Et quia quis ut quia."}, "name": "Fire risk for Lot2", "ordered-at": "2022-01-01", "service-id": "2022-01-01", "started-at": "2022-01-01", "status": "pending"}, {"account-id": "2022-01-01", "finished-at": "2022-01-01", "id": "cayp:order:123e4567-e89b-12d3-a456-426614174000", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Et quia quis ut quia."}, "name": "Fire risk for Lot2", "ordered-at": "2022-01-01", "service-id": "2022-01-01", "started-at": "2022-01-01", "status": "pending"}]}}, "example": {"at-time": "1996-12-19T16:39:57-08:00", "links": {"first": "https://api.com/foo/...", "next": "https://api.com/foo/...", "self": "https://api.com/foo/..."}, "orders": [{"account-id": "2022-01-01", "finished-at": "2022-01-01", "id": "cayp:order:123e4567-e89b-12d3-a456-426614174000", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Et quia quis ut quia."}, "name": "Fire risk for Lot2", "ordered-at": "2022-01-01", "service-id": "2022-01-01", "started-at": "2022-01-01", "status": "pending"}, {"account-id": "2022-01-01", "finished-at": "2022-01-01", "id": "cayp:order:123e4567-e89b-12d3-a456-426614174000", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Et quia quis ut quia."}, "name": "Fire risk for Lot2", "ordered-at": "2022-01-01", "service-id": "2022-01-01", "started-at": "2022-01-01", "status": "pending"}]}, "required": ["orders", "at-time", "links"]}, "OrderRequestT": {"type": "object", "properties": {"name": {"type": "string", "description": "Optional customer provided name", "example": "Fire risk for Lot2"}, "parameters": {"type": "array", "items": {"$ref": "#/components/schemas/ParameterT"}, "description": "Service parameters", "example": [{"name": "region", "value": "Upper Valley"}, {"name": "threshold", "value": "10"}]}, "policy-id": {"type": "string", "description": "Policy to control access to record an all generated artifacts", "example": "urn:ivcap:policy:123e4567-e89b-12d3-a456-426614174000", "format": "uri"}, "service-id": {"type": "string", "description": "Reference to service requested", "example": "urn:ivcap:service:123e4567-e89b-12d3-a456-426614174000", "format": "uri"}, "tags": {"type": "array", "items": {"type": "string", "example": "Maxime alias deserunt."}, "description": "Optional customer provided tags", "example": ["tag1", "tag2"]}}, "example": {"name": "Fire risk for Lot2", "parameters": [{"name": "region", "value": "Upper Valley"}, {"name": "threshold", "value": "10"}], "policy-id": "urn:ivcap:policy:123e4567-e89b-12d3-a456-426614174000", "service-id": "urn:ivcap:service:123e4567-e89b-12d3-a456-426614174000", "tags": ["tag1", "tag2"]}, "required": ["service-id", "parameters"]}, "OrderStatusRT": {"type": "object", "properties": {"account": {"$ref": "#/components/schemas/RefT"}, "finished-at": {"type": "string", "description": "DateTime order processing finished", "example": "2023-03-17T04:57:00Z"}, "id": {"type": "string", "description": "Order ID", "example": "123e4567-e89b-12d3-a456-426614174000", "format": "uuid"}, "links": {"$ref": "#/components/schemas/SelfT"}, "name": {"type": "string", "description": "Optional customer provided name", "example": "Fire risk for Lot2"}, "ordered-at": {"type": "string", "description": "DateTime order was placed", "example": "2023-03-17T04:57:00Z"}, "parameters": {"type": "array", "items": {"$ref": "#/components/schemas/ParameterT"}, "description": "Service parameters", "example": [{"name": "region", "value": "Upper Valley"}, {"name": "threshold", "value": "10"}]}, "product-links": {"$ref": "#/components/schemas/NavT"}, "products": {"type": "array", "items": {"$ref": "#/components/schemas/ProductT"}, "description": "Products delivered for this order", "example": [{"href": "https:/.../1/artifacts/0000-00001220", "mime-type": "image/geo+tiff", "name": "fire risk map", "size": 1234963}]}, "service": {"$ref": "#/components/schemas/RefT"}, "started-at": {"type": "string", "description": "DateTime order processing started", "example": "2023-03-17T04:57:00Z"}, "status": {"type": "string", "description": "Order status", "example": "failed", "enum": ["unknown", "pending", "scheduled", "executing", "succeeded", "failed", "error"]}, "tags": {"type": "array", "items": {"type": "string", "example": "Porro non."}, "description": "Optional customer provided tags", "example": ["tag1", "tag2"]}}, "example": {"account": {"id": "http://christiansen.org/ned", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Et quia quis ut quia."}}, "finished-at": "2023-03-17T04:57:00Z", "id": "123e4567-e89b-12d3-a456-426614174000", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Et quia quis ut quia."}, "name": "Fire risk for Lot2", "ordered-at": "2023-03-17T04:57:00Z", "parameters": [{"name": "region", "value": "Upper Valley"}, {"name": "threshold", "value": "10"}], "product-links": {"first": "https://api.com/foo/...", "next": "https://api.com/foo/...", "self": "https://api.com/foo/..."}, "products": [{"href": "https:/.../1/artifacts/0000-00001220", "mime-type": "image/geo+tiff", "name": "fire risk map", "size": 1234963}], "service": {"id": "http://christiansen.org/ned", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Et quia quis ut quia."}}, "started-at": "2023-03-17T04:57:00Z", "status": "failed", "tags": ["tag1", "tag2"]}, "required": ["id", "parameters"]}, "OrderTopRequestT": {"type": "object", "properties": {"namespace-name": {"type": "string", "description": "Reference to namespace name", "example": "ivcap-develop-runner"}, "order-id": {"type": "string", "description": "Reference to order requested", "example": "urn:ivcap:order:123e4567-e89b-12d3-a456-426614174000", "format": "uri"}, "policy-id": {"type": "string", "description": "Policy to control access to record an all generated artifacts", "example": "urn:ivcap:policy:123e4567-e89b-12d3-a456-426614174000", "format": "uri"}}, "example": {"namespace-name": "ivcap-develop-runner", "order-id": "urn:ivcap:order:123e4567-e89b-12d3-a456-426614174000", "policy-id": "urn:ivcap:policy:123e4567-e89b-12d3-a456-426614174000"}, "required": ["order-id"]}, "OrderTopResultItem": {"type": "object", "properties": {"container": {"type": "string", "description": "container", "example": "Facilis saepe vel est maxime."}, "cpu": {"type": "string", "description": "cpu", "example": "Odio aut hic omnis."}, "ephemeral-storage": {"type": "string", "description": "ephemeral-storage", "example": "Et architecto aut."}, "memory": {"type": "string", "description": "memory", "example": "Illum vero sed beatae omnis."}, "storage": {"type": "string", "description": "storage", "example": "Velit tenetur voluptatem sit quas repellat enim."}}, "example": {"container": "Dolorum est rerum ad exercitationem voluptas qui.", "cpu": "Qui consectetur optio.", "ephemeral-storage": "Aut tempore nihil.", "memory": "Cupiditate blanditiis aut fugiat doloremque.", "storage": "Sunt aut enim rerum."}, "required": ["container", "cpu", "memory", "storage", "ephemeral-storage"]}, "OrderTopResultItemCollection": {"type": "array", "items": {"$ref": "#/components/schemas/OrderTopResultItem"}, "example": [{"container": "Aliquam sit error fuga.", "cpu": "Neque odio officia voluptas.", "ephemeral-storage": "Itaque eaque et accusantium sunt.", "memory": "Doloremque unde similique sequi.", "storage": "Eveniet eos incidunt rerum."}, {"container": "Aliquam sit error fuga.", "cpu": "Neque odio officia voluptas.", "ephemeral-storage": "Itaque eaque et accusantium sunt.", "memory": "Doloremque unde similique sequi.", "storage": "Eveniet eos incidunt rerum."}]}, "ParameterDefT": {"type": "object", "properties": {"constant": {"type": "boolean", "example": false}, "default": {"type": "string", "example": "Optio placeat."}, "description": {"type": "string", "example": "Recusandae perspiciatis laboriosam molestiae."}, "label": {"type": "string", "example": "Sit consequuntur sed."}, "name": {"type": "string", "example": "Est et ipsum."}, "optional": {"type": "boolean", "example": false}, "options": {"type": "array", "items": {"$ref": "#/components/schemas/ParameterOptT"}, "example": [{"description": "Voluptatum ullam quos qui cum.", "value": "Odit repellendus et."}, {"description": "Voluptatum ullam quos qui cum.", "value": "Odit repellendus et."}, {"description": "Voluptatum ullam quos qui cum.", "value": "Odit repellendus et."}, {"description": "Voluptatum ullam quos qui cum.", "value": "Odit repellendus et."}]}, "type": {"type": "string", "example": "Harum quibusdam et aut itaque aut rem."}, "unary": {"type": "boolean", "example": false}, "unit": {"type": "string", "example": "Pariatur autem nemo velit fugit amet iste."}}, "example": {"constant": false, "default": "Nesciunt similique sunt corporis.", "description": "Ut voluptatem in id et.", "label": "Non dolorem sed voluptates at et velit.", "name": "Qui placeat quas nesciunt harum.", "optional": true, "options": [{"description": "Voluptatum ullam quos qui cum.", "value": "Odit repellendus et."}, {"description": "Voluptatum ullam quos qui cum.", "value": "Odit repellendus et."}, {"description": "Voluptatum ullam quos qui cum.", "value": "Odit repellendus et."}], "type": "Incidunt quae maxime distinctio.", "unary": true, "unit": "Quia ipsa."}}, "ParameterOptT": {"type": "object", "properties": {"description": {"type": "string", "example": "Nihil recusandae ut est rerum."}, "value": {"type": "string", "example": "Sit eligendi facere quo voluptates modi."}}, "example": {"description": "Aut quia placeat sunt placeat vel.", "value": "Ad nihil sequi odio inventore illum iste."}}, "ParameterT": {"type": "object", "properties": {"name": {"type": "string", "example": "Ipsum reprehenderit voluptatem."}, "value": {"type": "string", "example": "Omnis dolores ipsa."}}, "example": {"name": "Eos molestiae facilis eos adipisci corporis.", "value": "Vel inventore."}}, "ProductT": {"type": "object", "properties": {"etag": {"type": "string", "example": "Velit facilis."}, "id": {"type": "string", "example": "Odio eum necessitatibus deserunt dicta minus."}, "links": {"$ref": "#/components/schemas/SelfWithDataT"}, "mime-type": {"type": "string", "example": "Eum facilis atque."}, "name": {"type": "string", "example": "Et nobis rerum voluptatum quidem optio sunt."}, "size": {"type": "integer", "example": 5189576526628907227, "format": "int64"}, "status": {"type": "string", "example": "Cumque itaque hic."}}, "example": {"etag": "Voluptate et est aut dolor placeat.", "id": "Doloremque quam voluptate qui.", "links": {"data": "Et eius error.", "describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Quos ab et sed aperiam a."}, "mime-type": "Illo ut autem ullam vel.", "name": "Et quo.", "size": 7071736032136412583, "status": "Dolor in necessitatibus nulla omnis."}}, "RefT": {"type": "object", "properties": {"id": {"type": "string", "example": "http://turcotte.net/marianna", "format": "uri"}, "links": {"$ref": "#/components/schemas/SelfT"}}, "example": {"id": "http://waelchilindgren.name/arno", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Et quia quis ut quia."}}}, "ReferenceT": {"type": "object", "properties": {"title": {"type": "string", "description": "Title of reference document", "example": "Non nobis eos deleniti."}, "uri": {"type": "string", "description": "Link to document", "example": "http://raynor.org/verda", "format": "uri"}}, "example": {"title": "Temporibus est.", "uri": "http://oconnermaggio.net/isai_marks"}}, "ResourceMemoryT": {"type": "object", "properties": {"limit": {"type": "string", "description": "minimal requirements [system limit]", "example": "Voluptas reprehenderit et cumque dolore laborum."}, "request": {"type": "string", "description": "minimal requirements [0]", "example": "Corporis cumque iure tenetur quidem autem."}}, "description": "See https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#resource-units-in-kubernetes for units", "example": {"limit": "Nulla ut in dolores.", "request": "Aspernatur rem voluptatum ab consequatur."}}, "ResourceNotFoundT": {"type": "object", "properties": {"id": {"type": "string", "description": "ID of missing resource", "example": "cayp:type:123e4567-e89b-12d3-a456-426614174000", "format": "uri"}, "message": {"type": "string", "description": "Message of error", "example": "Resource 123...00 not found"}}, "description": "aspect not found", "example": {"id": "cayp:type:123e4567-e89b-12d3-a456-426614174000", "message": "Resource 123...00 not found"}, "required": ["message", "id"]}, "SelfT": {"type": "object", "properties": {"describedBy": {"$ref": "#/components/schemas/DescribedByT"}, "self": {"type": "string", "example": "Laudantium perspiciatis aut dolorum libero ducimus at."}}, "example": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Magni accusamus doloremque autem omnis et."}}, "SelfWithDataT": {"type": "object", "properties": {"data": {"type": "string", "example": "Dolore eaque voluptatem iure facere aut vero."}, "describedBy": {"$ref": "#/components/schemas/DescribedByT"}, "self": {"type": "string", "example": "Voluptas et."}}, "example": {"data": "Totam et aliquid ut est fugit.", "describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Ad nesciunt eum."}}, "ServiceDescriptionT": {"type": "object", "properties": {"banner": {"type": "string", "description": "Link to banner image oprionally used for this service", "example": "http://gislasonabernathy.net/general", "format": "uri"}, "description": {"type": "string", "description": "More detailed description of the service", "example": "This service ..."}, "metadata": {"type": "array", "items": {"$ref": "#/components/schemas/ParameterT"}, "description": "Optional provider provided meta tags", "example": [{"name": "Magnam repellendus nihil.", "value": "In sint tenetur repellat reprehenderit ea."}, {"name": "Magnam repellendus nihil.", "value": "In sint tenetur repellat reprehenderit ea."}, {"name": "Magnam repellendus nihil.", "value": "In sint tenetur repellat reprehenderit ea."}, {"name": "Magnam repellendus nihil.", "value": "In sint tenetur repellat reprehenderit ea."}]}, "name": {"type": "string", "description": "Optional provider provided name", "example": "Fire risk for Lot2"}, "parameters": {"type": "array", "items": {"$ref": "#/components/schemas/ParameterDefT"}, "description": "Service parameter definitions", "example": [{"description": "The name of the region as according to ...", "label": "Region Name", "name": "region", "type": "string"}, {"label": "Rainfall/month threshold", "name": "threshold", "type": "float", "unit": "m"}]}, "policy-id": {"type": "string", "description": "Reference to policy controlling access", "example": "Ut rem eius dolorem."}, "references": {"type": "array", "items": {"$ref": "#/components/schemas/ReferenceT"}, "description": "Reference to account revenues for this service should be credited to", "example": [{"title": "Corrupti placeat iusto illo voluptate.", "uri": "http://millsparisian.info/dixie.rice"}, {"title": "Corrupti placeat iusto illo voluptate.", "uri": "http://millsparisian.info/dixie.rice"}, {"title": "Corrupti placeat iusto illo voluptate.", "uri": "http://millsparisian.info/dixie.rice"}, {"title": "Corrupti placeat iusto illo voluptate.", "uri": "http://millsparisian.info/dixie.rice"}]}, "tags": {"type": "array", "items": {"type": "string", "example": "Quia rerum nisi ut sint blanditiis."}, "description": "Optional provider provided tags", "example": ["tag1", "tag2"]}, "workflow": {"$ref": "#/components/schemas/WorkflowT"}}, "example": {"banner": "http://greenfelder.com/rey_keeling", "description": "This service ...", "metadata": [{"name": "Magnam repellendus nihil.", "value": "In sint tenetur repellat reprehenderit ea."}, {"name": "Magnam repellendus nihil.", "value": "In sint tenetur repellat reprehenderit ea."}, {"name": "Magnam repellendus nihil.", "value": "In sint tenetur repellat reprehenderit ea."}], "name": "Fire risk for Lot2", "parameters": [{"description": "The name of the region as according to ...", "label": "Region Name", "name": "region", "type": "string"}, {"label": "Rainfall/month threshold", "name": "threshold", "type": "float", "unit": "m"}], "policy-id": "Cum labore mollitia repellat ad sit fuga.", "references": [{"title": "Corrupti placeat iusto illo voluptate.", "uri": "http://millsparisian.info/dixie.rice"}, {"title": "Corrupti placeat iusto illo voluptate.", "uri": "http://millsparisian.info/dixie.rice"}, {"title": "Corrupti placeat iusto illo voluptate.", "uri": "http://millsparisian.info/dixie.rice"}, {"title": "Corrupti placeat iusto illo voluptate.", "uri": "http://millsparisian.info/dixie.rice"}], "tags": ["tag1", "tag2"], "workflow": {"argo": "Magni repellat nulla sunt.", "basic": {"command": ["/bin/sh", "-c", "echo $PATH"], "cpu": {"limit": "100m", "request": "10m"}, "ephemeral-storage": {"limit": "4Gi", "request": "2Gi"}, "image": "alpine", "memory": {"limit": "100Mi", "request": "10Mi"}}, "opts": "Architecto sint.", "type": "basic"}}, "required": ["description", "workflow", "parameters"]}, "ServiceListItem": {"type": "object", "properties": {"description": {"type": "string", "description": "Optional description of the service", "example": "Some lengthy description of fire risk"}, "id": {"type": "string", "description": "Service ID", "example": "service:acme:oracle"}, "links": {"$ref": "#/components/schemas/SelfT"}, "name": {"type": "string", "description": "Optional customer provided name", "example": "Fire risk for region"}}, "example": {"description": "Some lengthy description of fire risk", "id": "service:acme:oracle", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Et quia quis ut quia."}, "name": "Fire risk for region"}, "required": ["links"]}, "ServiceListRT": {"type": "object", "properties": {"at-time": {"type": "string", "description": "Time at which this list was valid", "example": "1996-12-19T16:39:57-08:00", "format": "date-time"}, "links": {"$ref": "#/components/schemas/NavT"}, "services": {"type": "array", "items": {"$ref": "#/components/schemas/ServiceListItem"}, "description": "Services", "example": [{"description": "Some lengthy description of fire risk", "id": "service:acme:oracle", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Et quia quis ut quia."}, "name": "Fire risk for region"}, {"description": "Some lengthy description of fire risk", "id": "service:acme:oracle", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Et quia quis ut quia."}, "name": "Fire risk for region"}]}}, "example": {"at-time": "1996-12-19T16:39:57-08:00", "links": {"first": "https://api.com/foo/...", "next": "https://api.com/foo/...", "self": "https://api.com/foo/..."}, "services": [{"description": "Some lengthy description of fire risk", "id": "service:acme:oracle", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Et quia quis ut quia."}, "name": "Fire risk for region"}, {"description": "Some lengthy description of fire risk", "id": "service:acme:oracle", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Et quia quis ut quia."}, "name": "Fire risk for region"}, {"description": "Some lengthy description of fire risk", "id": "service:acme:oracle", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Et quia quis ut quia."}, "name": "Fire risk for region"}]}, "required": ["services", "at-time", "links"]}, "ServiceStatusRT": {"type": "object", "properties": {"account": {"$ref": "#/components/schemas/RefT"}, "description": {"type": "string", "description": "More detailed description of the service", "example": "This service ..."}, "id": {"type": "string", "description": "Service ID", "example": "service:acme:oracle"}, "links": {"$ref": "#/components/schemas/SelfT"}, "metadata": {"type": "array", "items": {"$ref": "#/components/schemas/ParameterT"}, "description": "Optional provider provided meta tags", "example": [{"name": "Ut magni voluptatem quae nemo numquam dolorem.", "value": "Commodi repellat omnis perspiciatis."}, {"name": "Ut magni voluptatem quae nemo numquam dolorem.", "value": "Commodi repellat omnis perspiciatis."}, {"name": "Ut magni voluptatem quae nemo numquam dolorem.", "value": "Commodi repellat omnis perspiciatis."}, {"name": "Ut magni voluptatem quae nemo numquam dolorem.", "value": "Commodi repellat omnis perspiciatis."}]}, "name": {"type": "string", "description": "Optional provider provided name", "example": "Fire risk for Lot2"}, "parameters": {"type": "array", "items": {"$ref": "#/components/schemas/ParameterDefT"}, "description": "Service parameter definitions", "example": [{"description": "The name of the region as according to ...", "label": "Region Name", "name": "region", "type": "string"}, {"label": "Rainfall/month threshold", "name": "threshold", "type": "float", "unit": "m"}]}, "status": {"type": "string", "description": "Service status", "example": "inactive", "enum": ["active", "inactive", "error"]}, "tags": {"type": "array", "items": {"type": "string", "example": "Cumque voluptatem est est ut."}, "description": "Optional provider provided tags", "example": ["tag1", "tag2"]}}, "example": {"account": {"id": "http://christiansen.org/ned", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Et quia quis ut quia."}}, "description": "This service ...", "id": "service:acme:oracle", "links": {"describedBy": {"href": "https://api.com/swagger/...", "type": "application/openapi3+json"}, "self": "Et quia quis ut quia."}, "metadata": [{"name": "Ut magni voluptatem quae nemo numquam dolorem.", "value": "Commodi repellat omnis perspiciatis."}, {"name": "Ut magni voluptatem quae nemo numquam dolorem.", "value": "Commodi repellat omnis perspiciatis."}, {"name": "Ut magni voluptatem quae nemo numquam dolorem.", "value": "Commodi repellat omnis perspiciatis."}], "name": "Fire risk for Lot2", "parameters": [{"description": "The name of the region as according to ...", "label": "Region Name", "name": "region", "type": "string"}, {"label": "Rainfall/month threshold", "name": "threshold", "type": "float", "unit": "m"}], "status": "inactive", "tags": ["tag1", "tag2"]}, "required": ["id", "links", "parameters"]}, "WorkflowT": {"type": "object", "properties": {"argo": {"type": "string", "description": "Defines the workflow using argo's WF schema", "example": "Et odio et nisi nostrum placeat.", "format": "binary"}, "basic": {"$ref": "#/components/schemas/BasicWorkflowOptsT"}, "opts": {"type": "string", "description": "Type specific options - left for backward compatibility, if possible use type specific elements", "example": "Quis placeat.", "format": "binary"}, "type": {"type": "string", "description": "Type of workflow", "example": "basic"}}, "description": "Defines the workflow to use to execute this service. Currently supported 'types' are 'basic'\n\tand 'argo'. In case of 'basic', use the 'basic' element for further parameters. In the current implementation\n\t'opts' is expected to contain the same schema as 'basic'", "example": {"argo": "Est cupiditate sapiente recusandae amet nesciunt iste.", "basic": {"command": ["/bin/sh", "-c", "echo $PATH"], "cpu": {"limit": "100m", "request": "10m"}, "ephemeral-storage": {"limit": "4Gi", "request": "2Gi"}, "image": "alpine", "memory": {"limit": "100Mi", "request": "10Mi"}}, "opts": "Et tempora ex qui officiis totam mollitia.", "type": "basic"}}}, "securitySchemes": {"jwt_header_Authorization": {"type": "http", "description": "Secures endpoint by requiring a valid JWT token", "scheme": "bearer"}}}, "tags": [{"name": "openapi", "description": "The openapi service serves the OpenAPI definition."}, {"name": "aspect", "description": "Manages the life cycle of aspect(s) attached to an entity."}, {"name": "artifact", "description": "Manage the life cycle of an artifact stored by this deployment."}, {"name": "metadata", "description": "Manages the life cycle of metadata attached to an entity."}, {"name": "order", "description": "Manage the life cycle of an order for CRE services."}, {"name": "service", "description": "Manage the life cycle of a service offered on the CRE marketplace."}]}
