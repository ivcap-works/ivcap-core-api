{"openapi": "3.0.3", "info": {"title": "IVCAP", "description": "\n**IVCAP** is for **service providers** to **offer** analytics **services**\nand for **consumers** to **order** customised **products** produced by said services.\n\n### Typical Workflow\n\n1. Obtain an token from the ID Providers listed in the document returned\nby [/1/authinfo.yaml](/1/authinfo.yaml). The token needs to be added\nas a bearer token via the\n<code>Authorization</code> header to every request to this service.\n1. <a href=\"#get-/1/services\">List</a> all available service.\n1. Select appropriate service and retrieve details, like parameters via\n<a href=\"#get-/1/services/-id-\">Read Service</a>.\n1. Create the appropriate json request and POST it to\n<a href=\"#post-/1/orders\">Create Order</a>. (see the example in the\nservice description.)\n1. The reply from the above POST operation contains a link (<code>links/self</code>) to the\nnewly create order record accessible via <a href=\"#get-/1/orders/-id-\">Read Order</a>.\n1. Progress of the order fulfilment can be tracked via repeated calls to\n<a href=\"#get-/1/orders/-id-\">Read Order</a> and the returned <code>status</code>.\n1. Any information products created in the context of an order will be listed under <code>producs</code>\nwhich also include a link to the respective <a href=\"#get-/1/artifacts/-id-\">Read Artifact</a>.\n1. The <a href=\"#get-/1/artifacts/-id-\">Read Artifact</a> service will return more details for\neach artifact, including a <code>data</code> link through which the artifact content can be downloaded. (The\ndownload link is also included in the <code>products</code> list returned by\nthe <a href=\"#get-/1/orders/-id-\">Read Order</a> service ).\n\nPlease note that all schemas in this API are following the [{json:api}](https://jsonapi.org/) specs\nwherever appropriate.\n\n### High-level Architecture\n\nOn receiving an order through this **API**, the internal *Order Dispatcher* is\ncreating a *workflow*, dispatching that to the\n[Argo workflow engine](https://argoproj.github.io/argo-workflows/)\nand create appropriate records in [Magda](https://magda.io/).\nAs the execution of the workflow progresses, appropriate updates are posted to the order record in Magda,\nsuch as data accessed or produced. In addition, any information products created will be\nstored via [Minio](https://min.io/) in a deployment specific object store\nand made accessible through the *Artifact* service.\n\t", "version": "0.31"}, "servers": [{"url": "http://localhost:8088", "description": "This endpoint hosts all the IVCAP services."}], "paths": {"/1/artifacts": {"get": {"tags": ["artifact"], "summary": "list artifact", "description": "list artifacts", "operationId": "artifact#list", "parameters": [{"name": "limit", "in": "query", "description": "The $limit system query option requests the number of items in the queried\n\t\t\t\tcollection to be included in the result.", "allowEmptyValue": true, "schema": {"type": "integer", "description": "The $limit system query option requests the number of items in the queried\n\t\t\t\tcollection to be included in the result.", "default": 10, "example": 10, "minimum": 1, "maximum": 50}, "example": 10}, {"name": "page", "in": "query", "description": "The content of 'page' is returned in the 'links' part of a previous query and\n\t\t\t\twill when set, ALL other parameters, except for 'limit' are ignored.", "allowEmptyValue": true, "schema": {"type": "string", "description": "The content of 'page' is returned in the 'links' part of a previous query and\n\t\t\t\twill when set, ALL other parameters, except for 'limit' are ignored.", "example": "gdsgQwhdgd"}, "example": "gdsgQwhdgd"}, {"name": "filter", "in": "query", "description": "The 'filter' system query option allows clients to filter a collection of\n\t\t\t\tresources that are addressed by a request URL. The expression specified with 'filter'\n\t\t\t\tis evaluated for each resource in the collection, and only items where the expression\n\t\t\t\tevaluates to true are included in the response.", "allowEmptyValue": true, "schema": {"type": "string", "description": "The 'filter' system query option allows clients to filter a collection of\n\t\t\t\tresources that are addressed by a request URL. The expression specified with 'filter'\n\t\t\t\tis evaluated for each resource in the collection, and only items where the expression\n\t\t\t\tevaluates to true are included in the response.", "example": "name ~= 'Scott%'"}, "example": "name ~= 'Scott%'"}, {"name": "order-by", "in": "query", "description": "The 'orderby' query option allows clients to request resources in either\n\t\t\t\tascending order using asc or descending order using desc. If asc or desc not specified,\n\t\t\t\tthen the resources will be ordered in ascending order. The request below orders Trips on\n\t\t\t\tproperty EndsAt in descending order.", "allowEmptyValue": true, "schema": {"type": "string", "description": "The 'orderby' query option allows clients to request resources in either\n\t\t\t\tascending order using asc or descending order using desc. If asc or desc not specified,\n\t\t\t\tthen the resources will be ordered in ascending order. The request below orders Trips on\n\t\t\t\tproperty EndsAt in descending order.", "example": "orderby=EndsAt"}, "example": "orderby=EndsAt"}, {"name": "order-desc", "in": "query", "description": "When set order result in descending order. Ascending order is the lt.", "allowEmptyValue": true, "schema": {"type": "boolean", "description": "When set order result in descending order. Ascending order is the lt.", "default": false, "example": false}, "example": false}, {"name": "at-time", "in": "query", "description": "Return the state of the respective resources at that time [now]", "allowEmptyValue": true, "schema": {"type": "string", "description": "Return the state of the respective resources at that time [now]", "example": "1996-12-19T16:39:57-08:00", "format": "date-time"}, "example": "1996-12-19T16:39:57-08:00"}], "responses": {"200": {"description": "OK response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ArtifactListRT"}, "example": {"at-time": "1996-12-19T16:39:57-08:00", "items": [{"href": "https://api.ivcap.net/1/orders/...", "id": "urn:ivcap:artifact:123e4567-e89b-12d3-a456-426614174000", "mime-type": "image/jpeg", "name": "Fire risk for Lot2", "size": 19000, "status": "ready"}, {"href": "https://api.ivcap.net/1/orders/...", "id": "urn:ivcap:artifact:123e4567-e89b-12d3-a456-426614174000", "mime-type": "image/jpeg", "name": "Fire risk for Lot2", "size": 19000, "status": "ready"}, {"href": "https://api.ivcap.net/1/orders/...", "id": "urn:ivcap:artifact:123e4567-e89b-12d3-a456-426614174000", "mime-type": "image/jpeg", "name": "Fire risk for Lot2", "size": 19000, "status": "ready"}], "links": [{"href": "https://api.ivcap.net/1/....", "rel": "self", "type": "application/json"}, {"href": "https://api.ivcap.net/1/....", "rel": "first", "type": "application/json"}, {"href": "https://api.ivcap.net/1/....", "rel": "next", "type": "application/json"}, {"href": "https://api.ivcap.net/1/openapi/openapi3.json#/components/schemas/user", "rel": "describedBy", "type": "application/openapi3+json"}]}}}}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}, "example": {"id": "123e4567-e89b-12d3-a456-426614174000", "message": "Aperiam consequatur aliquid ut dolores."}}}}, "422": {"description": "invalid-parameter: Request contained semantically wrong parameter value", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidParameterValue"}, "example": {"message": "Labore eum maxime est ut esse.", "name": "Libero accusamus sint consectetur et quia.", "value": "Minus dolores nemo reiciendis voluptates eum."}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}, "example": {"message": "Nulla itaque enim ab."}}}}}, "security": [{"jwt_header_Authorization": ["consumer:read"]}]}, "post": {"tags": ["artifact"], "summary": "upload artifact", "description": "Upload content and create a artifacts.", "operationId": "artifact#upload", "parameters": [{"name": "Content-Type", "in": "header", "description": "Content-Type header, MUST define type of uploaded content.", "allowEmptyValue": true, "schema": {"type": "string", "description": "Content-Type header, MUST define type of uploaded content.", "example": "application/x-netcdf4"}, "example": "application/x-netcdf4"}, {"name": "Content-Encoding", "in": "header", "description": "Content-Encoding header, MAY define encoding of content.", "allowEmptyValue": true, "schema": {"type": "string", "description": "Content-Encoding header, MAY define encoding of content.", "example": "gzip"}, "example": "gzip"}, {"name": "Content-Length", "in": "header", "description": "Content-Length header, MAY define size of expected upload.", "allowEmptyValue": true, "schema": {"type": "integer", "description": "Content-Length header, MAY define size of expected upload.", "example": 2376, "format": "int64"}, "example": 2376}, {"name": "X-Name", "in": "header", "description": "X-Name header, MAY define a more human friendly name. Reusing a name will NOT override an existing artifact with the same name", "allowEmptyValue": true, "schema": {"type": "string", "description": "X-Name header, MAY define a more human friendly name. Reusing a name will NOT override an existing artifact with the same name", "example": "sample-12"}, "example": "sample-12"}, {"name": "X-Collection", "in": "header", "description": "X-Collection header, MAY define an collection name as a simple way of grouping artifacts", "allowEmptyValue": true, "schema": {"type": "string", "description": "X-Collection header, MAY define an collection name as a simple way of grouping artifacts", "example": "urn:projectX:collection:field-trip-jun-22"}, "example": "urn:projectX:collection:field-trip-jun-22"}, {"name": "X-Policy", "in": "header", "description": "X-Policy header, MAY define a specific policy to control access to this artifact", "allowEmptyValue": true, "schema": {"type": "string", "description": "X-Policy header, MAY define a specific policy to control access to this artifact", "example": "urn:ivcap:policy:ivcap.open.metadata"}, "example": "urn:ivcap:policy:ivcap.open.metadata"}, {"name": "X-Content-Type", "in": "header", "description": "X-Content-Type header, used for initial, empty content creation requests.", "allowEmptyValue": true, "schema": {"type": "string", "description": "X-Content-Type header, used for initial, empty content creation requests.", "example": "application/x-netcdf4"}, "example": "application/x-netcdf4"}, {"name": "X-Content-Length", "in": "header", "description": "X-Content-Length header, used for initial, empty content creation requests.", "allowEmptyValue": true, "schema": {"type": "integer", "description": "X-Content-Length header, used for initial, empty content creation requests.", "example": 2376, "format": "int64"}, "example": 2376}, {"name": "Upload-Length", "in": "header", "description": "Upload-Length header, sets the expected content size part of the TUS protocol.", "allowEmptyValue": true, "schema": {"type": "integer", "description": "Upload-Length header, sets the expected content size part of the TUS protocol.", "example": 2376, "format": "int64"}, "example": 2376}, {"name": "Tus-Resumable", "in": "header", "description": "Tus-Resumable header, specifies TUS protocol version.", "allowEmptyValue": true, "schema": {"type": "string", "description": "Tus-Resumable header, specifies TUS protocol version.", "example": "1.0.0"}, "example": "1.0.0"}], "responses": {"201": {"description": "Created response.", "headers": {"Location": {"description": "link back to record", "schema": {"type": "string", "description": "link back to record", "example": "Et at delectus."}, "example": "Inventore quas voluptas consequatur sint nihil."}, "Tus-Resumable": {"description": "indicate version of TUS supported", "schema": {"type": "string", "description": "indicate version of TUS supported", "example": "Voluptas saepe."}, "example": "Et modi non non iure officia aut."}, "Upload-Offset": {"description": "TUS offset for partially uploaded content", "schema": {"type": "integer", "description": "TUS offset for partially uploaded content", "example": 5753052869434245228, "format": "int64"}, "example": 2636044681905582041}}, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ArtifactStatusRT"}, "example": {"account": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "cache-of": "Similique et.", "created-at": "1996-12-19T16:39:57-08:00", "data-href": "https://api.ivcap.net/1/artifacts/.../blob", "etag": "Quis ut quia.", "id": "urn:ivcap:Artifact ID:123e4567-e89b-12d3-a456-426614174000", "last-modified-at": "1996-12-19T16:39:57-08:00", "links": [{"href": "https://api.ivcap.net/1/....", "rel": "self", "type": "application/json"}, {"href": "https://api.ivcap.net/1/openapi/openapi3.json#/components/schemas/user", "rel": "describedBy", "type": "application/json"}], "mime-type": "Illo et ut aliquam qui qui.", "name": "Fire risk per LGA", "policy": "urn:ivcap:policy:123e4567-e89b-12d3-a456-426614174000", "size": 8386912295211976475, "status": "partial"}}}}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}, "example": {"id": "123e4567-e89b-12d3-a456-426614174000", "message": "Distinctio possimus at."}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}, "example": {"message": "Aut nemo ratione assumenda."}}}}}, "security": [{"jwt_header_Authorization": ["consumer:write"]}]}}, "/1/artifacts/{id}": {"get": {"tags": ["artifact"], "summary": "read artifact", "description": "Show artifacts by ID", "operationId": "artifact#read", "parameters": [{"name": "id", "in": "path", "description": "ID of artifacts to show", "required": true, "schema": {"type": "string", "description": "ID of artifacts to show", "example": "urn:ivcap:artifacts"}, "example": "urn:ivcap:artifacts"}], "responses": {"200": {"description": "OK response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ArtifactStatusRT"}, "example": {"account": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "cache-of": "Quasi delectus molestiae.", "created-at": "1996-12-19T16:39:57-08:00", "data-href": "https://api.ivcap.net/1/artifacts/.../blob", "etag": "Voluptas enim blanditiis dolorem similique placeat.", "id": "urn:ivcap:Artifact ID:123e4567-e89b-12d3-a456-426614174000", "last-modified-at": "1996-12-19T16:39:57-08:00", "links": [{"href": "https://api.ivcap.net/1/....", "rel": "self", "type": "application/json"}, {"href": "https://api.ivcap.net/1/openapi/openapi3.json#/components/schemas/user", "rel": "describedBy", "type": "application/json"}], "mime-type": "Provident qui optio ex tempore corrupti sapiente.", "name": "Fire risk per LGA", "policy": "urn:ivcap:policy:123e4567-e89b-12d3-a456-426614174000", "size": 5539175268447212146, "status": "pending"}}}}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}, "example": {"id": "123e4567-e89b-12d3-a456-426614174000", "message": "Ut nemo aut atque quam."}}}}, "404": {"description": "not-found: artifacts not found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ResourceNotFoundT"}, "example": {"id": "cayp:type:123e4567-e89b-12d3-a456-426614174000", "message": "Resource 123...00 not found"}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}, "example": {"message": "Expedita dicta quis sed."}}}}}, "security": [{"jwt_header_Authorization": ["consumer:read"]}]}}, "/1/aspect": {"get": {"tags": ["aspect"], "summary": "list aspect", "description": "Return a list of aspect aspects.", "operationId": "aspect#list", "parameters": [{"name": "entity", "in": "query", "description": "Optional entity for which to request aspects", "allowEmptyValue": true, "schema": {"type": "string", "description": "Optional entity for which to request aspects", "example": "urn:blue:image.collA#12", "format": "uri"}, "example": "urn:blue:image.collA#12"}, {"name": "schema", "in": "query", "description": "Schema prefix using '%' as wildcard indicator", "allowEmptyValue": true, "schema": {"type": "string", "description": "Schema prefix using '%' as wildcard indicator", "example": "urn:blue:schema:image%"}, "example": "urn:blue:schema:image%"}, {"name": "content-path", "in": "query", "description": "To learn more about the supported format, see\n\t\t\t\t\thttps://www.postgresql.org/docs/current/datatype-json.html#DATATYPE-JSONPATH", "allowEmptyValue": true, "schema": {"type": "string", "description": "To learn more about the supported format, see\n\t\t\t\t\thttps://www.postgresql.org/docs/current/datatype-json.html#DATATYPE-JSONPATH", "example": "$.images[*] ? (@.size > 10000)"}, "example": "$.images[*] ? (@.size > 10000)"}, {"name": "at-time", "in": "query", "description": "Return aspect which where valid at that time [now]", "allowEmptyValue": true, "schema": {"type": "string", "description": "Return aspect which where valid at that time [now]", "example": "1996-12-19T16:39:57-08:00", "format": "date-time"}, "example": "1996-12-19T16:39:57-08:00"}, {"name": "limit", "in": "query", "description": "The 'limit' system query option requests the number of items in the queried\n\t\t\t\tcollection to be included in the result.", "allowEmptyValue": true, "schema": {"type": "integer", "description": "The 'limit' system query option requests the number of items in the queried\n\t\t\t\tcollection to be included in the result.", "default": 10, "example": 10, "minimum": 1, "maximum": 50}, "example": 10}, {"name": "filter", "in": "query", "description": "The 'filter' system query option allows clients to filter a collection of\n\t\t\t\tresources that are addressed by a request URL. The expression specified with 'filter'\n\t\t\t\tis evaluated for each resource in the collection, and only items where the expression\n\t\t\t\tevaluates to true are included in the response.", "allowEmptyValue": true, "schema": {"type": "string", "description": "The 'filter' system query option allows clients to filter a collection of\n\t\t\t\tresources that are addressed by a request URL. The expression specified with 'filter'\n\t\t\t\tis evaluated for each resource in the collection, and only items where the expression\n\t\t\t\tevaluates to true are included in the response.", "default": "", "example": "filter=FirstName eq 'Scott'"}, "example": "filter=FirstName eq 'Scott'"}, {"name": "order-by", "in": "query", "description": "The 'orderby' query option allows clients to request resources in either\n\t\t\t\tascending order using asc or descending order using desc. If asc or desc not specified,\n\t\t\t\tthen the resources will be ordered in ascending order. The request below orders Trips on\n\t\t\t\tproperty EndsAt in descending order.", "allowEmptyValue": true, "schema": {"type": "string", "description": "The 'orderby' query option allows clients to request resources in either\n\t\t\t\tascending order using asc or descending order using desc. If asc or desc not specified,\n\t\t\t\tthen the resources will be ordered in ascending order. The request below orders Trips on\n\t\t\t\tproperty EndsAt in descending order.", "default": "", "example": "orderby=EndsAt"}, "example": "orderby=EndsAt"}, {"name": "order-desc", "in": "query", "description": "When set order result in descending order. Ascending order is the default.", "allowEmptyValue": true, "schema": {"type": "boolean", "description": "When set order result in descending order. Ascending order is the default.", "example": false}, "example": true}, {"name": "page", "in": "query", "description": "The content of '$page' is returned in the 'links' part of a previous query and\n\t\t\t\twill when set, ALL other parameters, except for 'limit' are ignored.", "allowEmptyValue": true, "schema": {"type": "string", "description": "The content of '$page' is returned in the 'links' part of a previous query and\n\t\t\t\twill when set, ALL other parameters, except for 'limit' are ignored.", "example": "gdsgQwhdgd"}, "example": "gdsgQwhdgd"}], "responses": {"200": {"description": "OK response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AspectListRT"}, "example": {"aspect-path": "Error hic.", "at-time": "1996-12-19T16:39:57-08:00", "entity": "urn:blue:image.collA.12", "items": [{"content": "{...}", "content-type": "application/json", "entity": "urn:blue:transect.1", "id": "urn:ivcap:aspect:123e4567-e89b-12d3-a456-426614174000", "schema": "urn:blue:schema.image"}, {"content": "{...}", "content-type": "application/json", "entity": "urn:blue:transect.1", "id": "urn:ivcap:aspect:123e4567-e89b-12d3-a456-426614174000", "schema": "urn:blue:schema.image"}, {"content": "{...}", "content-type": "application/json", "entity": "urn:blue:transect.1", "id": "urn:ivcap:aspect:123e4567-e89b-12d3-a456-426614174000", "schema": "urn:blue:schema.image"}], "links": [{"href": "https://api.ivcap.net/1/....", "rel": "self", "type": "application/json"}, {"href": "https://api.ivcap.net/1/....", "rel": "first", "type": "application/json"}, {"href": "https://api.ivcap.net/1/....", "rel": "next", "type": "application/json"}, {"href": "https://api.ivcap.net/1/openapi/openapi3.json#/components/schemas/user", "rel": "describedBy", "type": "application/openapi3+json"}], "schema": "urn:blue:image,urn:blue:location"}}}}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}, "example": {"id": "123e4567-e89b-12d3-a456-426614174000", "message": "Sunt laudantium consequatur itaque mollitia non."}}}}, "415": {"description": "unsupported-content-type: Format not supported by this method on the target resource", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}, "example": {"message": "In ut ipsam."}}}}, "422": {"description": "invalid-parameter: Request contained semantically wrong parameter value", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidParameterValue"}, "example": {"message": "Quia qui dolor assumenda ad sed.", "name": "Repellendus et.", "value": "Ipsa velit nobis sapiente."}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}, "example": {"message": "Cumque est dolore omnis excepturi."}}}}}, "security": [{"jwt_header_Authorization": ["consumer:read"]}]}, "post": {"tags": ["aspect"], "summary": "create aspect", "description": "Attach new aspect to an entity.", "operationId": "aspect#create", "parameters": [{"name": "entity", "in": "query", "description": "Entity to which attach aspect", "allowEmptyValue": true, "required": true, "schema": {"type": "string", "description": "Entity to which attach aspect", "example": "urn:some_ns:entity#123"}, "example": "urn:some_ns:entity#123"}, {"name": "schema", "in": "query", "description": "Schema of the aspect in payload", "allowEmptyValue": true, "required": true, "schema": {"type": "string", "description": "Schema of the aspect in payload", "example": "urn:some_ns:schema:some_schema.1"}, "example": "urn:some_ns:schema:some_schema.1"}, {"name": "policy", "in": "query", "description": "Policy guiding visibility and actions performed", "allowEmptyValue": true, "schema": {"type": "string", "description": "Policy guiding visibility and actions performed", "example": "urn:ivcap:policy:some_policy.1"}, "example": "urn:ivcap:policy:some_policy.1"}, {"name": "Content-Type", "in": "header", "description": "Content-Type header, MUST be of application/json.", "allowEmptyValue": true, "required": true, "schema": {"type": "string", "description": "Content-Type header, MUST be of application/json.", "example": "application/json"}, "example": "application/json"}], "requestBody": {"description": "Aspect content", "required": true, "content": {"application/json": {"schema": {"type": "string", "description": "Aspect content", "example": "{\"$schema\": ...}", "format": "binary"}, "example": "{\"$schema\": ...}"}}}, "responses": {"200": {"description": "OK response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AspectIDRT"}, "example": {"id": "urn:ivcap:aspect:123e4567-e89b-12d3-a456-426614174000"}}}}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}, "example": {"id": "123e4567-e89b-12d3-a456-426614174000", "message": "Magnam nihil et assumenda a temporibus sint."}}}}, "422": {"description": "invalid-parameter: Request contained semantically wrong parameter value", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidParameterValue"}, "example": {"message": "Aut aut eligendi soluta dolorum.", "name": "Impedit tempora vero rerum sed.", "value": "Modi voluptas voluptates quaerat molestias ipsum."}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}, "example": {"message": "Quidem expedita."}}}}}, "security": [{"jwt_header_Authorization": ["consumer:write"]}]}}, "/1/aspect/{id}": {"delete": {"tags": ["aspect"], "summary": "retract aspect", "description": "Retract a previously created statement.", "operationId": "aspect#retract", "parameters": [{"name": "id", "in": "path", "description": "Aspect ID to restract", "required": true, "schema": {"type": "string", "description": "Aspect ID to restract", "example": "urn:ivcap:aspect#53cbb715-4ffd-4158-9e55-5d0ae69605a4", "format": "uri"}, "example": "urn:ivcap:aspect#53cbb715-4ffd-4158-9e55-5d0ae69605a4"}], "responses": {"204": {"description": "No Content response."}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}, "example": {"id": "123e4567-e89b-12d3-a456-426614174000", "message": "Officiis enim quam blanditiis soluta."}}}}, "422": {"description": "invalid-parameter: Request contained semantically wrong parameter value", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidParameterValue"}, "example": {"message": "Assumenda hic dolorum vero.", "name": "Omnis fugit iste perspiciatis voluptatibus ea.", "value": "Impedit eum eum."}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}, "example": {"message": "Vel atque necessitatibus veniam."}}}}}, "security": [{"jwt_header_Authorization": ["consumer:write"]}]}, "get": {"tags": ["aspect"], "summary": "read aspect", "description": "Show aspect by ID", "operationId": "aspect#read", "parameters": [{"name": "id", "in": "path", "description": "ID of aspect to show", "required": true, "schema": {"type": "string", "description": "ID of aspect to show", "example": "urn:ivcap:aspect"}, "example": "urn:ivcap:aspect"}], "responses": {"200": {"description": "OK response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AspectRT"}, "example": {"asserter": "urn:ivcap:principal:123e4567-e89b-12d3-a456-426614174000", "content": "{...}", "content-type": "application/json", "entity": "urn:blue:transect.1", "id": "urn:ivcap:record:123e4567-e89b-12d3-a456-426614174000", "links": [{"href": "https://api.ivcap.net/1/....", "rel": "self", "type": "application/json"}, {"href": "https://api.ivcap.net/1/openapi/openapi3.json#/components/schemas/user", "rel": "describedBy", "type": "application/json"}], "retracter": "urn:ivcap:principal:123e4567-e89b-12d3-a456-426614174000", "schema": "urn:blue:schema.image", "valid-from": "1996-12-19T16:39:57-08:00", "valid-to": "1996-12-19T16:39:57-08:00"}}}}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}, "example": {"id": "123e4567-e89b-12d3-a456-426614174000", "message": "Laudantium ipsa enim delectus quod."}}}}, "404": {"description": "not-found: aspect not found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ResourceNotFoundT"}, "example": {"id": "cayp:type:123e4567-e89b-12d3-a456-426614174000", "message": "Resource 123...00 not found"}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}, "example": {"message": "Amet molestiae aut illo odit totam."}}}}}, "security": [{"jwt_header_Authorization": ["consumer:read"]}]}, "put": {"tags": ["aspect"], "summary": "update aspect", "description": "Retract this aspect and create a new one with the information provided.\n\t\t\tFor any field not provided, the value from the current aspect is used.", "operationId": "aspect#update", "parameters": [{"name": "entity", "in": "query", "description": "Entity to which attach aspect", "allowEmptyValue": true, "required": true, "schema": {"type": "string", "description": "Entity to which attach aspect", "example": "urn:some_ns:schema:some_schema.1"}, "example": "urn:some_ns:schema:some_schema.1"}, {"name": "schema", "in": "query", "description": "Schema of aspect", "allowEmptyValue": true, "required": true, "schema": {"type": "string", "description": "Schema of aspect", "example": "urn:url:....", "format": "uri"}, "example": "urn:url:...."}, {"name": "id", "in": "path", "description": "Aspect to update", "required": true, "schema": {"type": "string", "description": "Aspect to update", "example": "urn:ivcap:aspect#53cbb715-4ffd-4158-9e55-5d0ae69605a4"}, "example": "urn:ivcap:aspect#53cbb715-4ffd-4158-9e55-5d0ae69605a4"}, {"name": "Content-Type", "in": "header", "description": "Content-Type header, MUST be of application/json.", "allowEmptyValue": true, "required": true, "schema": {"type": "string", "description": "Content-Type header, MUST be of application/json.", "example": "application/json"}, "example": "application/json"}], "requestBody": {"description": "Aspect content", "required": true, "content": {"application/json": {"schema": {"type": "string", "description": "Aspect content", "example": "{\"$schema\": ...}", "format": "binary"}, "example": "{\"$schema\": ...}"}}}, "responses": {"200": {"description": "OK response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AspectIDRT"}, "example": {"id": "urn:ivcap:aspect:123e4567-e89b-12d3-a456-426614174000"}}}}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}, "example": {"id": "123e4567-e89b-12d3-a456-426614174000", "message": "Sunt est quaerat voluptatum."}}}}, "422": {"description": "invalid-parameter: Request contained semantically wrong parameter value", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidParameterValue"}, "example": {"message": "Aut totam modi optio eius blanditiis.", "name": "Architecto officiis at expedita aut dignissimos voluptas.", "value": "Quaerat quia maiores sunt."}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}, "example": {"message": "Vel deleniti fugit."}}}}}, "security": [{"jwt_header_Authorization": ["consumer:write"]}]}}, "/1/metadata": {"get": {"tags": ["metadata"], "summary": "list metadata", "description": "Return a list of metadata records.", "operationId": "metadata#list", "parameters": [{"name": "entity-id", "in": "query", "description": "Entity for which to request metadata", "allowEmptyValue": true, "schema": {"type": "string", "description": "Entity for which to request metadata", "example": "urn:blue:image.collA.12", "format": "uri"}, "example": "urn:blue:image.collA.12"}, {"name": "schema", "in": "query", "description": "Schema prefix using '%' as wildcard indicator", "allowEmptyValue": true, "schema": {"type": "string", "description": "Schema prefix using '%' as wildcard indicator", "example": "urn:blue:image%"}, "example": "urn:blue:image%"}, {"name": "aspect-path", "in": "query", "description": "To learn more about the supported format, see\n\t\t\t\t\thttps://www.postgresql.org/docs/current/datatype-json.html#DATATYPE-JSONPATH", "allowEmptyValue": true, "schema": {"type": "string", "description": "To learn more about the supported format, see\n\t\t\t\t\thttps://www.postgresql.org/docs/current/datatype-json.html#DATATYPE-JSONPATH", "example": "$.images[*] ? (@.size > 10000)"}, "example": "$.images[*] ? (@.size > 10000)"}, {"name": "at-time", "in": "query", "description": "Return metadata which where valid at that time [now]", "allowEmptyValue": true, "schema": {"type": "string", "description": "Return metadata which where valid at that time [now]", "example": "1996-12-19T16:39:57-08:00", "format": "date-time"}, "example": "1996-12-19T16:39:57-08:00"}, {"name": "limit", "in": "query", "description": "The 'limit' system query option requests the number of items in the queried\n\t\t\t\tcollection to be included in the result.", "allowEmptyValue": true, "schema": {"type": "integer", "description": "The 'limit' system query option requests the number of items in the queried\n\t\t\t\tcollection to be included in the result.", "default": 10, "example": 10, "minimum": 1, "maximum": 50}, "example": 10}, {"name": "filter", "in": "query", "description": "The 'filter' system query option allows clients to filter a collection of\n\t\t\t\tresources that are addressed by a request URL. The expression specified with 'filter'\n\t\t\t\tis evaluated for each resource in the collection, and only items where the expression\n\t\t\t\tevaluates to true are included in the response.", "allowEmptyValue": true, "schema": {"type": "string", "description": "The 'filter' system query option allows clients to filter a collection of\n\t\t\t\tresources that are addressed by a request URL. The expression specified with 'filter'\n\t\t\t\tis evaluated for each resource in the collection, and only items where the expression\n\t\t\t\tevaluates to true are included in the response.", "default": "", "example": "filter=FirstName eq 'Scott'"}, "example": "filter=FirstName eq 'Scott'"}, {"name": "order-by", "in": "query", "description": "The 'orderby' query option allows clients to request resources in either\n\t\t\t\tascending order using asc or descending order using desc. If asc or desc not specified,\n\t\t\t\tthen the resources will be ordered in ascending order. The request below orders Trips on\n\t\t\t\tproperty EndsAt in descending order.", "allowEmptyValue": true, "schema": {"type": "string", "description": "The 'orderby' query option allows clients to request resources in either\n\t\t\t\tascending order using asc or descending order using desc. If asc or desc not specified,\n\t\t\t\tthen the resources will be ordered in ascending order. The request below orders Trips on\n\t\t\t\tproperty EndsAt in descending order.", "default": "", "example": "orderby=EndsAt"}, "example": "orderby=EndsAt"}, {"name": "order-desc", "in": "query", "description": "When set order result in descending order. Ascending order is the default.", "allowEmptyValue": true, "schema": {"type": "boolean", "description": "When set order result in descending order. Ascending order is the default.", "example": true}, "example": false}, {"name": "page", "in": "query", "description": "The content of '$page' is returned in the 'links' part of a previous query and\n\t\t\t\twill when set, ALL other parameters, except for 'limit' are ignored.", "allowEmptyValue": true, "schema": {"type": "string", "description": "The content of '$page' is returned in the 'links' part of a previous query and\n\t\t\t\twill when set, ALL other parameters, except for 'limit' are ignored.", "example": "gdsgQwhdgd"}, "example": "gdsgQwhdgd"}], "responses": {"200": {"description": "OK response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ListMetaRT"}, "example": {"aspect-path": "Ullam quis possimus mollitia veniam provident consequatur.", "at-time": "1996-12-19T16:39:57-08:00", "entity": "urn:blue:image.collA.12", "items": [{"aspect": "{...}", "aspect-context": "{...}", "entity": "urn:blue:transect.1", "id": "urn:ivcap:metadata:123e4567-e89b-12d3-a456-426614174000", "schema": "urn:blue:schema.image"}, {"aspect": "{...}", "aspect-context": "{...}", "entity": "urn:blue:transect.1", "id": "urn:ivcap:metadata:123e4567-e89b-12d3-a456-426614174000", "schema": "urn:blue:schema.image"}, {"aspect": "{...}", "aspect-context": "{...}", "entity": "urn:blue:transect.1", "id": "urn:ivcap:metadata:123e4567-e89b-12d3-a456-426614174000", "schema": "urn:blue:schema.image"}], "links": [{"href": "https://api.ivcap.net/1/....", "rel": "self", "type": "application/json"}, {"href": "https://api.ivcap.net/1/....", "rel": "first", "type": "application/json"}, {"href": "https://api.ivcap.net/1/....", "rel": "next", "type": "application/json"}, {"href": "https://api.ivcap.net/1/openapi/openapi3.json#/components/schemas/user", "rel": "describedBy", "type": "application/openapi3+json"}], "schema": "urn:blue:image,urn:blue:location"}}}}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}, "example": {"id": "123e4567-e89b-12d3-a456-426614174000", "message": "Perspiciatis sit."}}}}, "422": {"description": "invalid-parameter: Request contained semantically wrong parameter value", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidParameterValue"}, "example": {"message": "Culpa rerum ut sit.", "name": "Unde ut eveniet voluptate dolor eligendi quia.", "value": "Magni sapiente minima."}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}, "example": {"message": "In unde soluta alias quibusdam accusantium."}}}}}, "security": [{"jwt_header_Authorization": ["consumer:read"]}]}, "post": {"tags": ["metadata"], "summary": "add metadata", "description": "Attach new metadata to an entity.", "operationId": "metadata#add", "parameters": [{"name": "entity-id", "in": "query", "description": "Entity to which attach metadata", "allowEmptyValue": true, "required": true, "schema": {"type": "string", "description": "Entity to which attach metadata", "example": "http://mclaughlin.info/jeff", "format": "uri"}, "example": "http://kleinmaggio.org/sylvester_russel"}, {"name": "schema", "in": "query", "description": "Schema of metadata", "allowEmptyValue": true, "required": true, "schema": {"type": "string", "description": "Schema of metadata", "example": "http://mohrbailey.biz/hanna_waelchi", "format": "uri"}, "example": "http://doyle.name/sigrid_schuster"}, {"name": "policy-id", "in": "query", "description": "Policy guiding visibility and actions performed", "allowEmptyValue": true, "schema": {"type": "string", "description": "Policy guiding visibility and actions performed", "example": "http://morissette.org/dino.kunze", "format": "uri"}, "example": "http://brakusokeefe.net/larue"}, {"name": "Content-Type", "in": "header", "description": "Content-Type header, MUST be of application/json.", "allowEmptyValue": true, "required": true, "schema": {"type": "string", "description": "Content-Type header, MUST be of application/json.", "example": "application/json"}, "example": "application/json"}], "requestBody": {"description": "Aspect content", "required": true, "content": {"application/json": {"schema": {"type": "string", "description": "Aspect content", "example": "{\"$schema\": ...}", "format": "binary"}, "example": "{\"$schema\": ...}"}}}, "responses": {"200": {"description": "OK response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AddMetaRT"}, "example": {"record-id": "urn:ivcap:record.123e4567-e89b-12d3-a456-426614174000"}}}}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}, "example": {"id": "123e4567-e89b-12d3-a456-426614174000", "message": "Numquam perspiciatis cumque quo."}}}}, "422": {"description": "invalid-parameter: Request contained semantically wrong parameter value", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidParameterValue"}, "example": {"message": "Deserunt pariatur eligendi.", "name": "Provident perferendis ipsum cumque earum animi repudiandae.", "value": "Distinctio soluta ipsa."}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}, "example": {"message": "Labore officiis."}}}}}, "security": [{"jwt_header_Authorization": ["consumer:write"]}]}}, "/1/metadata/{id}": {"delete": {"tags": ["metadata"], "summary": "revoke metadata", "description": "Retract a previously created statement.", "operationId": "metadata#revoke", "parameters": [{"name": "id", "in": "path", "description": "Record ID to restract", "required": true, "schema": {"type": "string", "description": "Record ID to restract", "example": "urn:ivcap:record.53cbb715-4ffd-4158-9e55-5d0ae69605a4", "format": "uri"}, "example": "urn:ivcap:record.53cbb715-4ffd-4158-9e55-5d0ae69605a4"}], "responses": {"204": {"description": "No Content response."}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}, "example": {"id": "123e4567-e89b-12d3-a456-426614174000", "message": "Ducimus consequuntur et explicabo rerum aut."}}}}, "422": {"description": "invalid-parameter: Request contained semantically wrong parameter value", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidParameterValue"}, "example": {"message": "Quo commodi sapiente cum odit.", "name": "Nihil cumque.", "value": "Et minima dolore sed."}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}, "example": {"message": "Alias non expedita aut quisquam ipsam odio."}}}}}, "security": [{"jwt_header_Authorization": ["consumer:write"]}]}, "get": {"tags": ["metadata"], "summary": "read metadata", "description": "Show metadata by ID", "operationId": "metadata#read", "parameters": [{"name": "id", "in": "path", "description": "ID of metadata to show", "required": true, "schema": {"type": "string", "description": "ID of metadata to show", "example": "urn:ivcap:metadata"}, "example": "urn:ivcap:metadata"}], "responses": {"200": {"description": "OK response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/MetadataRecordRT"}, "example": {"aspect": "{...}", "asserter": "urn:ivcap:principal:123e4567-e89b-12d3-a456-426614174000", "entity": "urn:blue:transect.1", "id": "urn:ivcap:record:123e4567-e89b-12d3-a456-426614174000", "links": [{"href": "https://api.ivcap.net/1/....", "rel": "self", "type": "application/json"}, {"href": "https://api.ivcap.net/1/openapi/openapi3.json#/components/schemas/user", "rel": "describedBy", "type": "application/json"}], "revoker": "urn:ivcap:principal:123e4567-e89b-12d3-a456-426614174000", "schema": "urn:blue:schema.image", "valid-from": "1996-12-19T16:39:57-08:00", "valid-to": "1996-12-19T16:39:57-08:00"}}}}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}, "example": {"id": "123e4567-e89b-12d3-a456-426614174000", "message": "Distinctio deleniti cumque et quas rem repellendus."}}}}, "404": {"description": "not-found: metadata not found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ResourceNotFoundT"}, "example": {"id": "cayp:type:123e4567-e89b-12d3-a456-426614174000", "message": "Resource 123...00 not found"}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}, "example": {"message": "Sequi inventore exercitationem dignissimos."}}}}}, "security": [{"jwt_header_Authorization": ["consumer:read"]}]}, "put": {"tags": ["metadata"], "summary": "update_record metadata", "description": "Revoke this record and create a new one with the information provided.\n\t\t\tFor any field not provided, the value from the current record is used.", "operationId": "metadata#update_record", "parameters": [{"name": "entity-id", "in": "query", "description": "Entity to which attach metadata", "allowEmptyValue": true, "schema": {"type": "string", "description": "Entity to which attach metadata", "example": "urn:url:....", "format": "uri"}, "example": "urn:url:...."}, {"name": "schema", "in": "query", "description": "Schema of metadata", "allowEmptyValue": true, "schema": {"type": "string", "description": "Schema of metadata", "example": "urn:url:....", "format": "uri"}, "example": "urn:url:...."}, {"name": "policy-id", "in": "query", "description": "Policy guiding visibility and actions performed", "allowEmptyValue": true, "schema": {"type": "string", "description": "Policy guiding visibility and actions performed", "example": "http://koelpin.com/derrick_adams", "format": "uri"}, "example": "http://hamillcrona.org/bret.herzog"}, {"name": "id", "in": "path", "description": "Record ID to update", "required": true, "schema": {"type": "string", "description": "Record ID to update", "example": "urn:ivcap:record.53cbb715-4ffd-4158-9e55-5d0ae69605a4", "format": "uri"}, "example": "urn:ivcap:record.53cbb715-4ffd-4158-9e55-5d0ae69605a4"}, {"name": "Content-Type", "in": "header", "description": "Content-Type header, MUST be of application/json.", "allowEmptyValue": true, "schema": {"type": "string", "description": "Content-Type header, MUST be of application/json.", "example": "application/json"}, "example": "application/json"}], "requestBody": {"description": "Aspect content", "required": true, "content": {"application/json": {"schema": {"type": "string", "description": "Aspect content", "example": "{\"$schema\": ...}", "format": "binary"}, "example": "{\"$schema\": ...}"}}}, "responses": {"200": {"description": "OK response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AddMetaRT"}, "example": {"record-id": "urn:ivcap:record.123e4567-e89b-12d3-a456-426614174000"}}}}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}, "example": {"id": "123e4567-e89b-12d3-a456-426614174000", "message": "Nihil inventore sint neque necessitatibus."}}}}, "422": {"description": "invalid-parameter: Request contained semantically wrong parameter value", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidParameterValue"}, "example": {"message": "Dolores sit expedita.", "name": "Odio et sit.", "value": "Eos ut accusantium id est."}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}, "example": {"message": "Quia odit earum."}}}}}, "security": [{"jwt_header_Authorization": ["consumer:write"]}]}}, "/1/openapi/openapi3.json": {"get": {"tags": ["openapi"], "summary": "Download /public/openapi3.json", "description": "JSON document containing the API swagger definition", "operationId": "openapi#/1/openapi/openapi3.json", "responses": {"200": {"description": "File downloaded"}}}}, "/1/orders": {"get": {"tags": ["order"], "summary": "list order", "description": "list orders", "operationId": "order#list", "parameters": [{"name": "limit", "in": "query", "description": "The $limit system query option requests the number of items in the queried\n\t\t\t\tcollection to be included in the result.", "allowEmptyValue": true, "schema": {"type": "integer", "description": "The $limit system query option requests the number of items in the queried\n\t\t\t\tcollection to be included in the result.", "default": 10, "example": 10, "minimum": 1, "maximum": 50}, "example": 10}, {"name": "page", "in": "query", "description": "The content of 'page' is returned in the 'links' part of a previous query and\n\t\t\t\twill when set, ALL other parameters, except for 'limit' are ignored.", "allowEmptyValue": true, "schema": {"type": "string", "description": "The content of 'page' is returned in the 'links' part of a previous query and\n\t\t\t\twill when set, ALL other parameters, except for 'limit' are ignored.", "example": "gdsgQwhdgd"}, "example": "gdsgQwhdgd"}, {"name": "filter", "in": "query", "description": "The 'filter' system query option allows clients to filter a collection of\n\t\t\t\tresources that are addressed by a request URL. The expression specified with 'filter'\n\t\t\t\tis evaluated for each resource in the collection, and only items where the expression\n\t\t\t\tevaluates to true are included in the response.", "allowEmptyValue": true, "schema": {"type": "string", "description": "The 'filter' system query option allows clients to filter a collection of\n\t\t\t\tresources that are addressed by a request URL. The expression specified with 'filter'\n\t\t\t\tis evaluated for each resource in the collection, and only items where the expression\n\t\t\t\tevaluates to true are included in the response.", "example": "name ~= 'Scott%'"}, "example": "name ~= 'Scott%'"}, {"name": "order-by", "in": "query", "description": "The 'orderby' query option allows clients to request resources in either\n\t\t\t\tascending order using asc or descending order using desc. If asc or desc not specified,\n\t\t\t\tthen the resources will be ordered in ascending order. The request below orders Trips on\n\t\t\t\tproperty EndsAt in descending order.", "allowEmptyValue": true, "schema": {"type": "string", "description": "The 'orderby' query option allows clients to request resources in either\n\t\t\t\tascending order using asc or descending order using desc. If asc or desc not specified,\n\t\t\t\tthen the resources will be ordered in ascending order. The request below orders Trips on\n\t\t\t\tproperty EndsAt in descending order.", "example": "orderby=EndsAt"}, "example": "orderby=EndsAt"}, {"name": "order-desc", "in": "query", "description": "When set order result in descending order. Ascending order is the lt.", "allowEmptyValue": true, "schema": {"type": "boolean", "description": "When set order result in descending order. Ascending order is the lt.", "default": false, "example": false}, "example": true}, {"name": "at-time", "in": "query", "description": "Return the state of the respective resources at that time [now]", "allowEmptyValue": true, "schema": {"type": "string", "description": "Return the state of the respective resources at that time [now]", "example": "1996-12-19T16:39:57-08:00", "format": "date-time"}, "example": "1996-12-19T16:39:57-08:00"}], "responses": {"200": {"description": "OK response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/OrderListRT"}, "example": {"at-time": "1996-12-19T16:39:57-08:00", "items": [{"account": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "finished-at": "1996-12-19T16:39:57-08:00", "href": "https://api.ivcap.net/1/orders/...", "id": "urn:ivcap:order:123e4567-e89b-12d3-a456-426614174000", "name": "Fire risk for Lot2", "ordered-at": "1996-12-19T16:39:57-08:00", "service": "urn:ivcap:service:123e4567-e89b-12d3-a456-426614174000", "started-at": "1996-12-19T16:39:57-08:00", "status": "error"}, {"account": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "finished-at": "1996-12-19T16:39:57-08:00", "href": "https://api.ivcap.net/1/orders/...", "id": "urn:ivcap:order:123e4567-e89b-12d3-a456-426614174000", "name": "Fire risk for Lot2", "ordered-at": "1996-12-19T16:39:57-08:00", "service": "urn:ivcap:service:123e4567-e89b-12d3-a456-426614174000", "started-at": "1996-12-19T16:39:57-08:00", "status": "error"}, {"account": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "finished-at": "1996-12-19T16:39:57-08:00", "href": "https://api.ivcap.net/1/orders/...", "id": "urn:ivcap:order:123e4567-e89b-12d3-a456-426614174000", "name": "Fire risk for Lot2", "ordered-at": "1996-12-19T16:39:57-08:00", "service": "urn:ivcap:service:123e4567-e89b-12d3-a456-426614174000", "started-at": "1996-12-19T16:39:57-08:00", "status": "error"}], "links": [{"href": "https://api.ivcap.net/1/....", "rel": "self", "type": "application/json"}, {"href": "https://api.ivcap.net/1/....", "rel": "first", "type": "application/json"}, {"href": "https://api.ivcap.net/1/....", "rel": "next", "type": "application/json"}, {"href": "https://api.ivcap.net/1/openapi/openapi3.json#/components/schemas/user", "rel": "describedBy", "type": "application/openapi3+json"}]}}}}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}, "example": {"id": "123e4567-e89b-12d3-a456-426614174000", "message": "Non non architecto voluptatibus fuga alias."}}}}, "422": {"description": "invalid-parameter: Request contained semantically wrong parameter value", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidParameterValue"}, "example": {"message": "Dignissimos qui expedita quia deserunt veritatis.", "name": "Voluptas odit aut quod nihil aperiam eligendi.", "value": "Enim ut fugit possimus pariatur non explicabo."}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}, "example": {"message": "Ut sit quaerat doloremque."}}}}}, "security": [{"jwt_header_Authorization": ["consumer:read"]}]}, "post": {"tags": ["order"], "summary": "create order", "description": "Create a new orders and return its status.", "operationId": "order#create", "requestBody": {"description": "New orders description", "required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/OrderRequestT"}, "example": {"name": "Fire risk for Lot2", "parameters": [{"name": "region", "value": "Upper Valley"}, {"name": "threshold", "value": "10"}], "policy": "urn:ivcap:policy:123e4567-e89b-12d3-a456-426614174000", "service": "urn:ivcap:service:123e4567-e89b-12d3-a456-426614174000", "tags": ["tag1", "tag2"]}}}}, "responses": {"200": {"description": "OK response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/OrderStatusRT"}, "example": {"account": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "finished-at": "1996-12-19T16:39:57-08:00", "id": "urn:ivcap:order:123e4567-e89b-12d3-a456-426614174000", "links": [{"href": "https://api.ivcap.net/1/....", "rel": "self", "type": "application/json"}, {"href": "https://api.ivcap.net/1/openapi/openapi3.json#/components/schemas/user", "rel": "describedBy", "type": "application/json"}], "name": "Fire risk for Lot2", "ordered-at": "1996-12-19T16:39:57-08:00", "parameters": [{"name": "region", "value": "Upper Valley"}, {"name": "threshold", "value": "10"}], "products": {"items": [{"data-href": "https:/.../1/artifacts/0000-00001220/blob", "href": "https:/.../1/artifacts/0000-00001220", "mime-type": "image/geo+tiff", "name": "fire risk map", "size": 1234963}], "links": [{"href": "https://api.ivcap.net/1/....", "rel": "next"}]}, "service": "urn:ivcap:service:123e4567-e89b-12d3-a456-426614174000", "started-at": "1996-12-19T16:39:57-08:00", "status": "succeeded", "tags": ["tag1", "tag2"]}}}}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}, "example": {"id": "123e4567-e89b-12d3-a456-426614174000", "message": "Voluptatem magni corrupti reiciendis est."}}}}, "404": {"description": "not-found:  not found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ResourceNotFoundT"}, "example": {"id": "cayp:type:123e4567-e89b-12d3-a456-426614174000", "message": "Resource 123...00 not found"}}}}, "422": {"description": "invalid-parameter: Request contained semantically wrong parameter value", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidParameterValue"}, "example": {"message": "Esse rerum vitae et commodi.", "name": "Ea minus.", "value": "Consequatur sed."}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}, "example": {"message": "Sed rerum."}}}}, "503": {"description": "not-available: service currently not available"}}, "security": [{"jwt_header_Authorization": ["consumer:write"]}]}}, "/1/orders/logs": {"post": {"tags": ["order"], "summary": "logs order", "description": "download order logs", "operationId": "order#logs", "requestBody": {"description": "Download orders request", "required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/DownloadLogRequestT"}, "example": {"container-name": "main", "from": 1257894000, "namespace-name": "ivcap-develop-runner", "order": "urn:ivcap:order:123e4567-e89b-12d3-a456-426614174000", "to": 1257894000}}}}, "responses": {"200": {"description": "OK response.", "content": {"application/json": {"schema": {"type": "string", "format": "binary"}}}}, "400": {"description": "invalid-credential: Provided credential is not valid", "content": {"application/json": {"schema": {"type": "string", "format": "binary"}}}}, "401": {"description": "not-authorized: unauthorized access request", "content": {"application/json": {"schema": {"type": "string", "format": "binary"}}}}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}, "example": {"id": "123e4567-e89b-12d3-a456-426614174000", "message": "Ut soluta qui."}}}}, "404": {"description": "not-found:  not found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ResourceNotFoundT"}, "example": {"id": "cayp:type:123e4567-e89b-12d3-a456-426614174000", "message": "Resource 123...00 not found"}}}}, "422": {"description": "invalid-parameter: Request contained semantically wrong parameter value", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidParameterValue"}, "example": {"message": "Quia quis aut quia veniam est dignissimos.", "name": "Rem incidunt dolorum vitae magni.", "value": "Dolore et soluta."}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}, "example": {"message": "Id iure soluta."}}}}}, "security": [{"jwt_header_Authorization": ["consumer:read"]}]}}, "/1/orders/top": {"post": {"tags": ["order"], "summary": "top order", "description": "top order resources", "operationId": "order#top", "requestBody": {"description": "orders order request", "required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/OrderTopRequestT"}, "example": {"namespace-name": "ivcap-develop-runner", "order": "urn:ivcap:order:123e4567-e89b-12d3-a456-426614174000"}}}}, "responses": {"200": {"description": "OK response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/OrderTopResultItemCollection"}, "example": [{"container": "Quia itaque tempora.", "cpu": "Est soluta ut assumenda.", "ephemeral-storage": "Accusamus ea et recusandae.", "memory": "Non dolorum nihil esse officia a.", "storage": "Officiis et ea saepe."}, {"container": "Quia itaque tempora.", "cpu": "Est soluta ut assumenda.", "ephemeral-storage": "Accusamus ea et recusandae.", "memory": "Non dolorum nihil esse officia a.", "storage": "Officiis et ea saepe."}, {"container": "Quia itaque tempora.", "cpu": "Est soluta ut assumenda.", "ephemeral-storage": "Accusamus ea et recusandae.", "memory": "Non dolorum nihil esse officia a.", "storage": "Officiis et ea saepe."}]}}}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}, "example": {"id": "123e4567-e89b-12d3-a456-426614174000", "message": "Voluptatem explicabo aut adipisci."}}}}, "404": {"description": "not-found:  not found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ResourceNotFoundT"}, "example": {"id": "cayp:type:123e4567-e89b-12d3-a456-426614174000", "message": "Resource 123...00 not found"}}}}, "422": {"description": "invalid-parameter: Request contained semantically wrong parameter value", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidParameterValue"}, "example": {"message": "Ut unde fuga sed veniam qui et.", "name": "Autem deserunt sit architecto qui quidem.", "value": "Quae provident dolor amet nulla."}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}, "example": {"message": "Alias aut voluptas molestiae."}}}}}, "security": [{"jwt_header_Authorization": ["consumer:read"]}]}}, "/1/orders/{id}": {"get": {"tags": ["order"], "summary": "read order", "description": "Show orders by ID", "operationId": "order#read", "parameters": [{"name": "id", "in": "path", "description": "ID of orders to show", "required": true, "schema": {"type": "string", "description": "ID of orders to show", "example": "urn:ivcap:orders"}, "example": "urn:ivcap:orders"}], "responses": {"200": {"description": "OK response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/OrderStatusRT"}, "example": {"account": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "finished-at": "1996-12-19T16:39:57-08:00", "id": "urn:ivcap:order:123e4567-e89b-12d3-a456-426614174000", "links": [{"href": "https://api.ivcap.net/1/....", "rel": "self", "type": "application/json"}, {"href": "https://api.ivcap.net/1/openapi/openapi3.json#/components/schemas/user", "rel": "describedBy", "type": "application/json"}], "name": "Fire risk for Lot2", "ordered-at": "1996-12-19T16:39:57-08:00", "parameters": [{"name": "region", "value": "Upper Valley"}, {"name": "threshold", "value": "10"}], "products": {"items": [{"data-href": "https:/.../1/artifacts/0000-00001220/blob", "href": "https:/.../1/artifacts/0000-00001220", "mime-type": "image/geo+tiff", "name": "fire risk map", "size": 1234963}], "links": [{"href": "https://api.ivcap.net/1/....", "rel": "next"}]}, "service": "urn:ivcap:service:123e4567-e89b-12d3-a456-426614174000", "started-at": "1996-12-19T16:39:57-08:00", "status": "succeeded", "tags": ["tag1", "tag2"]}}}}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}, "example": {"id": "123e4567-e89b-12d3-a456-426614174000", "message": "Assumenda dicta iste sit sint minima est."}}}}, "404": {"description": "not-found: orders not found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ResourceNotFoundT"}, "example": {"id": "cayp:type:123e4567-e89b-12d3-a456-426614174000", "message": "Resource 123...00 not found"}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}, "example": {"message": "Aut et."}}}}}, "security": [{"jwt_header_Authorization": ["consumer:read"]}]}}, "/1/services": {"get": {"tags": ["service"], "summary": "list service", "description": "list services", "operationId": "service#list", "parameters": [{"name": "limit", "in": "query", "description": "The $limit system query option requests the number of items in the queried\n\t\t\t\tcollection to be included in the result.", "allowEmptyValue": true, "schema": {"type": "integer", "description": "The $limit system query option requests the number of items in the queried\n\t\t\t\tcollection to be included in the result.", "default": 10, "example": 10, "minimum": 1, "maximum": 50}, "example": 10}, {"name": "page", "in": "query", "description": "The content of 'page' is returned in the 'links' part of a previous query and\n\t\t\t\twill when set, ALL other parameters, except for 'limit' are ignored.", "allowEmptyValue": true, "schema": {"type": "string", "description": "The content of 'page' is returned in the 'links' part of a previous query and\n\t\t\t\twill when set, ALL other parameters, except for 'limit' are ignored.", "example": "gdsgQwhdgd"}, "example": "gdsgQwhdgd"}, {"name": "filter", "in": "query", "description": "The 'filter' system query option allows clients to filter a collection of\n\t\t\t\tresources that are addressed by a request URL. The expression specified with 'filter'\n\t\t\t\tis evaluated for each resource in the collection, and only items where the expression\n\t\t\t\tevaluates to true are included in the response.", "allowEmptyValue": true, "schema": {"type": "string", "description": "The 'filter' system query option allows clients to filter a collection of\n\t\t\t\tresources that are addressed by a request URL. The expression specified with 'filter'\n\t\t\t\tis evaluated for each resource in the collection, and only items where the expression\n\t\t\t\tevaluates to true are included in the response.", "example": "name ~= 'Scott%'"}, "example": "name ~= 'Scott%'"}, {"name": "order-by", "in": "query", "description": "The 'orderby' query option allows clients to request resources in either\n\t\t\t\tascending order using asc or descending order using desc. If asc or desc not specified,\n\t\t\t\tthen the resources will be ordered in ascending order. The request below orders Trips on\n\t\t\t\tproperty EndsAt in descending order.", "allowEmptyValue": true, "schema": {"type": "string", "description": "The 'orderby' query option allows clients to request resources in either\n\t\t\t\tascending order using asc or descending order using desc. If asc or desc not specified,\n\t\t\t\tthen the resources will be ordered in ascending order. The request below orders Trips on\n\t\t\t\tproperty EndsAt in descending order.", "example": "orderby=EndsAt"}, "example": "orderby=EndsAt"}, {"name": "order-desc", "in": "query", "description": "When set order result in descending order. Ascending order is the lt.", "allowEmptyValue": true, "schema": {"type": "boolean", "description": "When set order result in descending order. Ascending order is the lt.", "default": false, "example": false}, "example": false}, {"name": "at-time", "in": "query", "description": "Return the state of the respective resources at that time [now]", "allowEmptyValue": true, "schema": {"type": "string", "description": "Return the state of the respective resources at that time [now]", "example": "1996-12-19T16:39:57-08:00", "format": "date-time"}, "example": "1996-12-19T16:39:57-08:00"}], "responses": {"200": {"description": "OK response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ServiceListRT"}, "example": {"at-time": "1996-12-19T16:39:57-08:00", "items": [{"account": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "description": "Some lengthy description of fire risk", "href": "https://api.ivcap.net/1/services/...", "id": "urn:ivcap:order:123e4567-e89b-12d3-a456-426614174000", "name": "Fire risk for region"}, {"account": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "description": "Some lengthy description of fire risk", "href": "https://api.ivcap.net/1/services/...", "id": "urn:ivcap:order:123e4567-e89b-12d3-a456-426614174000", "name": "Fire risk for region"}, {"account": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "description": "Some lengthy description of fire risk", "href": "https://api.ivcap.net/1/services/...", "id": "urn:ivcap:order:123e4567-e89b-12d3-a456-426614174000", "name": "Fire risk for region"}], "links": [{"href": "https://api.ivcap.net/1/....", "rel": "self", "type": "application/json"}, {"href": "https://api.ivcap.net/1/....", "rel": "first", "type": "application/json"}, {"href": "https://api.ivcap.net/1/....", "rel": "next", "type": "application/json"}, {"href": "https://api.ivcap.net/1/openapi/openapi3.json#/components/schemas/user", "rel": "describedBy", "type": "application/openapi3+json"}]}}}}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}, "example": {"id": "123e4567-e89b-12d3-a456-426614174000", "message": "Distinctio consequatur aut voluptas deserunt et vel."}}}}, "422": {"description": "invalid-parameter: Request contained semantically wrong parameter value", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidParameterValue"}, "example": {"message": "Fuga dicta eos officiis architecto vel.", "name": "Doloremque voluptatem.", "value": "Iste saepe repellendus non consequuntur."}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}, "example": {"message": "Iure beatae libero magnam culpa nulla."}}}}}, "security": [{"jwt_header_Authorization": ["consumer:read"]}]}, "post": {"tags": ["service"], "summary": "create_service service", "description": "Create a new services and return its status.", "operationId": "service#create_service", "requestBody": {"description": "New services description", "required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ServiceDefinitionT"}, "example": {"banner": "http://romaguera.net/leonel", "description": "This service ...", "name": "Fire risk for Lot2", "parameters": [{"description": "The name of the region as according to ...", "label": "Region Name", "name": "region", "type": "string"}, {"label": "Rainfall/month threshold", "name": "threshold", "type": "float", "unit": "m"}], "policy": "urn:ivcap:policy:123e4567-e89b-12d3-a456-426614174000", "references": [{"title": "Sint aut ut magni voluptatem quae.", "uri": "http://gerhold.net/ralph"}, {"title": "Sint aut ut magni voluptatem quae.", "uri": "http://gerhold.net/ralph"}, {"title": "Sint aut ut magni voluptatem quae.", "uri": "http://gerhold.net/ralph"}, {"title": "Sint aut ut magni voluptatem quae.", "uri": "http://gerhold.net/ralph"}], "tags": ["tag1", "tag2"], "workflow": {"argo": "Modi inventore voluptatem.", "basic": {"command": ["/bin/sh", "-c", "echo $PATH"], "cpu": {"limit": "100m", "request": "10m"}, "ephemeral-storage": {"limit": "4Gi", "request": "2Gi"}, "image": "alpine", "memory": {"limit": "100Mi", "request": "10Mi"}}, "opts": "Vel et voluptas voluptatem ea.", "type": "basic"}}}}}, "responses": {"201": {"description": "Created response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ServiceStatusRT"}, "example": {"account": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "description": "This service ...", "id": "urn:ivcap:service:123e4567-e89b-12d3-a456-426614174000", "links": [{"href": "https://api.ivcap.net/1/....", "rel": "self", "type": "application/json"}, {"href": "https://api.ivcap.net/1/openapi/openapi3.json#/components/schemas/user", "rel": "describedBy", "type": "application/json"}], "name": "Fire risk for Lot2", "parameters": [{"description": "The name of the region as according to ...", "label": "Region Name", "name": "region", "type": "string"}, {"label": "Rainfall/month threshold", "name": "threshold", "type": "float", "unit": "m"}], "status": "error", "tags": ["tag1", "tag2"]}}}}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}, "example": {"id": "123e4567-e89b-12d3-a456-426614174000", "message": "Laborum incidunt nihil molestias ut at eligendi."}}}}, "404": {"description": "not-found:  not found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ResourceNotFoundT"}, "example": {"id": "cayp:type:123e4567-e89b-12d3-a456-426614174000", "message": "Resource 123...00 not found"}}}}, "409": {"description": "already-created: Resource already exists", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ResourceNotFoundT"}, "example": {"id": "cayp:type:123e4567-e89b-12d3-a456-426614174000", "message": "Resource 123...00 already exists"}}}}, "422": {"description": "invalid-parameter: Request contained semantically wrong parameter value", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidParameterValue"}, "example": {"message": "Praesentium autem quis sit inventore et.", "name": "Eum nam laudantium laboriosam eum accusamus sequi.", "value": "Maxime magnam blanditiis."}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}, "example": {"message": "Fugiat repudiandae mollitia aliquam labore."}}}}}, "security": [{"jwt_header_Authorization": ["consumer:write"]}]}}, "/1/services/{id}": {"delete": {"tags": ["service"], "summary": "delete service", "description": "Delete an existing services.", "operationId": "service#delete", "parameters": [{"name": "id", "in": "path", "description": "ID of services to update", "required": true, "schema": {"type": "string", "description": "ID of services to update", "example": "Molestiae ut dolorem dolores."}, "example": "Nisi numquam autem assumenda totam."}], "responses": {"204": {"description": "No Content response."}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}, "example": {"id": "123e4567-e89b-12d3-a456-426614174000", "message": "Et nobis."}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}, "example": {"message": "Perspiciatis animi facilis eum beatae mollitia."}}}}}, "security": [{"jwt_header_Authorization": ["consumer:write"]}]}, "get": {"tags": ["service"], "summary": "read service", "description": "Show services by ID", "operationId": "service#read", "parameters": [{"name": "id", "in": "path", "description": "ID of services to show", "required": true, "schema": {"type": "string", "description": "ID of services to show", "example": "urn:ivcap:services"}, "example": "urn:ivcap:services"}], "responses": {"200": {"description": "OK response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ServiceStatusRT"}, "example": {"account": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "description": "This service ...", "id": "urn:ivcap:service:123e4567-e89b-12d3-a456-426614174000", "links": [{"href": "https://api.ivcap.net/1/....", "rel": "self", "type": "application/json"}, {"href": "https://api.ivcap.net/1/openapi/openapi3.json#/components/schemas/user", "rel": "describedBy", "type": "application/json"}], "name": "Fire risk for Lot2", "parameters": [{"description": "The name of the region as according to ...", "label": "Region Name", "name": "region", "type": "string"}, {"label": "Rainfall/month threshold", "name": "threshold", "type": "float", "unit": "m"}], "status": "active", "tags": ["tag1", "tag2"]}}}}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}, "example": {"id": "123e4567-e89b-12d3-a456-426614174000", "message": "Suscipit atque exercitationem nobis."}}}}, "404": {"description": "not-found: services not found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ResourceNotFoundT"}, "example": {"id": "cayp:type:123e4567-e89b-12d3-a456-426614174000", "message": "Resource 123...00 not found"}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}, "example": {"message": "Voluptate quia nihil facilis alias."}}}}}, "security": [{"jwt_header_Authorization": ["consumer:read"]}]}, "put": {"tags": ["service"], "summary": "update service", "description": "Update an existing services and return its status.", "operationId": "service#update", "parameters": [{"name": "force-create", "in": "query", "description": "Create if not already exist", "allowEmptyValue": true, "schema": {"type": "boolean", "description": "Create if not already exist", "example": true}, "example": false}, {"name": "id", "in": "path", "description": "ID of services to update", "required": true, "schema": {"type": "string", "description": "ID of services to update", "example": "Eligendi et."}, "example": "Molestiae dolor non nobis eos."}], "requestBody": {"description": "Updated services description", "required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ServiceDefinitionT"}, "example": {"banner": "http://smith.name/giuseppe_turner", "description": "This service ...", "name": "Fire risk for Lot2", "parameters": [{"description": "The name of the region as according to ...", "label": "Region Name", "name": "region", "type": "string"}, {"label": "Rainfall/month threshold", "name": "threshold", "type": "float", "unit": "m"}], "policy": "urn:ivcap:policy:123e4567-e89b-12d3-a456-426614174000", "references": [{"title": "Sint aut ut magni voluptatem quae.", "uri": "http://gerhold.net/ralph"}, {"title": "Sint aut ut magni voluptatem quae.", "uri": "http://gerhold.net/ralph"}, {"title": "Sint aut ut magni voluptatem quae.", "uri": "http://gerhold.net/ralph"}], "tags": ["tag1", "tag2"], "workflow": {"argo": "Modi inventore voluptatem.", "basic": {"command": ["/bin/sh", "-c", "echo $PATH"], "cpu": {"limit": "100m", "request": "10m"}, "ephemeral-storage": {"limit": "4Gi", "request": "2Gi"}, "image": "alpine", "memory": {"limit": "100Mi", "request": "10Mi"}}, "opts": "Vel et voluptas voluptatem ea.", "type": "basic"}}}}}, "responses": {"200": {"description": "OK response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ServiceStatusRT"}, "example": {"account": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "description": "This service ...", "id": "urn:ivcap:service:123e4567-e89b-12d3-a456-426614174000", "links": [{"href": "https://api.ivcap.net/1/....", "rel": "self", "type": "application/json"}, {"href": "https://api.ivcap.net/1/openapi/openapi3.json#/components/schemas/user", "rel": "describedBy", "type": "application/json"}], "name": "Fire risk for Lot2", "parameters": [{"description": "The name of the region as according to ...", "label": "Region Name", "name": "region", "type": "string"}, {"label": "Rainfall/month threshold", "name": "threshold", "type": "float", "unit": "m"}], "status": "inactive", "tags": ["tag1", "tag2"]}}}}, "400": {"description": "invalid-credential: Provided credential is not valid"}, "401": {"description": "not-authorized: unauthorized access request"}, "403": {"description": "invalid-scopes: Token scopes are invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidScopesT"}, "example": {"id": "123e4567-e89b-12d3-a456-426614174000", "message": "Fuga facere minus aliquid."}}}}, "404": {"description": "not-found:  not found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ResourceNotFoundT"}, "example": {"id": "cayp:type:123e4567-e89b-12d3-a456-426614174000", "message": "Resource 123...00 not found"}}}}, "422": {"description": "invalid-parameter: Request contained semantically wrong parameter value", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/InvalidParameterValue"}, "example": {"message": "Dolores corrupti.", "name": "Iusto illo voluptate aut qui.", "value": "Quod est."}}}}, "501": {"description": "not-implemented: Method is not yet implemented", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NotImplementedT"}, "example": {"message": "Magnam repellendus nihil."}}}}}, "security": [{"jwt_header_Authorization": ["consumer:write"]}]}}}, "components": {"schemas": {"AddMetaRT": {"type": "object", "properties": {"record-id": {"type": "string", "description": "Reference to record created", "example": "urn:ivcap:record.123e4567-e89b-12d3-a456-426614174000", "format": "uri"}}, "example": {"record-id": "urn:ivcap:record.123e4567-e89b-12d3-a456-426614174000"}, "required": ["record-id"]}, "ArtifactListItem": {"type": "object", "properties": {"href": {"type": "string", "example": "https://api.ivcap.net/1/orders/..."}, "id": {"type": "string", "description": "ID", "example": "urn:ivcap:artifact:123e4567-e89b-12d3-a456-426614174000", "format": "uuid"}, "mime-type": {"type": "string", "description": "Mime (content) type of artifact", "example": "image/jpeg"}, "name": {"type": "string", "description": "Optional name", "example": "Fire risk for Lot2"}, "size": {"type": "integer", "description": "Size of artifact in bytes", "example": 19000, "format": "int64"}, "status": {"type": "string", "description": "Artifact status", "example": "ready", "enum": ["pending", "partial", "ready", "error", "unknown"]}}, "example": {"href": "https://api.ivcap.net/1/orders/...", "id": "urn:ivcap:artifact:123e4567-e89b-12d3-a456-426614174000", "mime-type": "image/jpeg", "name": "Fire risk for Lot2", "size": 19000, "status": "ready"}, "required": ["id", "status", "href"]}, "ArtifactListRT": {"type": "object", "properties": {"at-time": {"type": "string", "description": "Time at which this list was valid", "example": "1996-12-19T16:39:57-08:00", "format": "date-time"}, "items": {"type": "array", "items": {"$ref": "#/components/schemas/ArtifactListItem"}, "description": "Artifacts", "example": [{"href": "https://api.ivcap.net/1/orders/...", "id": "urn:ivcap:artifact:123e4567-e89b-12d3-a456-426614174000", "mime-type": "image/jpeg", "name": "Fire risk for Lot2", "size": 19000, "status": "ready"}, {"href": "https://api.ivcap.net/1/orders/...", "id": "urn:ivcap:artifact:123e4567-e89b-12d3-a456-426614174000", "mime-type": "image/jpeg", "name": "Fire risk for Lot2", "size": 19000, "status": "ready"}, {"href": "https://api.ivcap.net/1/orders/...", "id": "urn:ivcap:artifact:123e4567-e89b-12d3-a456-426614174000", "mime-type": "image/jpeg", "name": "Fire risk for Lot2", "size": 19000, "status": "ready"}, {"href": "https://api.ivcap.net/1/orders/...", "id": "urn:ivcap:artifact:123e4567-e89b-12d3-a456-426614174000", "mime-type": "image/jpeg", "name": "Fire risk for Lot2", "size": 19000, "status": "ready"}]}, "links": {"type": "array", "items": {"$ref": "#/components/schemas/LinkT"}, "example": [{"href": "https://api.ivcap.net/1/....", "rel": "self", "type": "application/json"}, {"href": "https://api.ivcap.net/1/....", "rel": "first", "type": "application/json"}, {"href": "https://api.ivcap.net/1/....", "rel": "next", "type": "application/json"}, {"href": "https://api.ivcap.net/1/openapi/openapi3.json#/components/schemas/user", "rel": "describedBy", "type": "application/openapi3+json"}]}}, "example": {"at-time": "1996-12-19T16:39:57-08:00", "items": [{"href": "https://api.ivcap.net/1/orders/...", "id": "urn:ivcap:artifact:123e4567-e89b-12d3-a456-426614174000", "mime-type": "image/jpeg", "name": "Fire risk for Lot2", "size": 19000, "status": "ready"}, {"href": "https://api.ivcap.net/1/orders/...", "id": "urn:ivcap:artifact:123e4567-e89b-12d3-a456-426614174000", "mime-type": "image/jpeg", "name": "Fire risk for Lot2", "size": 19000, "status": "ready"}, {"href": "https://api.ivcap.net/1/orders/...", "id": "urn:ivcap:artifact:123e4567-e89b-12d3-a456-426614174000", "mime-type": "image/jpeg", "name": "Fire risk for Lot2", "size": 19000, "status": "ready"}, {"href": "https://api.ivcap.net/1/orders/...", "id": "urn:ivcap:artifact:123e4567-e89b-12d3-a456-426614174000", "mime-type": "image/jpeg", "name": "Fire risk for Lot2", "size": 19000, "status": "ready"}], "links": [{"href": "https://api.ivcap.net/1/....", "rel": "self", "type": "application/json"}, {"href": "https://api.ivcap.net/1/....", "rel": "first", "type": "application/json"}, {"href": "https://api.ivcap.net/1/....", "rel": "next", "type": "application/json"}, {"href": "https://api.ivcap.net/1/openapi/openapi3.json#/components/schemas/user", "rel": "describedBy", "type": "application/openapi3+json"}]}, "required": ["items", "links"]}, "ArtifactStatusRT": {"type": "object", "properties": {"account": {"type": "string", "description": "Reference to billable account", "example": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "format": "uri"}, "cache-of": {"type": "string", "description": "URL of object this artifact is caching", "example": "Beatae blanditiis sed iusto."}, "created-at": {"type": "string", "description": "DateTime artifact was created", "example": "1996-12-19T16:39:57-08:00", "format": "date-time"}, "data-href": {"type": "string", "example": "https://api.ivcap.net/1/artifacts/.../blob"}, "etag": {"type": "string", "description": "ETAG of artifact", "example": "Dolor recusandae."}, "id": {"type": "string", "description": "Artifact ID", "example": "urn:ivcap:Artifact ID:123e4567-e89b-12d3-a456-426614174000", "format": "uri"}, "last-modified-at": {"type": "string", "description": "DateTime artifact was last modified", "example": "1996-12-19T16:39:57-08:00", "format": "date-time"}, "links": {"type": "array", "items": {"$ref": "#/components/schemas/LinkT"}, "example": [{"href": "https://api.ivcap.net/1/....", "rel": "self", "type": "application/json"}, {"href": "https://api.ivcap.net/1/openapi/openapi3.json#/components/schemas/user", "rel": "describedBy", "type": "application/json"}]}, "mime-type": {"type": "string", "description": "Mime-type of data", "example": "Et officia."}, "name": {"type": "string", "description": "Optional name", "example": "Fire risk per LGA"}, "policy": {"type": "string", "description": "Reference to policy used", "example": "urn:ivcap:policy:123e4567-e89b-12d3-a456-426614174000", "format": "uri"}, "size": {"type": "integer", "description": "Size of data", "example": 9085050740354476555, "format": "int64"}, "status": {"type": "string", "description": "Artifact status", "example": "ready", "enum": ["pending", "partial", "ready", "error", "unknown"]}}, "example": {"account": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "cache-of": "Commodi voluptas.", "created-at": "1996-12-19T16:39:57-08:00", "data-href": "https://api.ivcap.net/1/artifacts/.../blob", "etag": "Autem corporis consequatur quo ex mollitia.", "id": "urn:ivcap:Artifact ID:123e4567-e89b-12d3-a456-426614174000", "last-modified-at": "1996-12-19T16:39:57-08:00", "links": [{"href": "https://api.ivcap.net/1/....", "rel": "self", "type": "application/json"}, {"href": "https://api.ivcap.net/1/openapi/openapi3.json#/components/schemas/user", "rel": "describedBy", "type": "application/json"}], "mime-type": "Iure vero.", "name": "Fire risk per LGA", "policy": "urn:ivcap:policy:123e4567-e89b-12d3-a456-426614174000", "size": 5127541969220947892, "status": "error"}, "required": ["links", "id", "status"]}, "AspectIDRT": {"type": "object", "properties": {"id": {"type": "string", "description": "ID", "example": "urn:ivcap:aspect:123e4567-e89b-12d3-a456-426614174000", "format": "uuid"}}, "example": {"id": "urn:ivcap:aspect:123e4567-e89b-12d3-a456-426614174000"}, "required": ["id"]}, "AspectListItemRT": {"type": "object", "properties": {"content": {"type": "string", "description": "Attached aspect aspect", "example": "{...}", "format": "binary"}, "content-type": {"type": "string", "description": "Content-Type header, MUST be of application/json.", "example": "application/json"}, "entity": {"type": "string", "description": "Entity URN", "example": "urn:blue:transect.1", "format": "uri"}, "id": {"type": "string", "description": "ID", "example": "urn:ivcap:aspect:123e4567-e89b-12d3-a456-426614174000", "format": "uuid"}, "schema": {"type": "string", "description": "Schema URN", "example": "urn:blue:schema.image", "format": "uri"}}, "example": {"content": "{...}", "content-type": "application/json", "entity": "urn:blue:transect.1", "id": "urn:ivcap:aspect:123e4567-e89b-12d3-a456-426614174000", "schema": "urn:blue:schema.image"}, "required": ["id", "entity", "schema", "content", "content-type"]}, "AspectListRT": {"type": "object", "properties": {"aspect-path": {"type": "string", "description": "Optional json path to further filter on returned list", "example": "Libero ut nihil."}, "at-time": {"type": "string", "description": "Time at which this list was valid", "example": "1996-12-19T16:39:57-08:00", "format": "date-time"}, "entity": {"type": "string", "description": "Entity for which to request aspect", "example": "urn:blue:image.collA.12", "format": "uri"}, "items": {"type": "array", "items": {"$ref": "#/components/schemas/AspectListItemRT"}, "description": "List of aspect descriptions", "example": [{"content": "{...}", "content-type": "application/json", "entity": "urn:blue:transect.1", "id": "urn:ivcap:aspect:123e4567-e89b-12d3-a456-426614174000", "schema": "urn:blue:schema.image"}, {"content": "{...}", "content-type": "application/json", "entity": "urn:blue:transect.1", "id": "urn:ivcap:aspect:123e4567-e89b-12d3-a456-426614174000", "schema": "urn:blue:schema.image"}, {"content": "{...}", "content-type": "application/json", "entity": "urn:blue:transect.1", "id": "urn:ivcap:aspect:123e4567-e89b-12d3-a456-426614174000", "schema": "urn:blue:schema.image"}]}, "links": {"type": "array", "items": {"$ref": "#/components/schemas/LinkT"}, "example": [{"href": "https://api.ivcap.net/1/....", "rel": "self", "type": "application/json"}, {"href": "https://api.ivcap.net/1/....", "rel": "first", "type": "application/json"}, {"href": "https://api.ivcap.net/1/....", "rel": "next", "type": "application/json"}, {"href": "https://api.ivcap.net/1/openapi/openapi3.json#/components/schemas/user", "rel": "describedBy", "type": "application/openapi3+json"}]}, "schema": {"type": "string", "description": "Optional schema to filter on", "example": "urn:blue:image,urn:blue:location", "format": "uri"}}, "example": {"aspect-path": "Fugit pariatur numquam.", "at-time": "1996-12-19T16:39:57-08:00", "entity": "urn:blue:image.collA.12", "items": [{"content": "{...}", "content-type": "application/json", "entity": "urn:blue:transect.1", "id": "urn:ivcap:aspect:123e4567-e89b-12d3-a456-426614174000", "schema": "urn:blue:schema.image"}, {"content": "{...}", "content-type": "application/json", "entity": "urn:blue:transect.1", "id": "urn:ivcap:aspect:123e4567-e89b-12d3-a456-426614174000", "schema": "urn:blue:schema.image"}, {"content": "{...}", "content-type": "application/json", "entity": "urn:blue:transect.1", "id": "urn:ivcap:aspect:123e4567-e89b-12d3-a456-426614174000", "schema": "urn:blue:schema.image"}], "links": [{"href": "https://api.ivcap.net/1/....", "rel": "self", "type": "application/json"}, {"href": "https://api.ivcap.net/1/....", "rel": "first", "type": "application/json"}, {"href": "https://api.ivcap.net/1/....", "rel": "next", "type": "application/json"}, {"href": "https://api.ivcap.net/1/openapi/openapi3.json#/components/schemas/user", "rel": "describedBy", "type": "application/openapi3+json"}], "schema": "urn:blue:image,urn:blue:location"}, "required": ["items", "at-time", "links"]}, "AspectRT": {"type": "object", "properties": {"asserter": {"type": "string", "description": "Entity asserting this metadata record at 'valid-from'", "example": "urn:ivcap:principal:123e4567-e89b-12d3-a456-426614174000", "format": "uri"}, "content": {"type": "string", "description": "Description of aspect encoded as 'content-type'", "example": "{...}", "format": "binary"}, "content-type": {"type": "string", "description": "Content-Type header, MUST be of application/json.", "example": "application/json"}, "entity": {"type": "string", "description": "Entity URN", "example": "urn:blue:transect.1", "format": "uri"}, "id": {"type": "string", "description": "ID", "example": "urn:ivcap:record:123e4567-e89b-12d3-a456-426614174000", "format": "uuid"}, "links": {"type": "array", "items": {"$ref": "#/components/schemas/LinkT"}, "example": [{"href": "https://api.ivcap.net/1/....", "rel": "self", "type": "application/json"}, {"href": "https://api.ivcap.net/1/openapi/openapi3.json#/components/schemas/user", "rel": "describedBy", "type": "application/json"}]}, "retracter": {"type": "string", "description": "Entity retracting this record at 'valid-to'", "example": "urn:ivcap:principal:123e4567-e89b-12d3-a456-426614174000", "format": "uri"}, "schema": {"type": "string", "description": "Schema URN", "example": "urn:blue:schema.image", "format": "uri"}, "valid-from": {"type": "string", "description": "Time this record was asserted", "example": "1996-12-19T16:39:57-08:00", "format": "date-time"}, "valid-to": {"type": "string", "description": "Time this record was retracted", "example": "1996-12-19T16:39:57-08:00", "format": "date-time"}}, "example": {"asserter": "urn:ivcap:principal:123e4567-e89b-12d3-a456-426614174000", "content": "{...}", "content-type": "application/json", "entity": "urn:blue:transect.1", "id": "urn:ivcap:record:123e4567-e89b-12d3-a456-426614174000", "links": [{"href": "https://api.ivcap.net/1/....", "rel": "self", "type": "application/json"}, {"href": "https://api.ivcap.net/1/openapi/openapi3.json#/components/schemas/user", "rel": "describedBy", "type": "application/json"}], "retracter": "urn:ivcap:principal:123e4567-e89b-12d3-a456-426614174000", "schema": "urn:blue:schema.image", "valid-from": "1996-12-19T16:39:57-08:00", "valid-to": "1996-12-19T16:39:57-08:00"}, "required": ["links", "id", "entity", "schema", "content", "content-type", "valid-from", "asserter"]}, "BasicWorkflowOptsT": {"type": "object", "properties": {"command": {"type": "array", "items": {"type": "string", "example": "Impedit cupiditate et nihil esse aut."}, "description": "Command to start the container - needed for some container runtimes", "example": ["/bin/sh", "-c", "echo $PATH"]}, "cpu": {"$ref": "#/components/schemas/ResourceMemoryT"}, "ephemeral-storage": {"$ref": "#/components/schemas/ResourceMemoryT"}, "image": {"type": "string", "description": "container image name", "example": "alpine"}, "memory": {"$ref": "#/components/schemas/ResourceMemoryT"}}, "example": {"command": ["/bin/sh", "-c", "echo $PATH"], "cpu": {"limit": "100m", "request": "10m"}, "ephemeral-storage": {"limit": "4Gi", "request": "2Gi"}, "image": "alpine", "memory": {"limit": "100Mi", "request": "10Mi"}}, "required": ["image", "command"]}, "DownloadLogRequestT": {"type": "object", "properties": {"container-name": {"type": "string", "description": "Reference to container name", "example": "main"}, "from": {"type": "integer", "description": "From unix time, seconds since 1970-01-01", "example": 1257894000, "format": "int64"}, "namespace-name": {"type": "string", "description": "Reference to namespace name", "example": "ivcap-develop-runner"}, "order": {"type": "string", "description": "Reference to order", "example": "urn:ivcap:order:123e4567-e89b-12d3-a456-426614174000", "format": "uri"}, "to": {"type": "integer", "description": "To unix time, seconds since 1970-01-01", "example": 1257894000, "format": "int64"}}, "example": {"container-name": "main", "from": 1257894000, "namespace-name": "ivcap-develop-runner", "order": "urn:ivcap:order:123e4567-e89b-12d3-a456-426614174000", "to": 1257894000}, "required": ["order"]}, "InvalidParameterValue": {"type": "object", "properties": {"message": {"type": "string", "description": "message describing expected type or pattern.", "example": "Similique quisquam officia repudiandae quis numquam cumque."}, "name": {"type": "string", "description": "name of parameter.", "example": "Molestiae voluptates dolor atque."}, "value": {"type": "string", "description": "provided parameter value.", "example": "Architecto facere veniam dolorem velit quia."}}, "description": "Invalide parameter value", "example": {"message": "Sapiente possimus commodi qui sint aut.", "name": "Et magni.", "value": "Debitis reiciendis libero qui unde."}, "required": ["name", "message"]}, "InvalidScopesT": {"type": "object", "properties": {"id": {"type": "string", "description": "ID of involved resource", "example": "123e4567-e89b-12d3-a456-426614174000", "format": "uuid"}, "message": {"type": "string", "description": "Message of error", "default": "Not authorized to perform this action", "example": "Eos est vitae quos consequatur."}}, "description": "Token scopes are invalid", "example": {"id": "123e4567-e89b-12d3-a456-426614174000", "message": "Qui eum."}, "required": ["message"]}, "LinkT": {"type": "object", "properties": {"href": {"type": "string", "description": "web link", "example": "https://acme.com/.."}, "rel": {"type": "string", "description": "relation type", "example": "self, describedBy, next, first"}, "type": {"type": "string", "description": "mime type", "example": "application/json"}}, "example": {"href": "https://acme.com/..", "rel": "self, describedBy, next, first", "type": "application/json"}, "required": ["rel", "type", "href"]}, "ListMetaRT": {"type": "object", "properties": {"aspect-path": {"type": "string", "description": "Optional json path to further filter on returned list", "example": "Accusamus reiciendis incidunt."}, "at-time": {"type": "string", "description": "Time at which this list was valid", "example": "1996-12-19T16:39:57-08:00", "format": "date-time"}, "entity": {"type": "string", "description": "Entity for which to request metadata", "example": "urn:blue:image.collA.12", "format": "uri"}, "items": {"type": "array", "items": {"$ref": "#/components/schemas/MetadataListItemRT"}, "description": "List of metadata records", "example": [{"aspect": "{...}", "aspect-context": "{...}", "entity": "urn:blue:transect.1", "id": "urn:ivcap:metadata:123e4567-e89b-12d3-a456-426614174000", "schema": "urn:blue:schema.image"}, {"aspect": "{...}", "aspect-context": "{...}", "entity": "urn:blue:transect.1", "id": "urn:ivcap:metadata:123e4567-e89b-12d3-a456-426614174000", "schema": "urn:blue:schema.image"}]}, "links": {"type": "array", "items": {"$ref": "#/components/schemas/LinkT"}, "example": [{"href": "https://api.ivcap.net/1/....", "rel": "self", "type": "application/json"}, {"href": "https://api.ivcap.net/1/....", "rel": "first", "type": "application/json"}, {"href": "https://api.ivcap.net/1/....", "rel": "next", "type": "application/json"}, {"href": "https://api.ivcap.net/1/openapi/openapi3.json#/components/schemas/user", "rel": "describedBy", "type": "application/openapi3+json"}]}, "schema": {"type": "string", "description": "Optional schema to filter on", "example": "urn:blue:image,urn:blue:location", "format": "uri"}}, "example": {"aspect-path": "Sit pariatur.", "at-time": "1996-12-19T16:39:57-08:00", "entity": "urn:blue:image.collA.12", "items": [{"aspect": "{...}", "aspect-context": "{...}", "entity": "urn:blue:transect.1", "id": "urn:ivcap:metadata:123e4567-e89b-12d3-a456-426614174000", "schema": "urn:blue:schema.image"}, {"aspect": "{...}", "aspect-context": "{...}", "entity": "urn:blue:transect.1", "id": "urn:ivcap:metadata:123e4567-e89b-12d3-a456-426614174000", "schema": "urn:blue:schema.image"}, {"aspect": "{...}", "aspect-context": "{...}", "entity": "urn:blue:transect.1", "id": "urn:ivcap:metadata:123e4567-e89b-12d3-a456-426614174000", "schema": "urn:blue:schema.image"}, {"aspect": "{...}", "aspect-context": "{...}", "entity": "urn:blue:transect.1", "id": "urn:ivcap:metadata:123e4567-e89b-12d3-a456-426614174000", "schema": "urn:blue:schema.image"}], "links": [{"href": "https://api.ivcap.net/1/....", "rel": "self", "type": "application/json"}, {"href": "https://api.ivcap.net/1/....", "rel": "first", "type": "application/json"}, {"href": "https://api.ivcap.net/1/....", "rel": "next", "type": "application/json"}, {"href": "https://api.ivcap.net/1/openapi/openapi3.json#/components/schemas/user", "rel": "describedBy", "type": "application/openapi3+json"}], "schema": "urn:blue:image,urn:blue:location"}, "required": ["items", "links"]}, "MetadataListItemRT": {"type": "object", "properties": {"aspect": {"type": "object", "description": "Attached metadata aspect", "example": "{...}"}, "aspect-context": {"type": "string", "description": "If aspectPath was defined, this is what matched the query", "example": "{...}"}, "entity": {"type": "string", "description": "Entity ID", "example": "urn:blue:transect.1", "format": "uri"}, "id": {"type": "string", "description": "ID", "example": "urn:ivcap:metadata:123e4567-e89b-12d3-a456-426614174000", "format": "uuid"}, "schema": {"type": "string", "description": "Schema ID", "example": "urn:blue:schema.image", "format": "uri"}}, "example": {"aspect": "{...}", "aspect-context": "{...}", "entity": "urn:blue:transect.1", "id": "urn:ivcap:metadata:123e4567-e89b-12d3-a456-426614174000", "schema": "urn:blue:schema.image"}, "required": ["id", "entity", "schema"]}, "MetadataRecordRT": {"type": "object", "properties": {"aspect": {"type": "string", "description": "Attached metadata aspect", "example": "{...}", "format": "binary"}, "asserter": {"type": "string", "description": "Entity asserting this metadata record at 'valid-from'", "example": "urn:ivcap:principal:123e4567-e89b-12d3-a456-426614174000", "format": "uri"}, "entity": {"type": "string", "description": "Entity ID", "example": "urn:blue:transect.1", "format": "uri"}, "id": {"type": "string", "description": "ID", "example": "urn:ivcap:record:123e4567-e89b-12d3-a456-426614174000", "format": "uuid"}, "links": {"type": "array", "items": {"$ref": "#/components/schemas/LinkT"}, "example": [{"href": "https://api.ivcap.net/1/....", "rel": "self", "type": "application/json"}, {"href": "https://api.ivcap.net/1/openapi/openapi3.json#/components/schemas/user", "rel": "describedBy", "type": "application/json"}]}, "revoker": {"type": "string", "description": "Entity revoking this record at 'valid-to'", "example": "urn:ivcap:principal:123e4567-e89b-12d3-a456-426614174000", "format": "uri"}, "schema": {"type": "string", "description": "Schema ID", "example": "urn:blue:schema.image", "format": "uri"}, "valid-from": {"type": "string", "description": "Time this record was asserted", "example": "1996-12-19T16:39:57-08:00", "format": "date-time"}, "valid-to": {"type": "string", "description": "Time this record was retracted", "example": "1996-12-19T16:39:57-08:00", "format": "date-time"}}, "example": {"aspect": "{...}", "asserter": "urn:ivcap:principal:123e4567-e89b-12d3-a456-426614174000", "entity": "urn:blue:transect.1", "id": "urn:ivcap:record:123e4567-e89b-12d3-a456-426614174000", "links": [{"href": "https://api.ivcap.net/1/....", "rel": "self", "type": "application/json"}, {"href": "https://api.ivcap.net/1/openapi/openapi3.json#/components/schemas/user", "rel": "describedBy", "type": "application/json"}], "revoker": "urn:ivcap:principal:123e4567-e89b-12d3-a456-426614174000", "schema": "urn:blue:schema.image", "valid-from": "1996-12-19T16:39:57-08:00", "valid-to": "1996-12-19T16:39:57-08:00"}, "required": ["links", "id", "entity", "schema", "aspect", "valid-from", "asserter"]}, "NotImplementedT": {"type": "object", "properties": {"message": {"type": "string", "description": "Information message", "default": "Method not implemented", "example": "Fuga ipsam quo."}}, "description": "Method is not yet implemented", "example": {"message": "Et beatae laboriosam et accusamus maxime."}, "required": ["message"]}, "OrderListItem": {"type": "object", "properties": {"account": {"type": "string", "description": "Reference to billable account", "example": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "format": "uri"}, "finished-at": {"type": "string", "description": "DateTime order processing finished", "example": "1996-12-19T16:39:57-08:00", "format": "date-time"}, "href": {"type": "string", "example": "https://api.ivcap.net/1/orders/..."}, "id": {"type": "string", "description": "ID", "example": "urn:ivcap:order:123e4567-e89b-12d3-a456-426614174000", "format": "uuid"}, "name": {"type": "string", "description": "Optional customer provided name", "example": "Fire risk for Lot2"}, "ordered-at": {"type": "string", "description": "DateTime order was placed", "example": "1996-12-19T16:39:57-08:00", "format": "date-time"}, "service": {"type": "string", "description": "Reference to service requested", "example": "urn:ivcap:service:123e4567-e89b-12d3-a456-426614174000", "format": "uri"}, "started-at": {"type": "string", "description": "DateTime order processing started", "example": "1996-12-19T16:39:57-08:00", "format": "date-time"}, "status": {"type": "string", "description": "Order status", "example": "failed", "enum": ["unknown", "pending", "scheduled", "executing", "succeeded", "failed", "error"]}}, "example": {"account": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "finished-at": "1996-12-19T16:39:57-08:00", "href": "https://api.ivcap.net/1/orders/...", "id": "urn:ivcap:order:123e4567-e89b-12d3-a456-426614174000", "name": "Fire risk for Lot2", "ordered-at": "1996-12-19T16:39:57-08:00", "service": "urn:ivcap:service:123e4567-e89b-12d3-a456-426614174000", "started-at": "1996-12-19T16:39:57-08:00", "status": "scheduled"}, "required": ["id", "status", "service", "account", "href"]}, "OrderListRT": {"type": "object", "properties": {"at-time": {"type": "string", "description": "Time at which this list was valid", "example": "1996-12-19T16:39:57-08:00", "format": "date-time"}, "items": {"type": "array", "items": {"$ref": "#/components/schemas/OrderListItem"}, "description": "Orders", "example": [{"account": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "finished-at": "1996-12-19T16:39:57-08:00", "href": "https://api.ivcap.net/1/orders/...", "id": "urn:ivcap:order:123e4567-e89b-12d3-a456-426614174000", "name": "Fire risk for Lot2", "ordered-at": "1996-12-19T16:39:57-08:00", "service": "urn:ivcap:service:123e4567-e89b-12d3-a456-426614174000", "started-at": "1996-12-19T16:39:57-08:00", "status": "error"}, {"account": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "finished-at": "1996-12-19T16:39:57-08:00", "href": "https://api.ivcap.net/1/orders/...", "id": "urn:ivcap:order:123e4567-e89b-12d3-a456-426614174000", "name": "Fire risk for Lot2", "ordered-at": "1996-12-19T16:39:57-08:00", "service": "urn:ivcap:service:123e4567-e89b-12d3-a456-426614174000", "started-at": "1996-12-19T16:39:57-08:00", "status": "error"}, {"account": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "finished-at": "1996-12-19T16:39:57-08:00", "href": "https://api.ivcap.net/1/orders/...", "id": "urn:ivcap:order:123e4567-e89b-12d3-a456-426614174000", "name": "Fire risk for Lot2", "ordered-at": "1996-12-19T16:39:57-08:00", "service": "urn:ivcap:service:123e4567-e89b-12d3-a456-426614174000", "started-at": "1996-12-19T16:39:57-08:00", "status": "error"}, {"account": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "finished-at": "1996-12-19T16:39:57-08:00", "href": "https://api.ivcap.net/1/orders/...", "id": "urn:ivcap:order:123e4567-e89b-12d3-a456-426614174000", "name": "Fire risk for Lot2", "ordered-at": "1996-12-19T16:39:57-08:00", "service": "urn:ivcap:service:123e4567-e89b-12d3-a456-426614174000", "started-at": "1996-12-19T16:39:57-08:00", "status": "error"}]}, "links": {"type": "array", "items": {"$ref": "#/components/schemas/LinkT"}, "example": [{"href": "https://api.ivcap.net/1/....", "rel": "self", "type": "application/json"}, {"href": "https://api.ivcap.net/1/....", "rel": "first", "type": "application/json"}, {"href": "https://api.ivcap.net/1/....", "rel": "next", "type": "application/json"}, {"href": "https://api.ivcap.net/1/openapi/openapi3.json#/components/schemas/user", "rel": "describedBy", "type": "application/openapi3+json"}]}}, "example": {"at-time": "1996-12-19T16:39:57-08:00", "items": [{"account": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "finished-at": "1996-12-19T16:39:57-08:00", "href": "https://api.ivcap.net/1/orders/...", "id": "urn:ivcap:order:123e4567-e89b-12d3-a456-426614174000", "name": "Fire risk for Lot2", "ordered-at": "1996-12-19T16:39:57-08:00", "service": "urn:ivcap:service:123e4567-e89b-12d3-a456-426614174000", "started-at": "1996-12-19T16:39:57-08:00", "status": "error"}, {"account": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "finished-at": "1996-12-19T16:39:57-08:00", "href": "https://api.ivcap.net/1/orders/...", "id": "urn:ivcap:order:123e4567-e89b-12d3-a456-426614174000", "name": "Fire risk for Lot2", "ordered-at": "1996-12-19T16:39:57-08:00", "service": "urn:ivcap:service:123e4567-e89b-12d3-a456-426614174000", "started-at": "1996-12-19T16:39:57-08:00", "status": "error"}], "links": [{"href": "https://api.ivcap.net/1/....", "rel": "self", "type": "application/json"}, {"href": "https://api.ivcap.net/1/....", "rel": "first", "type": "application/json"}, {"href": "https://api.ivcap.net/1/....", "rel": "next", "type": "application/json"}, {"href": "https://api.ivcap.net/1/openapi/openapi3.json#/components/schemas/user", "rel": "describedBy", "type": "application/openapi3+json"}]}, "required": ["items", "at-time", "links"]}, "OrderRequestT": {"type": "object", "properties": {"name": {"type": "string", "description": "Optional customer provided name", "example": "Fire risk for Lot2"}, "parameters": {"type": "array", "items": {"$ref": "#/components/schemas/ParameterT"}, "description": "Service parameters", "example": [{"name": "region", "value": "Upper Valley"}, {"name": "threshold", "value": "10"}]}, "policy": {"type": "string", "description": "Reference to policy used", "example": "urn:ivcap:policy:123e4567-e89b-12d3-a456-426614174000", "format": "uri"}, "service": {"type": "string", "description": "Reference to service requested", "example": "urn:ivcap:service:123e4567-e89b-12d3-a456-426614174000", "format": "uri"}, "tags": {"type": "array", "items": {"type": "string", "example": "Est quisquam doloribus labore est recusandae repudiandae."}, "description": "Optional customer provided tags", "example": ["tag1", "tag2"]}}, "example": {"name": "Fire risk for Lot2", "parameters": [{"name": "region", "value": "Upper Valley"}, {"name": "threshold", "value": "10"}], "policy": "urn:ivcap:policy:123e4567-e89b-12d3-a456-426614174000", "service": "urn:ivcap:service:123e4567-e89b-12d3-a456-426614174000", "tags": ["tag1", "tag2"]}, "required": ["service", "parameters"]}, "OrderStatusRT": {"type": "object", "properties": {"account": {"type": "string", "description": "Reference to billable account", "example": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "format": "uri"}, "finished-at": {"type": "string", "description": "DateTime order processing finished", "example": "1996-12-19T16:39:57-08:00", "format": "date-time"}, "id": {"type": "string", "description": "ID", "example": "urn:ivcap:order:123e4567-e89b-12d3-a456-426614174000", "format": "uuid"}, "links": {"type": "array", "items": {"$ref": "#/components/schemas/LinkT"}, "example": [{"href": "https://api.ivcap.net/1/....", "rel": "self", "type": "application/json"}, {"href": "https://api.ivcap.net/1/openapi/openapi3.json#/components/schemas/user", "rel": "describedBy", "type": "application/json"}]}, "name": {"type": "string", "description": "Optional customer provided name", "example": "Fire risk for Lot2"}, "ordered-at": {"type": "string", "description": "DateTime order was placed", "example": "1996-12-19T16:39:57-08:00", "format": "date-time"}, "parameters": {"type": "array", "items": {"$ref": "#/components/schemas/ParameterT"}, "description": "Service parameters", "example": [{"name": "region", "value": "Upper Valley"}, {"name": "threshold", "value": "10"}]}, "products": {"$ref": "#/components/schemas/PartialProductListT"}, "service": {"type": "string", "description": "Reference to service requested", "example": "urn:ivcap:service:123e4567-e89b-12d3-a456-426614174000", "format": "uri"}, "started-at": {"type": "string", "description": "DateTime order processing started", "example": "1996-12-19T16:39:57-08:00", "format": "date-time"}, "status": {"type": "string", "description": "Order status", "example": "unknown", "enum": ["unknown", "pending", "scheduled", "executing", "succeeded", "failed", "error"]}, "tags": {"type": "array", "items": {"type": "string", "example": "Non occaecati sit."}, "description": "Optional customer provided tags", "example": ["tag1", "tag2"]}}, "example": {"account": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "finished-at": "1996-12-19T16:39:57-08:00", "id": "urn:ivcap:order:123e4567-e89b-12d3-a456-426614174000", "links": [{"href": "https://api.ivcap.net/1/....", "rel": "self", "type": "application/json"}, {"href": "https://api.ivcap.net/1/openapi/openapi3.json#/components/schemas/user", "rel": "describedBy", "type": "application/json"}], "name": "Fire risk for Lot2", "ordered-at": "1996-12-19T16:39:57-08:00", "parameters": [{"name": "region", "value": "Upper Valley"}, {"name": "threshold", "value": "10"}], "products": {"items": [{"data-href": "https:/.../1/artifacts/0000-00001220/blob", "href": "https:/.../1/artifacts/0000-00001220", "mime-type": "image/geo+tiff", "name": "fire risk map", "size": 1234963}], "links": [{"href": "https://api.ivcap.net/1/....", "rel": "next"}]}, "service": "urn:ivcap:service:123e4567-e89b-12d3-a456-426614174000", "started-at": "1996-12-19T16:39:57-08:00", "status": "pending", "tags": ["tag1", "tag2"]}, "required": ["links", "id", "status", "products", "service", "account", "parameters"]}, "OrderTopRequestT": {"type": "object", "properties": {"namespace-name": {"type": "string", "description": "Reference to namespace name", "example": "ivcap-develop-runner"}, "order": {"type": "string", "description": "Reference to order", "example": "urn:ivcap:order:123e4567-e89b-12d3-a456-426614174000", "format": "uri"}}, "example": {"namespace-name": "ivcap-develop-runner", "order": "urn:ivcap:order:123e4567-e89b-12d3-a456-426614174000"}, "required": ["order"]}, "OrderTopResultItem": {"type": "object", "properties": {"container": {"type": "string", "description": "container", "example": "Excepturi quia qui perspiciatis laboriosam et."}, "cpu": {"type": "string", "description": "cpu", "example": "Voluptatum quas voluptatem deserunt dolores vel."}, "ephemeral-storage": {"type": "string", "description": "ephemeral-storage", "example": "Aut illo doloremque aut maxime."}, "memory": {"type": "string", "description": "memory", "example": "Omnis maxime rerum aut voluptates."}, "storage": {"type": "string", "description": "storage", "example": "Nam consectetur sapiente at."}}, "example": {"container": "Sequi quisquam sunt enim officiis non.", "cpu": "Debitis maxime inventore labore.", "ephemeral-storage": "Possimus suscipit quos.", "memory": "Dolorum provident.", "storage": "Nam dicta dicta exercitationem consectetur mollitia ab."}, "required": ["container", "cpu", "memory", "storage", "ephemeral-storage"]}, "OrderTopResultItemCollection": {"type": "array", "items": {"$ref": "#/components/schemas/OrderTopResultItem"}, "example": [{"container": "Quia itaque tempora.", "cpu": "Est soluta ut assumenda.", "ephemeral-storage": "Accusamus ea et recusandae.", "memory": "Non dolorum nihil esse officia a.", "storage": "Officiis et ea saepe."}, {"container": "Quia itaque tempora.", "cpu": "Est soluta ut assumenda.", "ephemeral-storage": "Accusamus ea et recusandae.", "memory": "Non dolorum nihil esse officia a.", "storage": "Officiis et ea saepe."}, {"container": "Quia itaque tempora.", "cpu": "Est soluta ut assumenda.", "ephemeral-storage": "Accusamus ea et recusandae.", "memory": "Non dolorum nihil esse officia a.", "storage": "Officiis et ea saepe."}, {"container": "Quia itaque tempora.", "cpu": "Est soluta ut assumenda.", "ephemeral-storage": "Accusamus ea et recusandae.", "memory": "Non dolorum nihil esse officia a.", "storage": "Officiis et ea saepe."}]}, "ParameterDefT": {"type": "object", "properties": {"constant": {"type": "boolean", "example": true}, "default": {"type": "string", "example": "Repellendus ipsum quasi."}, "description": {"type": "string", "example": "Enim porro ex dolores culpa vero asperiores."}, "label": {"type": "string", "example": "Optio minima et quisquam ipsum rem dolore."}, "name": {"type": "string", "example": "Quibusdam nemo maxime qui expedita quasi natus."}, "optional": {"type": "boolean", "example": true}, "options": {"type": "array", "items": {"$ref": "#/components/schemas/ParameterOptT"}, "example": [{"description": "Nulla sunt nesciunt architecto.", "value": "Repellendus quos magni magni."}, {"description": "Nulla sunt nesciunt architecto.", "value": "Repellendus quos magni magni."}, {"description": "Nulla sunt nesciunt architecto.", "value": "Repellendus quos magni magni."}]}, "type": {"type": "string", "example": "Qui est nostrum."}, "unary": {"type": "boolean", "example": false}, "unit": {"type": "string", "example": "Amet neque."}}, "example": {"constant": false, "default": "Est nostrum.", "description": "Natus quaerat veritatis at aut sed.", "label": "Quo est omnis dicta incidunt impedit.", "name": "Consequatur quidem eum velit.", "optional": false, "options": [{"description": "Nulla sunt nesciunt architecto.", "value": "Repellendus quos magni magni."}, {"description": "Nulla sunt nesciunt architecto.", "value": "Repellendus quos magni magni."}], "type": "Molestiae accusantium suscipit nisi labore omnis modi.", "unary": false, "unit": "Dolor natus nihil expedita voluptatum recusandae."}}, "ParameterOptT": {"type": "object", "properties": {"description": {"type": "string", "example": "Vel vero."}, "value": {"type": "string", "example": "Vitae eum dolor deserunt quas ut."}}, "example": {"description": "Nihil itaque quia.", "value": "Asperiores ipsa labore."}}, "ParameterT": {"type": "object", "properties": {"name": {"type": "string", "example": "Dolore voluptatem."}, "value": {"type": "string", "example": "Dolore magni beatae incidunt voluptas."}}, "example": {"name": "Debitis est quis dolorem incidunt maiores et.", "value": "Quo soluta."}}, "PartialProductListT": {"type": "object", "properties": {"items": {"type": "array", "items": {"$ref": "#/components/schemas/ProductListItemT"}, "description": "(Partial) list of products delivered by this order", "example": [{"data-href": "https:/.../1/artifacts/0000-00001220/blob", "href": "https:/.../1/artifacts/0000-00001220", "mime-type": "image/geo+tiff", "name": "fire risk map", "size": 1234963}]}, "links": {"type": "array", "items": {"$ref": "#/components/schemas/LinkT"}, "description": "Links to more products, if there are any", "example": [{"href": "https://api.ivcap.net/1/....", "rel": "next"}]}}, "example": {"items": [{"data-href": "https:/.../1/artifacts/0000-00001220/blob", "href": "https:/.../1/artifacts/0000-00001220", "mime-type": "image/geo+tiff", "name": "fire risk map", "size": 1234963}], "links": [{"href": "https://api.ivcap.net/1/....", "rel": "next"}]}, "required": ["items", "links"]}, "ProductListItemT": {"type": "object", "properties": {"data-href": {"type": "string", "example": "https://api.ivcap.net/1/artifacts/.../data"}, "href": {"type": "string", "example": "https://api.ivcap.net/1/artifacts/..."}, "id": {"type": "string", "example": "Reiciendis similique repellendus et."}, "mime-type": {"type": "string", "example": "Consequatur minima ut."}, "name": {"type": "string", "example": "Fugit alias velit."}, "size": {"type": "integer", "example": 6780460244455532622, "format": "int64"}, "status": {"type": "string", "example": "Aut at."}}, "example": {"data-href": "https://api.ivcap.net/1/artifacts/.../data", "href": "https://api.ivcap.net/1/artifacts/...", "id": "Iste nemo et harum hic qui voluptas.", "mime-type": "Quia ut nostrum est suscipit.", "name": "Repellendus eos labore quasi assumenda aut.", "size": 8547589159855797663, "status": "Commodi non."}, "required": ["id", "status", "href"]}, "ReferenceT": {"type": "object", "properties": {"title": {"type": "string", "description": "Title of reference document", "example": "Reprehenderit explicabo quaerat."}, "uri": {"type": "string", "description": "Link to document", "example": "http://hodkiewicz.net/reid", "format": "uri"}}, "example": {"title": "Ullam illum assumenda explicabo aut.", "uri": "http://harris.info/shawna_hilll"}}, "ResourceMemoryT": {"type": "object", "properties": {"limit": {"type": "string", "description": "minimal requirements [system limit]", "example": "Blanditiis nihil eligendi."}, "request": {"type": "string", "description": "minimal requirements [0]", "example": "Qui necessitatibus quidem sint doloremque."}}, "description": "See https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#resource-units-in-kubernetes for units", "example": {"limit": "Accusamus doloremque et dolor ullam dolorem hic.", "request": "Cumque qui pariatur sint corrupti."}}, "ResourceNotFoundT": {"type": "object", "properties": {"id": {"type": "string", "description": "ID of missing resource", "example": "cayp:type:123e4567-e89b-12d3-a456-426614174000", "format": "uri"}, "message": {"type": "string", "description": "Message of error", "example": "Resource 123...00 not found"}}, "description": "aspect not found", "example": {"id": "cayp:type:123e4567-e89b-12d3-a456-426614174000", "message": "Resource 123...00 not found"}, "required": ["message", "id"]}, "ServiceDefinitionT": {"type": "object", "properties": {"banner": {"type": "string", "description": "Link to banner image optionally used for this service", "example": "http://koelpin.info/loraine_wyman", "format": "uri"}, "description": {"type": "string", "description": "More detailed description of the service", "example": "This service ..."}, "name": {"type": "string", "description": "Optional provider provided name", "example": "Fire risk for Lot2"}, "parameters": {"type": "array", "items": {"$ref": "#/components/schemas/ParameterDefT"}, "description": "Service parameter definitions", "example": [{"description": "The name of the region as according to ...", "label": "Region Name", "name": "region", "type": "string"}, {"label": "Rainfall/month threshold", "name": "threshold", "type": "float", "unit": "m"}]}, "policy": {"type": "string", "description": "Reference to policy used", "example": "urn:ivcap:policy:123e4567-e89b-12d3-a456-426614174000", "format": "uri"}, "references": {"type": "array", "items": {"$ref": "#/components/schemas/ReferenceT"}, "description": "Reference to account revenues for this service should be credited to", "example": [{"title": "Sint aut ut magni voluptatem quae.", "uri": "http://gerhold.net/ralph"}, {"title": "Sint aut ut magni voluptatem quae.", "uri": "http://gerhold.net/ralph"}]}, "tags": {"type": "array", "items": {"type": "string", "example": "Quis voluptate quis ipsa repudiandae quidem eos."}, "description": "Optional provider provided tags", "example": ["tag1", "tag2"]}, "workflow": {"$ref": "#/components/schemas/WorkflowT"}}, "example": {"banner": "http://schmeler.info/carlotta", "description": "This service ...", "name": "Fire risk for Lot2", "parameters": [{"description": "The name of the region as according to ...", "label": "Region Name", "name": "region", "type": "string"}, {"label": "Rainfall/month threshold", "name": "threshold", "type": "float", "unit": "m"}], "policy": "urn:ivcap:policy:123e4567-e89b-12d3-a456-426614174000", "references": [{"title": "Sint aut ut magni voluptatem quae.", "uri": "http://gerhold.net/ralph"}, {"title": "Sint aut ut magni voluptatem quae.", "uri": "http://gerhold.net/ralph"}], "tags": ["tag1", "tag2"], "workflow": {"argo": "Modi inventore voluptatem.", "basic": {"command": ["/bin/sh", "-c", "echo $PATH"], "cpu": {"limit": "100m", "request": "10m"}, "ephemeral-storage": {"limit": "4Gi", "request": "2Gi"}, "image": "alpine", "memory": {"limit": "100Mi", "request": "10Mi"}}, "opts": "Vel et voluptas voluptatem ea.", "type": "basic"}}, "required": ["description", "workflow", "parameters"]}, "ServiceListItem": {"type": "object", "properties": {"account": {"type": "string", "description": "Reference to billable account", "example": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "format": "uri"}, "description": {"type": "string", "description": "Optional description of the service", "example": "Some lengthy description of fire risk"}, "href": {"type": "string", "example": "https://api.ivcap.net/1/services/..."}, "id": {"type": "string", "description": "ID", "example": "urn:ivcap:order:123e4567-e89b-12d3-a456-426614174000", "format": "uuid"}, "name": {"type": "string", "description": "Optional customer provided name", "example": "Fire risk for region"}}, "example": {"account": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "description": "Some lengthy description of fire risk", "href": "https://api.ivcap.net/1/services/...", "id": "urn:ivcap:order:123e4567-e89b-12d3-a456-426614174000", "name": "Fire risk for region"}, "required": ["id", "account", "href"]}, "ServiceListRT": {"type": "object", "properties": {"at-time": {"type": "string", "description": "Time at which this list was valid", "example": "1996-12-19T16:39:57-08:00", "format": "date-time"}, "items": {"type": "array", "items": {"$ref": "#/components/schemas/ServiceListItem"}, "description": "Services", "example": [{"account": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "description": "Some lengthy description of fire risk", "href": "https://api.ivcap.net/1/services/...", "id": "urn:ivcap:order:123e4567-e89b-12d3-a456-426614174000", "name": "Fire risk for region"}, {"account": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "description": "Some lengthy description of fire risk", "href": "https://api.ivcap.net/1/services/...", "id": "urn:ivcap:order:123e4567-e89b-12d3-a456-426614174000", "name": "Fire risk for region"}, {"account": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "description": "Some lengthy description of fire risk", "href": "https://api.ivcap.net/1/services/...", "id": "urn:ivcap:order:123e4567-e89b-12d3-a456-426614174000", "name": "Fire risk for region"}]}, "links": {"type": "array", "items": {"$ref": "#/components/schemas/LinkT"}, "example": [{"href": "https://api.ivcap.net/1/....", "rel": "self", "type": "application/json"}, {"href": "https://api.ivcap.net/1/....", "rel": "first", "type": "application/json"}, {"href": "https://api.ivcap.net/1/....", "rel": "next", "type": "application/json"}, {"href": "https://api.ivcap.net/1/openapi/openapi3.json#/components/schemas/user", "rel": "describedBy", "type": "application/openapi3+json"}]}}, "example": {"at-time": "1996-12-19T16:39:57-08:00", "items": [{"account": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "description": "Some lengthy description of fire risk", "href": "https://api.ivcap.net/1/services/...", "id": "urn:ivcap:order:123e4567-e89b-12d3-a456-426614174000", "name": "Fire risk for region"}, {"account": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "description": "Some lengthy description of fire risk", "href": "https://api.ivcap.net/1/services/...", "id": "urn:ivcap:order:123e4567-e89b-12d3-a456-426614174000", "name": "Fire risk for region"}, {"account": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "description": "Some lengthy description of fire risk", "href": "https://api.ivcap.net/1/services/...", "id": "urn:ivcap:order:123e4567-e89b-12d3-a456-426614174000", "name": "Fire risk for region"}, {"account": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "description": "Some lengthy description of fire risk", "href": "https://api.ivcap.net/1/services/...", "id": "urn:ivcap:order:123e4567-e89b-12d3-a456-426614174000", "name": "Fire risk for region"}], "links": [{"href": "https://api.ivcap.net/1/....", "rel": "self", "type": "application/json"}, {"href": "https://api.ivcap.net/1/....", "rel": "first", "type": "application/json"}, {"href": "https://api.ivcap.net/1/....", "rel": "next", "type": "application/json"}, {"href": "https://api.ivcap.net/1/openapi/openapi3.json#/components/schemas/user", "rel": "describedBy", "type": "application/openapi3+json"}]}, "required": ["items", "at-time", "links"]}, "ServiceStatusRT": {"type": "object", "properties": {"account": {"type": "string", "description": "Reference to billable account", "example": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "format": "uri"}, "description": {"type": "string", "description": "More detailed description of the service", "example": "This service ..."}, "id": {"type": "string", "description": "ID", "example": "urn:ivcap:service:123e4567-e89b-12d3-a456-426614174000", "format": "uuid"}, "links": {"type": "array", "items": {"$ref": "#/components/schemas/LinkT"}, "example": [{"href": "https://api.ivcap.net/1/....", "rel": "self", "type": "application/json"}, {"href": "https://api.ivcap.net/1/openapi/openapi3.json#/components/schemas/user", "rel": "describedBy", "type": "application/json"}]}, "name": {"type": "string", "description": "Optional provider provided name", "example": "Fire risk for Lot2"}, "parameters": {"type": "array", "items": {"$ref": "#/components/schemas/ParameterDefT"}, "description": "Service parameter definitions", "example": [{"description": "The name of the region as according to ...", "label": "Region Name", "name": "region", "type": "string"}, {"label": "Rainfall/month threshold", "name": "threshold", "type": "float", "unit": "m"}]}, "status": {"type": "string", "description": "Service status", "example": "inactive", "enum": ["active", "inactive", "error"]}, "tags": {"type": "array", "items": {"type": "string", "example": "Illum est veniam provident et."}, "description": "Optional provider provided tags", "example": ["tag1", "tag2"]}}, "example": {"account": "urn:ivcap:account:123e4567-e89b-12d3-a456-426614174000", "description": "This service ...", "id": "urn:ivcap:service:123e4567-e89b-12d3-a456-426614174000", "links": [{"href": "https://api.ivcap.net/1/....", "rel": "self", "type": "application/json"}, {"href": "https://api.ivcap.net/1/openapi/openapi3.json#/components/schemas/user", "rel": "describedBy", "type": "application/json"}], "name": "Fire risk for Lot2", "parameters": [{"description": "The name of the region as according to ...", "label": "Region Name", "name": "region", "type": "string"}, {"label": "Rainfall/month threshold", "name": "threshold", "type": "float", "unit": "m"}], "status": "active", "tags": ["tag1", "tag2"]}, "required": ["links", "id", "status", "account", "parameters"]}, "WorkflowT": {"type": "object", "properties": {"argo": {"type": "string", "description": "Defines the workflow using argo's WF schema", "example": "Et dolore qui dolores est dolorum rerum.", "format": "binary"}, "basic": {"$ref": "#/components/schemas/BasicWorkflowOptsT"}, "opts": {"type": "string", "description": "Type specific options - left for backward compatibility, if possible use type specific elements", "example": "Totam voluptas.", "format": "binary"}, "type": {"type": "string", "description": "Type of workflow", "example": "basic"}}, "description": "Defines the workflow to use to execute this service. Currently supported 'types' are 'basic'\n\tand 'argo'. In case of 'basic', use the 'basic' element for further parameters. In the current implementation\n\t'opts' is expected to contain the same schema as 'basic'", "example": {"argo": "Ipsa consequatur distinctio necessitatibus.", "basic": {"command": ["/bin/sh", "-c", "echo $PATH"], "cpu": {"limit": "100m", "request": "10m"}, "ephemeral-storage": {"limit": "4Gi", "request": "2Gi"}, "image": "alpine", "memory": {"limit": "100Mi", "request": "10Mi"}}, "opts": "Et vel beatae.", "type": "basic"}, "required": ["type"]}}, "securitySchemes": {"jwt_header_Authorization": {"type": "http", "description": "Secures endpoint by requiring a valid JWT token", "scheme": "bearer"}}}, "tags": [{"name": "openapi", "description": "The openapi service serves the OpenAPI definition."}, {"name": "aspect", "description": "Manages the life cycle of aspect(s) attached to an entity."}, {"name": "artifact", "description": "Manage the life cycle of an artifact stored by this deployment."}, {"name": "metadata", "description": "Manages the life cycle of metadata attached to an entity."}, {"name": "order", "description": "Manage the life cycle of an order for CRE services."}, {"name": "service", "description": "Manage the life cycle of a service offered on the CRE marketplace."}]}
